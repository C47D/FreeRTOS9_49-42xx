ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"queue.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvIsQueueFull,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	prvIsQueueFull, %function
  24              	prvIsQueueFull:
  25              	.LFB55:
  26              		.file 1 "..\\FreeRTOS9\\queue.c"
   1:..\FreeRTOS9/queue.c **** /*
   2:..\FreeRTOS9/queue.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:..\FreeRTOS9/queue.c ****     All rights reserved
   4:..\FreeRTOS9/queue.c **** 
   5:..\FreeRTOS9/queue.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:..\FreeRTOS9/queue.c **** 
   7:..\FreeRTOS9/queue.c ****     This file is part of the FreeRTOS distribution.
   8:..\FreeRTOS9/queue.c **** 
   9:..\FreeRTOS9/queue.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:..\FreeRTOS9/queue.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:..\FreeRTOS9/queue.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:..\FreeRTOS9/queue.c **** 
  13:..\FreeRTOS9/queue.c ****     ***************************************************************************
  14:..\FreeRTOS9/queue.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:..\FreeRTOS9/queue.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:..\FreeRTOS9/queue.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:..\FreeRTOS9/queue.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:..\FreeRTOS9/queue.c ****     ***************************************************************************
  19:..\FreeRTOS9/queue.c **** 
  20:..\FreeRTOS9/queue.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:..\FreeRTOS9/queue.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:..\FreeRTOS9/queue.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:..\FreeRTOS9/queue.c ****     link: http://www.freertos.org/a00114.html
  24:..\FreeRTOS9/queue.c **** 
  25:..\FreeRTOS9/queue.c ****     ***************************************************************************
  26:..\FreeRTOS9/queue.c ****      *                                                                       *
  27:..\FreeRTOS9/queue.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:..\FreeRTOS9/queue.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:..\FreeRTOS9/queue.c ****      *    platform software that is more than just the market leader, it     *
  30:..\FreeRTOS9/queue.c ****      *    is the industry's de facto standard.                               *
  31:..\FreeRTOS9/queue.c ****      *                                                                       *
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 2


  32:..\FreeRTOS9/queue.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:..\FreeRTOS9/queue.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:..\FreeRTOS9/queue.c ****      *    tutorial book, reference manual, or both:                          *
  35:..\FreeRTOS9/queue.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:..\FreeRTOS9/queue.c ****      *                                                                       *
  37:..\FreeRTOS9/queue.c ****     ***************************************************************************
  38:..\FreeRTOS9/queue.c **** 
  39:..\FreeRTOS9/queue.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:..\FreeRTOS9/queue.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:..\FreeRTOS9/queue.c ****     defined configASSERT()?
  42:..\FreeRTOS9/queue.c **** 
  43:..\FreeRTOS9/queue.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:..\FreeRTOS9/queue.c ****     embedded software for free we request you assist our global community by
  45:..\FreeRTOS9/queue.c ****     participating in the support forum.
  46:..\FreeRTOS9/queue.c **** 
  47:..\FreeRTOS9/queue.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:..\FreeRTOS9/queue.c ****     be as productive as possible as early as possible.  Now you can receive
  49:..\FreeRTOS9/queue.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:..\FreeRTOS9/queue.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:..\FreeRTOS9/queue.c **** 
  52:..\FreeRTOS9/queue.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:..\FreeRTOS9/queue.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:..\FreeRTOS9/queue.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:..\FreeRTOS9/queue.c **** 
  56:..\FreeRTOS9/queue.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:..\FreeRTOS9/queue.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:..\FreeRTOS9/queue.c **** 
  59:..\FreeRTOS9/queue.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:..\FreeRTOS9/queue.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:..\FreeRTOS9/queue.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:..\FreeRTOS9/queue.c **** 
  63:..\FreeRTOS9/queue.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:..\FreeRTOS9/queue.c ****     engineered and independently SIL3 certified version for use in safety and
  65:..\FreeRTOS9/queue.c ****     mission critical applications that require provable dependability.
  66:..\FreeRTOS9/queue.c **** 
  67:..\FreeRTOS9/queue.c ****     1 tab == 4 spaces!
  68:..\FreeRTOS9/queue.c **** */
  69:..\FreeRTOS9/queue.c **** 
  70:..\FreeRTOS9/queue.c **** #include <stdlib.h>
  71:..\FreeRTOS9/queue.c **** #include <string.h>
  72:..\FreeRTOS9/queue.c **** 
  73:..\FreeRTOS9/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  74:..\FreeRTOS9/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  75:..\FreeRTOS9/queue.c **** task.h is included from an application file. */
  76:..\FreeRTOS9/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  77:..\FreeRTOS9/queue.c **** 
  78:..\FreeRTOS9/queue.c **** #include "FreeRTOS.h"
  79:..\FreeRTOS9/queue.c **** #include "task.h"
  80:..\FreeRTOS9/queue.c **** #include "queue.h"
  81:..\FreeRTOS9/queue.c **** 
  82:..\FreeRTOS9/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  83:..\FreeRTOS9/queue.c **** 	#include "croutine.h"
  84:..\FreeRTOS9/queue.c **** #endif
  85:..\FreeRTOS9/queue.c **** 
  86:..\FreeRTOS9/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  87:..\FreeRTOS9/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  88:..\FreeRTOS9/queue.c **** header files above, but not in this file, in order to generate the correct
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 3


  89:..\FreeRTOS9/queue.c **** privileged Vs unprivileged linkage and placement. */
  90:..\FreeRTOS9/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  91:..\FreeRTOS9/queue.c **** 
  92:..\FreeRTOS9/queue.c **** 
  93:..\FreeRTOS9/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  94:..\FreeRTOS9/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  95:..\FreeRTOS9/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  96:..\FreeRTOS9/queue.c **** 
  97:..\FreeRTOS9/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  98:..\FreeRTOS9/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  99:..\FreeRTOS9/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
 100:..\FreeRTOS9/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
 101:..\FreeRTOS9/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
 102:..\FreeRTOS9/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
 103:..\FreeRTOS9/queue.c **** the code is maintained despite this dual use of two structure members.  An
 104:..\FreeRTOS9/queue.c **** alternative implementation would be to use a union, but use of a union is
 105:..\FreeRTOS9/queue.c **** against the coding standard (although an exception to the standard has been
 106:..\FreeRTOS9/queue.c **** permitted where the dual use also significantly changes the type of the
 107:..\FreeRTOS9/queue.c **** structure member). */
 108:..\FreeRTOS9/queue.c **** #define pxMutexHolder					pcTail
 109:..\FreeRTOS9/queue.c **** #define uxQueueType						pcHead
 110:..\FreeRTOS9/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
 111:..\FreeRTOS9/queue.c **** 
 112:..\FreeRTOS9/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
 113:..\FreeRTOS9/queue.c **** zero. */
 114:..\FreeRTOS9/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
 115:..\FreeRTOS9/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
 116:..\FreeRTOS9/queue.c **** 
 117:..\FreeRTOS9/queue.c **** #if( configUSE_PREEMPTION == 0 )
 118:..\FreeRTOS9/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 119:..\FreeRTOS9/queue.c **** 	performed just because a higher priority task has been woken. */
 120:..\FreeRTOS9/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
 121:..\FreeRTOS9/queue.c **** #else
 122:..\FreeRTOS9/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 123:..\FreeRTOS9/queue.c **** #endif
 124:..\FreeRTOS9/queue.c **** 
 125:..\FreeRTOS9/queue.c **** /*
 126:..\FreeRTOS9/queue.c ****  * Definition of the queue used by the scheduler.
 127:..\FreeRTOS9/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
 128:..\FreeRTOS9/queue.c ****  * rationale: http://www.freertos.org/Embedded-RTOS-Queues.html
 129:..\FreeRTOS9/queue.c ****  */
 130:..\FreeRTOS9/queue.c **** typedef struct QueueDefinition
 131:..\FreeRTOS9/queue.c **** {
 132:..\FreeRTOS9/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
 133:..\FreeRTOS9/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
 134:..\FreeRTOS9/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
 135:..\FreeRTOS9/queue.c **** 
 136:..\FreeRTOS9/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
 137:..\FreeRTOS9/queue.c **** 	{
 138:..\FreeRTOS9/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
 139:..\FreeRTOS9/queue.c **** 		UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex h
 140:..\FreeRTOS9/queue.c **** 	} u;
 141:..\FreeRTOS9/queue.c **** 
 142:..\FreeRTOS9/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 143:..\FreeRTOS9/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 144:..\FreeRTOS9/queue.c **** 
 145:..\FreeRTOS9/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 4


 146:..\FreeRTOS9/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 147:..\FreeRTOS9/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 148:..\FreeRTOS9/queue.c **** 
 149:..\FreeRTOS9/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 150:..\FreeRTOS9/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 151:..\FreeRTOS9/queue.c **** 
 152:..\FreeRTOS9/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 153:..\FreeRTOS9/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 154:..\FreeRTOS9/queue.c **** 	#endif
 155:..\FreeRTOS9/queue.c **** 
 156:..\FreeRTOS9/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 157:..\FreeRTOS9/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 158:..\FreeRTOS9/queue.c **** 	#endif
 159:..\FreeRTOS9/queue.c **** 
 160:..\FreeRTOS9/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 161:..\FreeRTOS9/queue.c **** 		UBaseType_t uxQueueNumber;
 162:..\FreeRTOS9/queue.c **** 		uint8_t ucQueueType;
 163:..\FreeRTOS9/queue.c **** 	#endif
 164:..\FreeRTOS9/queue.c **** 
 165:..\FreeRTOS9/queue.c **** } xQUEUE;
 166:..\FreeRTOS9/queue.c **** 
 167:..\FreeRTOS9/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 168:..\FreeRTOS9/queue.c **** name below to enable the use of older kernel aware debuggers. */
 169:..\FreeRTOS9/queue.c **** typedef xQUEUE Queue_t;
 170:..\FreeRTOS9/queue.c **** 
 171:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 172:..\FreeRTOS9/queue.c **** 
 173:..\FreeRTOS9/queue.c **** /*
 174:..\FreeRTOS9/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 175:..\FreeRTOS9/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 176:..\FreeRTOS9/queue.c ****  */
 177:..\FreeRTOS9/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 178:..\FreeRTOS9/queue.c **** 
 179:..\FreeRTOS9/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 180:..\FreeRTOS9/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 181:..\FreeRTOS9/queue.c **** 	more user friendly. */
 182:..\FreeRTOS9/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 183:..\FreeRTOS9/queue.c **** 	{
 184:..\FreeRTOS9/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 185:..\FreeRTOS9/queue.c **** 		QueueHandle_t xHandle;
 186:..\FreeRTOS9/queue.c **** 	} xQueueRegistryItem;
 187:..\FreeRTOS9/queue.c **** 
 188:..\FreeRTOS9/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 189:..\FreeRTOS9/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 190:..\FreeRTOS9/queue.c **** 	debuggers. */
 191:..\FreeRTOS9/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 192:..\FreeRTOS9/queue.c **** 
 193:..\FreeRTOS9/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 194:..\FreeRTOS9/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 195:..\FreeRTOS9/queue.c **** 	array position being vacant. */
 196:..\FreeRTOS9/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 197:..\FreeRTOS9/queue.c **** 
 198:..\FreeRTOS9/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 199:..\FreeRTOS9/queue.c **** 
 200:..\FreeRTOS9/queue.c **** /*
 201:..\FreeRTOS9/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 202:..\FreeRTOS9/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 5


 203:..\FreeRTOS9/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 204:..\FreeRTOS9/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 205:..\FreeRTOS9/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 206:..\FreeRTOS9/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 207:..\FreeRTOS9/queue.c ****  */
 208:..\FreeRTOS9/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 209:..\FreeRTOS9/queue.c **** 
 210:..\FreeRTOS9/queue.c **** /*
 211:..\FreeRTOS9/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 212:..\FreeRTOS9/queue.c ****  *
 213:..\FreeRTOS9/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 214:..\FreeRTOS9/queue.c ****  */
 215:..\FreeRTOS9/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 216:..\FreeRTOS9/queue.c **** 
 217:..\FreeRTOS9/queue.c **** /*
 218:..\FreeRTOS9/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 219:..\FreeRTOS9/queue.c ****  *
 220:..\FreeRTOS9/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 221:..\FreeRTOS9/queue.c ****  */
 222:..\FreeRTOS9/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 223:..\FreeRTOS9/queue.c **** 
 224:..\FreeRTOS9/queue.c **** /*
 225:..\FreeRTOS9/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 226:..\FreeRTOS9/queue.c ****  * back of the queue.
 227:..\FreeRTOS9/queue.c ****  */
 228:..\FreeRTOS9/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 229:..\FreeRTOS9/queue.c **** 
 230:..\FreeRTOS9/queue.c **** /*
 231:..\FreeRTOS9/queue.c ****  * Copies an item out of a queue.
 232:..\FreeRTOS9/queue.c ****  */
 233:..\FreeRTOS9/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 234:..\FreeRTOS9/queue.c **** 
 235:..\FreeRTOS9/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 236:..\FreeRTOS9/queue.c **** 	/*
 237:..\FreeRTOS9/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 238:..\FreeRTOS9/queue.c **** 	 * the queue set that the queue contains data.
 239:..\FreeRTOS9/queue.c **** 	 */
 240:..\FreeRTOS9/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 241:..\FreeRTOS9/queue.c **** #endif
 242:..\FreeRTOS9/queue.c **** 
 243:..\FreeRTOS9/queue.c **** /*
 244:..\FreeRTOS9/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 245:..\FreeRTOS9/queue.c ****  * dynamically to fill in the structure's members.
 246:..\FreeRTOS9/queue.c ****  */
 247:..\FreeRTOS9/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 248:..\FreeRTOS9/queue.c **** 
 249:..\FreeRTOS9/queue.c **** /*
 250:..\FreeRTOS9/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 251:..\FreeRTOS9/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 252:..\FreeRTOS9/queue.c ****  * as a mutex.
 253:..\FreeRTOS9/queue.c ****  */
 254:..\FreeRTOS9/queue.c **** #if( configUSE_MUTEXES == 1 )
 255:..\FreeRTOS9/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 256:..\FreeRTOS9/queue.c **** #endif
 257:..\FreeRTOS9/queue.c **** 
 258:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 259:..\FreeRTOS9/queue.c **** 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 6


 260:..\FreeRTOS9/queue.c **** /*
 261:..\FreeRTOS9/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 262:..\FreeRTOS9/queue.c ****  * accessing the queue event lists.
 263:..\FreeRTOS9/queue.c ****  */
 264:..\FreeRTOS9/queue.c **** #define prvLockQueue( pxQueue )								\
 265:..\FreeRTOS9/queue.c **** 	taskENTER_CRITICAL();									\
 266:..\FreeRTOS9/queue.c **** 	{														\
 267:..\FreeRTOS9/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 268:..\FreeRTOS9/queue.c **** 		{													\
 269:..\FreeRTOS9/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 270:..\FreeRTOS9/queue.c **** 		}													\
 271:..\FreeRTOS9/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 272:..\FreeRTOS9/queue.c **** 		{													\
 273:..\FreeRTOS9/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 274:..\FreeRTOS9/queue.c **** 		}													\
 275:..\FreeRTOS9/queue.c **** 	}														\
 276:..\FreeRTOS9/queue.c **** 	taskEXIT_CRITICAL()
 277:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 278:..\FreeRTOS9/queue.c **** 
 279:..\FreeRTOS9/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 280:..\FreeRTOS9/queue.c **** {
 281:..\FreeRTOS9/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 282:..\FreeRTOS9/queue.c **** 
 283:..\FreeRTOS9/queue.c **** 	configASSERT( pxQueue );
 284:..\FreeRTOS9/queue.c **** 
 285:..\FreeRTOS9/queue.c **** 	taskENTER_CRITICAL();
 286:..\FreeRTOS9/queue.c **** 	{
 287:..\FreeRTOS9/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
 288:..\FreeRTOS9/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 289:..\FreeRTOS9/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 290:..\FreeRTOS9/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 291:..\FreeRTOS9/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 292:..\FreeRTOS9/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 293:..\FreeRTOS9/queue.c **** 
 294:..\FreeRTOS9/queue.c **** 		if( xNewQueue == pdFALSE )
 295:..\FreeRTOS9/queue.c **** 		{
 296:..\FreeRTOS9/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 297:..\FreeRTOS9/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 298:..\FreeRTOS9/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 299:..\FreeRTOS9/queue.c **** 			the queue, then one should be unblocked as after this function exits
 300:..\FreeRTOS9/queue.c **** 			it will be possible to write to it. */
 301:..\FreeRTOS9/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 302:..\FreeRTOS9/queue.c **** 			{
 303:..\FreeRTOS9/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 304:..\FreeRTOS9/queue.c **** 				{
 305:..\FreeRTOS9/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 306:..\FreeRTOS9/queue.c **** 				}
 307:..\FreeRTOS9/queue.c **** 				else
 308:..\FreeRTOS9/queue.c **** 				{
 309:..\FreeRTOS9/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 310:..\FreeRTOS9/queue.c **** 				}
 311:..\FreeRTOS9/queue.c **** 			}
 312:..\FreeRTOS9/queue.c **** 			else
 313:..\FreeRTOS9/queue.c **** 			{
 314:..\FreeRTOS9/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 315:..\FreeRTOS9/queue.c **** 			}
 316:..\FreeRTOS9/queue.c **** 		}
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 7


 317:..\FreeRTOS9/queue.c **** 		else
 318:..\FreeRTOS9/queue.c **** 		{
 319:..\FreeRTOS9/queue.c **** 			/* Ensure the event queues start in the correct state. */
 320:..\FreeRTOS9/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 321:..\FreeRTOS9/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 322:..\FreeRTOS9/queue.c **** 		}
 323:..\FreeRTOS9/queue.c **** 	}
 324:..\FreeRTOS9/queue.c **** 	taskEXIT_CRITICAL();
 325:..\FreeRTOS9/queue.c **** 
 326:..\FreeRTOS9/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 327:..\FreeRTOS9/queue.c **** 	versions. */
 328:..\FreeRTOS9/queue.c **** 	return pdPASS;
 329:..\FreeRTOS9/queue.c **** }
 330:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 331:..\FreeRTOS9/queue.c **** 
 332:..\FreeRTOS9/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 333:..\FreeRTOS9/queue.c **** 
 334:..\FreeRTOS9/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 335:..\FreeRTOS9/queue.c **** 	{
 336:..\FreeRTOS9/queue.c **** 	Queue_t *pxNewQueue;
 337:..\FreeRTOS9/queue.c **** 
 338:..\FreeRTOS9/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 339:..\FreeRTOS9/queue.c **** 
 340:..\FreeRTOS9/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 341:..\FreeRTOS9/queue.c **** 		supplied. */
 342:..\FreeRTOS9/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 343:..\FreeRTOS9/queue.c **** 
 344:..\FreeRTOS9/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 345:..\FreeRTOS9/queue.c **** 		should not be provided if the item size is 0. */
 346:..\FreeRTOS9/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 347:..\FreeRTOS9/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 348:..\FreeRTOS9/queue.c **** 
 349:..\FreeRTOS9/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 350:..\FreeRTOS9/queue.c **** 		{
 351:..\FreeRTOS9/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 352:..\FreeRTOS9/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 353:..\FreeRTOS9/queue.c **** 			the real queue and semaphore structures. */
 354:..\FreeRTOS9/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 355:..\FreeRTOS9/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 356:..\FreeRTOS9/queue.c **** 		}
 357:..\FreeRTOS9/queue.c **** 		#endif /* configASSERT_DEFINED */
 358:..\FreeRTOS9/queue.c **** 
 359:..\FreeRTOS9/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 360:..\FreeRTOS9/queue.c **** 		The address of a statically allocated storage area was also passed in
 361:..\FreeRTOS9/queue.c **** 		but is already set. */
 362:..\FreeRTOS9/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 Unusual cast is ok as the structures are d
 363:..\FreeRTOS9/queue.c **** 
 364:..\FreeRTOS9/queue.c **** 		if( pxNewQueue != NULL )
 365:..\FreeRTOS9/queue.c **** 		{
 366:..\FreeRTOS9/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 367:..\FreeRTOS9/queue.c **** 			{
 368:..\FreeRTOS9/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 369:..\FreeRTOS9/queue.c **** 				note this queue was allocated statically in case the queue is
 370:..\FreeRTOS9/queue.c **** 				later deleted. */
 371:..\FreeRTOS9/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 372:..\FreeRTOS9/queue.c **** 			}
 373:..\FreeRTOS9/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 8


 374:..\FreeRTOS9/queue.c **** 
 375:..\FreeRTOS9/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 376:..\FreeRTOS9/queue.c **** 		}
 377:..\FreeRTOS9/queue.c **** 
 378:..\FreeRTOS9/queue.c **** 		return pxNewQueue;
 379:..\FreeRTOS9/queue.c **** 	}
 380:..\FreeRTOS9/queue.c **** 
 381:..\FreeRTOS9/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 382:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 383:..\FreeRTOS9/queue.c **** 
 384:..\FreeRTOS9/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 385:..\FreeRTOS9/queue.c **** 
 386:..\FreeRTOS9/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 387:..\FreeRTOS9/queue.c **** 	{
 388:..\FreeRTOS9/queue.c **** 	Queue_t *pxNewQueue;
 389:..\FreeRTOS9/queue.c **** 	size_t xQueueSizeInBytes;
 390:..\FreeRTOS9/queue.c **** 	uint8_t *pucQueueStorage;
 391:..\FreeRTOS9/queue.c **** 
 392:..\FreeRTOS9/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 393:..\FreeRTOS9/queue.c **** 
 394:..\FreeRTOS9/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 395:..\FreeRTOS9/queue.c **** 		{
 396:..\FreeRTOS9/queue.c **** 			/* There is not going to be a queue storage area. */
 397:..\FreeRTOS9/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 398:..\FreeRTOS9/queue.c **** 		}
 399:..\FreeRTOS9/queue.c **** 		else
 400:..\FreeRTOS9/queue.c **** 		{
 401:..\FreeRTOS9/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 402:..\FreeRTOS9/queue.c **** 			can be in the queue at any time. */
 403:..\FreeRTOS9/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 404:..\FreeRTOS9/queue.c **** 		}
 405:..\FreeRTOS9/queue.c **** 
 406:..\FreeRTOS9/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 407:..\FreeRTOS9/queue.c **** 
 408:..\FreeRTOS9/queue.c **** 		if( pxNewQueue != NULL )
 409:..\FreeRTOS9/queue.c **** 		{
 410:..\FreeRTOS9/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 411:..\FreeRTOS9/queue.c **** 			storage area. */
 412:..\FreeRTOS9/queue.c **** 			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
 413:..\FreeRTOS9/queue.c **** 
 414:..\FreeRTOS9/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 415:..\FreeRTOS9/queue.c **** 			{
 416:..\FreeRTOS9/queue.c **** 				/* Queues can be created either statically or dynamically, so
 417:..\FreeRTOS9/queue.c **** 				note this task was created dynamically in case it is later
 418:..\FreeRTOS9/queue.c **** 				deleted. */
 419:..\FreeRTOS9/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 420:..\FreeRTOS9/queue.c **** 			}
 421:..\FreeRTOS9/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 422:..\FreeRTOS9/queue.c **** 
 423:..\FreeRTOS9/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 424:..\FreeRTOS9/queue.c **** 		}
 425:..\FreeRTOS9/queue.c **** 
 426:..\FreeRTOS9/queue.c **** 		return pxNewQueue;
 427:..\FreeRTOS9/queue.c **** 	}
 428:..\FreeRTOS9/queue.c **** 
 429:..\FreeRTOS9/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 430:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 9


 431:..\FreeRTOS9/queue.c **** 
 432:..\FreeRTOS9/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 433:..\FreeRTOS9/queue.c **** {
 434:..\FreeRTOS9/queue.c **** 	/* Remove compiler warnings about unused parameters should
 435:..\FreeRTOS9/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 436:..\FreeRTOS9/queue.c **** 	( void ) ucQueueType;
 437:..\FreeRTOS9/queue.c **** 
 438:..\FreeRTOS9/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 439:..\FreeRTOS9/queue.c **** 	{
 440:..\FreeRTOS9/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 441:..\FreeRTOS9/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 442:..\FreeRTOS9/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 443:..\FreeRTOS9/queue.c **** 		value that is known to be within the memory map. */
 444:..\FreeRTOS9/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 445:..\FreeRTOS9/queue.c **** 	}
 446:..\FreeRTOS9/queue.c **** 	else
 447:..\FreeRTOS9/queue.c **** 	{
 448:..\FreeRTOS9/queue.c **** 		/* Set the head to the start of the queue storage area. */
 449:..\FreeRTOS9/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 450:..\FreeRTOS9/queue.c **** 	}
 451:..\FreeRTOS9/queue.c **** 
 452:..\FreeRTOS9/queue.c **** 	/* Initialise the queue members as described where the queue type is
 453:..\FreeRTOS9/queue.c **** 	defined. */
 454:..\FreeRTOS9/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 455:..\FreeRTOS9/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 456:..\FreeRTOS9/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 457:..\FreeRTOS9/queue.c **** 
 458:..\FreeRTOS9/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 459:..\FreeRTOS9/queue.c **** 	{
 460:..\FreeRTOS9/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 461:..\FreeRTOS9/queue.c **** 	}
 462:..\FreeRTOS9/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 463:..\FreeRTOS9/queue.c **** 
 464:..\FreeRTOS9/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 465:..\FreeRTOS9/queue.c **** 	{
 466:..\FreeRTOS9/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 467:..\FreeRTOS9/queue.c **** 	}
 468:..\FreeRTOS9/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 469:..\FreeRTOS9/queue.c **** 
 470:..\FreeRTOS9/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 471:..\FreeRTOS9/queue.c **** }
 472:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 473:..\FreeRTOS9/queue.c **** 
 474:..\FreeRTOS9/queue.c **** #if( configUSE_MUTEXES == 1 )
 475:..\FreeRTOS9/queue.c **** 
 476:..\FreeRTOS9/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 477:..\FreeRTOS9/queue.c **** 	{
 478:..\FreeRTOS9/queue.c **** 		if( pxNewQueue != NULL )
 479:..\FreeRTOS9/queue.c **** 		{
 480:..\FreeRTOS9/queue.c **** 			/* The queue create function will set all the queue structure members
 481:..\FreeRTOS9/queue.c **** 			correctly for a generic queue, but this function is creating a
 482:..\FreeRTOS9/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 483:..\FreeRTOS9/queue.c **** 			in particular the information required for priority inheritance. */
 484:..\FreeRTOS9/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 485:..\FreeRTOS9/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 486:..\FreeRTOS9/queue.c **** 
 487:..\FreeRTOS9/queue.c **** 			/* In case this is a recursive mutex. */
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 10


 488:..\FreeRTOS9/queue.c **** 			pxNewQueue->u.uxRecursiveCallCount = 0;
 489:..\FreeRTOS9/queue.c **** 
 490:..\FreeRTOS9/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 491:..\FreeRTOS9/queue.c **** 
 492:..\FreeRTOS9/queue.c **** 			/* Start with the semaphore in the expected state. */
 493:..\FreeRTOS9/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 494:..\FreeRTOS9/queue.c **** 		}
 495:..\FreeRTOS9/queue.c **** 		else
 496:..\FreeRTOS9/queue.c **** 		{
 497:..\FreeRTOS9/queue.c **** 			traceCREATE_MUTEX_FAILED();
 498:..\FreeRTOS9/queue.c **** 		}
 499:..\FreeRTOS9/queue.c **** 	}
 500:..\FreeRTOS9/queue.c **** 
 501:..\FreeRTOS9/queue.c **** #endif /* configUSE_MUTEXES */
 502:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 503:..\FreeRTOS9/queue.c **** 
 504:..\FreeRTOS9/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 505:..\FreeRTOS9/queue.c **** 
 506:..\FreeRTOS9/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 507:..\FreeRTOS9/queue.c **** 	{
 508:..\FreeRTOS9/queue.c **** 	Queue_t *pxNewQueue;
 509:..\FreeRTOS9/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 510:..\FreeRTOS9/queue.c **** 
 511:..\FreeRTOS9/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 512:..\FreeRTOS9/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 513:..\FreeRTOS9/queue.c **** 
 514:..\FreeRTOS9/queue.c **** 		return pxNewQueue;
 515:..\FreeRTOS9/queue.c **** 	}
 516:..\FreeRTOS9/queue.c **** 
 517:..\FreeRTOS9/queue.c **** #endif /* configUSE_MUTEXES */
 518:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 519:..\FreeRTOS9/queue.c **** 
 520:..\FreeRTOS9/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 521:..\FreeRTOS9/queue.c **** 
 522:..\FreeRTOS9/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 523:..\FreeRTOS9/queue.c **** 	{
 524:..\FreeRTOS9/queue.c **** 	Queue_t *pxNewQueue;
 525:..\FreeRTOS9/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 526:..\FreeRTOS9/queue.c **** 
 527:..\FreeRTOS9/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 528:..\FreeRTOS9/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 529:..\FreeRTOS9/queue.c **** 		( void ) ucQueueType;
 530:..\FreeRTOS9/queue.c **** 
 531:..\FreeRTOS9/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQ
 532:..\FreeRTOS9/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 533:..\FreeRTOS9/queue.c **** 
 534:..\FreeRTOS9/queue.c **** 		return pxNewQueue;
 535:..\FreeRTOS9/queue.c **** 	}
 536:..\FreeRTOS9/queue.c **** 
 537:..\FreeRTOS9/queue.c **** #endif /* configUSE_MUTEXES */
 538:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 539:..\FreeRTOS9/queue.c **** 
 540:..\FreeRTOS9/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 541:..\FreeRTOS9/queue.c **** 
 542:..\FreeRTOS9/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 543:..\FreeRTOS9/queue.c **** 	{
 544:..\FreeRTOS9/queue.c **** 	void *pxReturn;
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 11


 545:..\FreeRTOS9/queue.c **** 
 546:..\FreeRTOS9/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 547:..\FreeRTOS9/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 548:..\FreeRTOS9/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 549:..\FreeRTOS9/queue.c **** 		identity of the mutex holder, as the holder may change between the
 550:..\FreeRTOS9/queue.c **** 		following critical section exiting and the function returning. */
 551:..\FreeRTOS9/queue.c **** 		taskENTER_CRITICAL();
 552:..\FreeRTOS9/queue.c **** 		{
 553:..\FreeRTOS9/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 554:..\FreeRTOS9/queue.c **** 			{
 555:..\FreeRTOS9/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 556:..\FreeRTOS9/queue.c **** 			}
 557:..\FreeRTOS9/queue.c **** 			else
 558:..\FreeRTOS9/queue.c **** 			{
 559:..\FreeRTOS9/queue.c **** 				pxReturn = NULL;
 560:..\FreeRTOS9/queue.c **** 			}
 561:..\FreeRTOS9/queue.c **** 		}
 562:..\FreeRTOS9/queue.c **** 		taskEXIT_CRITICAL();
 563:..\FreeRTOS9/queue.c **** 
 564:..\FreeRTOS9/queue.c **** 		return pxReturn;
 565:..\FreeRTOS9/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 566:..\FreeRTOS9/queue.c **** 
 567:..\FreeRTOS9/queue.c **** #endif
 568:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 569:..\FreeRTOS9/queue.c **** 
 570:..\FreeRTOS9/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 571:..\FreeRTOS9/queue.c **** 
 572:..\FreeRTOS9/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 573:..\FreeRTOS9/queue.c **** 	{
 574:..\FreeRTOS9/queue.c **** 	BaseType_t xReturn;
 575:..\FreeRTOS9/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 576:..\FreeRTOS9/queue.c **** 
 577:..\FreeRTOS9/queue.c **** 		configASSERT( pxMutex );
 578:..\FreeRTOS9/queue.c **** 
 579:..\FreeRTOS9/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 580:..\FreeRTOS9/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 581:..\FreeRTOS9/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 582:..\FreeRTOS9/queue.c **** 		this is the only condition we are interested in it does not matter if
 583:..\FreeRTOS9/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 584:..\FreeRTOS9/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 585:..\FreeRTOS9/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 586:..\FreeRTOS9/queue.c **** 		{
 587:..\FreeRTOS9/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 588:..\FreeRTOS9/queue.c **** 
 589:..\FreeRTOS9/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 590:..\FreeRTOS9/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 591:..\FreeRTOS9/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 592:..\FreeRTOS9/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 593:..\FreeRTOS9/queue.c **** 			uxRecursiveCallCount member. */
 594:..\FreeRTOS9/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 595:..\FreeRTOS9/queue.c **** 
 596:..\FreeRTOS9/queue.c **** 			/* Has the recursive call count unwound to 0? */
 597:..\FreeRTOS9/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 598:..\FreeRTOS9/queue.c **** 			{
 599:..\FreeRTOS9/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 600:..\FreeRTOS9/queue.c **** 				task that might be waiting to access the mutex. */
 601:..\FreeRTOS9/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 12


 602:..\FreeRTOS9/queue.c **** 			}
 603:..\FreeRTOS9/queue.c **** 			else
 604:..\FreeRTOS9/queue.c **** 			{
 605:..\FreeRTOS9/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 606:..\FreeRTOS9/queue.c **** 			}
 607:..\FreeRTOS9/queue.c **** 
 608:..\FreeRTOS9/queue.c **** 			xReturn = pdPASS;
 609:..\FreeRTOS9/queue.c **** 		}
 610:..\FreeRTOS9/queue.c **** 		else
 611:..\FreeRTOS9/queue.c **** 		{
 612:..\FreeRTOS9/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 613:..\FreeRTOS9/queue.c **** 			holder. */
 614:..\FreeRTOS9/queue.c **** 			xReturn = pdFAIL;
 615:..\FreeRTOS9/queue.c **** 
 616:..\FreeRTOS9/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 617:..\FreeRTOS9/queue.c **** 		}
 618:..\FreeRTOS9/queue.c **** 
 619:..\FreeRTOS9/queue.c **** 		return xReturn;
 620:..\FreeRTOS9/queue.c **** 	}
 621:..\FreeRTOS9/queue.c **** 
 622:..\FreeRTOS9/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 623:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 624:..\FreeRTOS9/queue.c **** 
 625:..\FreeRTOS9/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 626:..\FreeRTOS9/queue.c **** 
 627:..\FreeRTOS9/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 628:..\FreeRTOS9/queue.c **** 	{
 629:..\FreeRTOS9/queue.c **** 	BaseType_t xReturn;
 630:..\FreeRTOS9/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 631:..\FreeRTOS9/queue.c **** 
 632:..\FreeRTOS9/queue.c **** 		configASSERT( pxMutex );
 633:..\FreeRTOS9/queue.c **** 
 634:..\FreeRTOS9/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 635:..\FreeRTOS9/queue.c **** 		xQueueGiveMutexRecursive(). */
 636:..\FreeRTOS9/queue.c **** 
 637:..\FreeRTOS9/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 638:..\FreeRTOS9/queue.c **** 
 639:..\FreeRTOS9/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 640:..\FreeRTOS9/queue.c **** 		{
 641:..\FreeRTOS9/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 642:..\FreeRTOS9/queue.c **** 			xReturn = pdPASS;
 643:..\FreeRTOS9/queue.c **** 		}
 644:..\FreeRTOS9/queue.c **** 		else
 645:..\FreeRTOS9/queue.c **** 		{
 646:..\FreeRTOS9/queue.c **** 			xReturn = xQueueGenericReceive( pxMutex, NULL, xTicksToWait, pdFALSE );
 647:..\FreeRTOS9/queue.c **** 
 648:..\FreeRTOS9/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 649:..\FreeRTOS9/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 650:..\FreeRTOS9/queue.c **** 			before reaching here. */
 651:..\FreeRTOS9/queue.c **** 			if( xReturn != pdFAIL )
 652:..\FreeRTOS9/queue.c **** 			{
 653:..\FreeRTOS9/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 654:..\FreeRTOS9/queue.c **** 			}
 655:..\FreeRTOS9/queue.c **** 			else
 656:..\FreeRTOS9/queue.c **** 			{
 657:..\FreeRTOS9/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 658:..\FreeRTOS9/queue.c **** 			}
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 13


 659:..\FreeRTOS9/queue.c **** 		}
 660:..\FreeRTOS9/queue.c **** 
 661:..\FreeRTOS9/queue.c **** 		return xReturn;
 662:..\FreeRTOS9/queue.c **** 	}
 663:..\FreeRTOS9/queue.c **** 
 664:..\FreeRTOS9/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 665:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 666:..\FreeRTOS9/queue.c **** 
 667:..\FreeRTOS9/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 668:..\FreeRTOS9/queue.c **** 
 669:..\FreeRTOS9/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 670:..\FreeRTOS9/queue.c **** 	{
 671:..\FreeRTOS9/queue.c **** 	QueueHandle_t xHandle;
 672:..\FreeRTOS9/queue.c **** 
 673:..\FreeRTOS9/queue.c **** 		configASSERT( uxMaxCount != 0 );
 674:..\FreeRTOS9/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 675:..\FreeRTOS9/queue.c **** 
 676:..\FreeRTOS9/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 677:..\FreeRTOS9/queue.c **** 
 678:..\FreeRTOS9/queue.c **** 		if( xHandle != NULL )
 679:..\FreeRTOS9/queue.c **** 		{
 680:..\FreeRTOS9/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 681:..\FreeRTOS9/queue.c **** 
 682:..\FreeRTOS9/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 683:..\FreeRTOS9/queue.c **** 		}
 684:..\FreeRTOS9/queue.c **** 		else
 685:..\FreeRTOS9/queue.c **** 		{
 686:..\FreeRTOS9/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 687:..\FreeRTOS9/queue.c **** 		}
 688:..\FreeRTOS9/queue.c **** 
 689:..\FreeRTOS9/queue.c **** 		return xHandle;
 690:..\FreeRTOS9/queue.c **** 	}
 691:..\FreeRTOS9/queue.c **** 
 692:..\FreeRTOS9/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 693:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 694:..\FreeRTOS9/queue.c **** 
 695:..\FreeRTOS9/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 696:..\FreeRTOS9/queue.c **** 
 697:..\FreeRTOS9/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 698:..\FreeRTOS9/queue.c **** 	{
 699:..\FreeRTOS9/queue.c **** 	QueueHandle_t xHandle;
 700:..\FreeRTOS9/queue.c **** 
 701:..\FreeRTOS9/queue.c **** 		configASSERT( uxMaxCount != 0 );
 702:..\FreeRTOS9/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 703:..\FreeRTOS9/queue.c **** 
 704:..\FreeRTOS9/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 705:..\FreeRTOS9/queue.c **** 
 706:..\FreeRTOS9/queue.c **** 		if( xHandle != NULL )
 707:..\FreeRTOS9/queue.c **** 		{
 708:..\FreeRTOS9/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 709:..\FreeRTOS9/queue.c **** 
 710:..\FreeRTOS9/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 711:..\FreeRTOS9/queue.c **** 		}
 712:..\FreeRTOS9/queue.c **** 		else
 713:..\FreeRTOS9/queue.c **** 		{
 714:..\FreeRTOS9/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 715:..\FreeRTOS9/queue.c **** 		}
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 14


 716:..\FreeRTOS9/queue.c **** 
 717:..\FreeRTOS9/queue.c **** 		return xHandle;
 718:..\FreeRTOS9/queue.c **** 	}
 719:..\FreeRTOS9/queue.c **** 
 720:..\FreeRTOS9/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 721:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 722:..\FreeRTOS9/queue.c **** 
 723:..\FreeRTOS9/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 724:..\FreeRTOS9/queue.c **** {
 725:..\FreeRTOS9/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 726:..\FreeRTOS9/queue.c **** TimeOut_t xTimeOut;
 727:..\FreeRTOS9/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 728:..\FreeRTOS9/queue.c **** 
 729:..\FreeRTOS9/queue.c **** 	configASSERT( pxQueue );
 730:..\FreeRTOS9/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 731:..\FreeRTOS9/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 732:..\FreeRTOS9/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 733:..\FreeRTOS9/queue.c **** 	{
 734:..\FreeRTOS9/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 735:..\FreeRTOS9/queue.c **** 	}
 736:..\FreeRTOS9/queue.c **** 	#endif
 737:..\FreeRTOS9/queue.c **** 
 738:..\FreeRTOS9/queue.c **** 
 739:..\FreeRTOS9/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 740:..\FreeRTOS9/queue.c **** 	statements within the function itself.  This is done in the interest
 741:..\FreeRTOS9/queue.c **** 	of execution time efficiency. */
 742:..\FreeRTOS9/queue.c **** 	for( ;; )
 743:..\FreeRTOS9/queue.c **** 	{
 744:..\FreeRTOS9/queue.c **** 		taskENTER_CRITICAL();
 745:..\FreeRTOS9/queue.c **** 		{
 746:..\FreeRTOS9/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 747:..\FreeRTOS9/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 748:..\FreeRTOS9/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 749:..\FreeRTOS9/queue.c **** 			queue is full. */
 750:..\FreeRTOS9/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 751:..\FreeRTOS9/queue.c **** 			{
 752:..\FreeRTOS9/queue.c **** 				traceQUEUE_SEND( pxQueue );
 753:..\FreeRTOS9/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 754:..\FreeRTOS9/queue.c **** 
 755:..\FreeRTOS9/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 756:..\FreeRTOS9/queue.c **** 				{
 757:..\FreeRTOS9/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 758:..\FreeRTOS9/queue.c **** 					{
 759:..\FreeRTOS9/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 760:..\FreeRTOS9/queue.c **** 						{
 761:..\FreeRTOS9/queue.c **** 							/* The queue is a member of a queue set, and posting
 762:..\FreeRTOS9/queue.c **** 							to the queue set caused a higher priority task to
 763:..\FreeRTOS9/queue.c **** 							unblock. A context switch is required. */
 764:..\FreeRTOS9/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 765:..\FreeRTOS9/queue.c **** 						}
 766:..\FreeRTOS9/queue.c **** 						else
 767:..\FreeRTOS9/queue.c **** 						{
 768:..\FreeRTOS9/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 769:..\FreeRTOS9/queue.c **** 						}
 770:..\FreeRTOS9/queue.c **** 					}
 771:..\FreeRTOS9/queue.c **** 					else
 772:..\FreeRTOS9/queue.c **** 					{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 15


 773:..\FreeRTOS9/queue.c **** 						/* If there was a task waiting for data to arrive on the
 774:..\FreeRTOS9/queue.c **** 						queue then unblock it now. */
 775:..\FreeRTOS9/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 776:..\FreeRTOS9/queue.c **** 						{
 777:..\FreeRTOS9/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 778:..\FreeRTOS9/queue.c **** 							{
 779:..\FreeRTOS9/queue.c **** 								/* The unblocked task has a priority higher than
 780:..\FreeRTOS9/queue.c **** 								our own so yield immediately.  Yes it is ok to
 781:..\FreeRTOS9/queue.c **** 								do this from within the critical section - the
 782:..\FreeRTOS9/queue.c **** 								kernel takes care of that. */
 783:..\FreeRTOS9/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 784:..\FreeRTOS9/queue.c **** 							}
 785:..\FreeRTOS9/queue.c **** 							else
 786:..\FreeRTOS9/queue.c **** 							{
 787:..\FreeRTOS9/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 788:..\FreeRTOS9/queue.c **** 							}
 789:..\FreeRTOS9/queue.c **** 						}
 790:..\FreeRTOS9/queue.c **** 						else if( xYieldRequired != pdFALSE )
 791:..\FreeRTOS9/queue.c **** 						{
 792:..\FreeRTOS9/queue.c **** 							/* This path is a special case that will only get
 793:..\FreeRTOS9/queue.c **** 							executed if the task was holding multiple mutexes
 794:..\FreeRTOS9/queue.c **** 							and the mutexes were given back in an order that is
 795:..\FreeRTOS9/queue.c **** 							different to that in which they were taken. */
 796:..\FreeRTOS9/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 797:..\FreeRTOS9/queue.c **** 						}
 798:..\FreeRTOS9/queue.c **** 						else
 799:..\FreeRTOS9/queue.c **** 						{
 800:..\FreeRTOS9/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 801:..\FreeRTOS9/queue.c **** 						}
 802:..\FreeRTOS9/queue.c **** 					}
 803:..\FreeRTOS9/queue.c **** 				}
 804:..\FreeRTOS9/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 805:..\FreeRTOS9/queue.c **** 				{
 806:..\FreeRTOS9/queue.c **** 					/* If there was a task waiting for data to arrive on the
 807:..\FreeRTOS9/queue.c **** 					queue then unblock it now. */
 808:..\FreeRTOS9/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 809:..\FreeRTOS9/queue.c **** 					{
 810:..\FreeRTOS9/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 811:..\FreeRTOS9/queue.c **** 						{
 812:..\FreeRTOS9/queue.c **** 							/* The unblocked task has a priority higher than
 813:..\FreeRTOS9/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 814:..\FreeRTOS9/queue.c **** 							this from within the critical section - the kernel
 815:..\FreeRTOS9/queue.c **** 							takes care of that. */
 816:..\FreeRTOS9/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 817:..\FreeRTOS9/queue.c **** 						}
 818:..\FreeRTOS9/queue.c **** 						else
 819:..\FreeRTOS9/queue.c **** 						{
 820:..\FreeRTOS9/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 821:..\FreeRTOS9/queue.c **** 						}
 822:..\FreeRTOS9/queue.c **** 					}
 823:..\FreeRTOS9/queue.c **** 					else if( xYieldRequired != pdFALSE )
 824:..\FreeRTOS9/queue.c **** 					{
 825:..\FreeRTOS9/queue.c **** 						/* This path is a special case that will only get
 826:..\FreeRTOS9/queue.c **** 						executed if the task was holding multiple mutexes and
 827:..\FreeRTOS9/queue.c **** 						the mutexes were given back in an order that is
 828:..\FreeRTOS9/queue.c **** 						different to that in which they were taken. */
 829:..\FreeRTOS9/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 16


 830:..\FreeRTOS9/queue.c **** 					}
 831:..\FreeRTOS9/queue.c **** 					else
 832:..\FreeRTOS9/queue.c **** 					{
 833:..\FreeRTOS9/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 834:..\FreeRTOS9/queue.c **** 					}
 835:..\FreeRTOS9/queue.c **** 				}
 836:..\FreeRTOS9/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 837:..\FreeRTOS9/queue.c **** 
 838:..\FreeRTOS9/queue.c **** 				taskEXIT_CRITICAL();
 839:..\FreeRTOS9/queue.c **** 				return pdPASS;
 840:..\FreeRTOS9/queue.c **** 			}
 841:..\FreeRTOS9/queue.c **** 			else
 842:..\FreeRTOS9/queue.c **** 			{
 843:..\FreeRTOS9/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 844:..\FreeRTOS9/queue.c **** 				{
 845:..\FreeRTOS9/queue.c **** 					/* The queue was full and no block time is specified (or
 846:..\FreeRTOS9/queue.c **** 					the block time has expired) so leave now. */
 847:..\FreeRTOS9/queue.c **** 					taskEXIT_CRITICAL();
 848:..\FreeRTOS9/queue.c **** 
 849:..\FreeRTOS9/queue.c **** 					/* Return to the original privilege level before exiting
 850:..\FreeRTOS9/queue.c **** 					the function. */
 851:..\FreeRTOS9/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 852:..\FreeRTOS9/queue.c **** 					return errQUEUE_FULL;
 853:..\FreeRTOS9/queue.c **** 				}
 854:..\FreeRTOS9/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 855:..\FreeRTOS9/queue.c **** 				{
 856:..\FreeRTOS9/queue.c **** 					/* The queue was full and a block time was specified so
 857:..\FreeRTOS9/queue.c **** 					configure the timeout structure. */
 858:..\FreeRTOS9/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
 859:..\FreeRTOS9/queue.c **** 					xEntryTimeSet = pdTRUE;
 860:..\FreeRTOS9/queue.c **** 				}
 861:..\FreeRTOS9/queue.c **** 				else
 862:..\FreeRTOS9/queue.c **** 				{
 863:..\FreeRTOS9/queue.c **** 					/* Entry time was already set. */
 864:..\FreeRTOS9/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 865:..\FreeRTOS9/queue.c **** 				}
 866:..\FreeRTOS9/queue.c **** 			}
 867:..\FreeRTOS9/queue.c **** 		}
 868:..\FreeRTOS9/queue.c **** 		taskEXIT_CRITICAL();
 869:..\FreeRTOS9/queue.c **** 
 870:..\FreeRTOS9/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 871:..\FreeRTOS9/queue.c **** 		now the critical section has been exited. */
 872:..\FreeRTOS9/queue.c **** 
 873:..\FreeRTOS9/queue.c **** 		vTaskSuspendAll();
 874:..\FreeRTOS9/queue.c **** 		prvLockQueue( pxQueue );
 875:..\FreeRTOS9/queue.c **** 
 876:..\FreeRTOS9/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 877:..\FreeRTOS9/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 878:..\FreeRTOS9/queue.c **** 		{
 879:..\FreeRTOS9/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 880:..\FreeRTOS9/queue.c **** 			{
 881:..\FreeRTOS9/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 882:..\FreeRTOS9/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 883:..\FreeRTOS9/queue.c **** 
 884:..\FreeRTOS9/queue.c **** 				/* Unlocking the queue means queue events can effect the
 885:..\FreeRTOS9/queue.c **** 				event list.  It is possible	that interrupts occurring now
 886:..\FreeRTOS9/queue.c **** 				remove this task from the event	list again - but as the
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 17


 887:..\FreeRTOS9/queue.c **** 				scheduler is suspended the task will go onto the pending
 888:..\FreeRTOS9/queue.c **** 				ready last instead of the actual ready list. */
 889:..\FreeRTOS9/queue.c **** 				prvUnlockQueue( pxQueue );
 890:..\FreeRTOS9/queue.c **** 
 891:..\FreeRTOS9/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 892:..\FreeRTOS9/queue.c **** 				ready list into the ready list - so it is feasible that this
 893:..\FreeRTOS9/queue.c **** 				task is already in a ready list before it yields - in which
 894:..\FreeRTOS9/queue.c **** 				case the yield will not cause a context switch unless there
 895:..\FreeRTOS9/queue.c **** 				is also a higher priority task in the pending ready list. */
 896:..\FreeRTOS9/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 897:..\FreeRTOS9/queue.c **** 				{
 898:..\FreeRTOS9/queue.c **** 					portYIELD_WITHIN_API();
 899:..\FreeRTOS9/queue.c **** 				}
 900:..\FreeRTOS9/queue.c **** 			}
 901:..\FreeRTOS9/queue.c **** 			else
 902:..\FreeRTOS9/queue.c **** 			{
 903:..\FreeRTOS9/queue.c **** 				/* Try again. */
 904:..\FreeRTOS9/queue.c **** 				prvUnlockQueue( pxQueue );
 905:..\FreeRTOS9/queue.c **** 				( void ) xTaskResumeAll();
 906:..\FreeRTOS9/queue.c **** 			}
 907:..\FreeRTOS9/queue.c **** 		}
 908:..\FreeRTOS9/queue.c **** 		else
 909:..\FreeRTOS9/queue.c **** 		{
 910:..\FreeRTOS9/queue.c **** 			/* The timeout has expired. */
 911:..\FreeRTOS9/queue.c **** 			prvUnlockQueue( pxQueue );
 912:..\FreeRTOS9/queue.c **** 			( void ) xTaskResumeAll();
 913:..\FreeRTOS9/queue.c **** 
 914:..\FreeRTOS9/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 915:..\FreeRTOS9/queue.c **** 			return errQUEUE_FULL;
 916:..\FreeRTOS9/queue.c **** 		}
 917:..\FreeRTOS9/queue.c **** 	}
 918:..\FreeRTOS9/queue.c **** }
 919:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 920:..\FreeRTOS9/queue.c **** 
 921:..\FreeRTOS9/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 922:..\FreeRTOS9/queue.c **** {
 923:..\FreeRTOS9/queue.c **** BaseType_t xReturn;
 924:..\FreeRTOS9/queue.c **** UBaseType_t uxSavedInterruptStatus;
 925:..\FreeRTOS9/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 926:..\FreeRTOS9/queue.c **** 
 927:..\FreeRTOS9/queue.c **** 	configASSERT( pxQueue );
 928:..\FreeRTOS9/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 929:..\FreeRTOS9/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 930:..\FreeRTOS9/queue.c **** 
 931:..\FreeRTOS9/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 932:..\FreeRTOS9/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 933:..\FreeRTOS9/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 934:..\FreeRTOS9/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 935:..\FreeRTOS9/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 936:..\FreeRTOS9/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 937:..\FreeRTOS9/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 938:..\FreeRTOS9/queue.c **** 	assigned a priority above the configured maximum system call priority.
 939:..\FreeRTOS9/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 940:..\FreeRTOS9/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
 941:..\FreeRTOS9/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 942:..\FreeRTOS9/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 943:..\FreeRTOS9/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 18


 944:..\FreeRTOS9/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 945:..\FreeRTOS9/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 946:..\FreeRTOS9/queue.c **** 
 947:..\FreeRTOS9/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 948:..\FreeRTOS9/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 949:..\FreeRTOS9/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 950:..\FreeRTOS9/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 951:..\FreeRTOS9/queue.c **** 	post). */
 952:..\FreeRTOS9/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 953:..\FreeRTOS9/queue.c **** 	{
 954:..\FreeRTOS9/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 955:..\FreeRTOS9/queue.c **** 		{
 956:..\FreeRTOS9/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 957:..\FreeRTOS9/queue.c **** 
 958:..\FreeRTOS9/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 959:..\FreeRTOS9/queue.c **** 
 960:..\FreeRTOS9/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 961:..\FreeRTOS9/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 962:..\FreeRTOS9/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 963:..\FreeRTOS9/queue.c **** 			called here even though the disinherit function does not check if
 964:..\FreeRTOS9/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 965:..\FreeRTOS9/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 966:..\FreeRTOS9/queue.c **** 
 967:..\FreeRTOS9/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 968:..\FreeRTOS9/queue.c **** 			be done when the queue is unlocked later. */
 969:..\FreeRTOS9/queue.c **** 			if( cTxLock == queueUNLOCKED )
 970:..\FreeRTOS9/queue.c **** 			{
 971:..\FreeRTOS9/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 972:..\FreeRTOS9/queue.c **** 				{
 973:..\FreeRTOS9/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 974:..\FreeRTOS9/queue.c **** 					{
 975:..\FreeRTOS9/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 976:..\FreeRTOS9/queue.c **** 						{
 977:..\FreeRTOS9/queue.c **** 							/* The queue is a member of a queue set, and posting
 978:..\FreeRTOS9/queue.c **** 							to the queue set caused a higher priority task to
 979:..\FreeRTOS9/queue.c **** 							unblock.  A context switch is required. */
 980:..\FreeRTOS9/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 981:..\FreeRTOS9/queue.c **** 							{
 982:..\FreeRTOS9/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 983:..\FreeRTOS9/queue.c **** 							}
 984:..\FreeRTOS9/queue.c **** 							else
 985:..\FreeRTOS9/queue.c **** 							{
 986:..\FreeRTOS9/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 987:..\FreeRTOS9/queue.c **** 							}
 988:..\FreeRTOS9/queue.c **** 						}
 989:..\FreeRTOS9/queue.c **** 						else
 990:..\FreeRTOS9/queue.c **** 						{
 991:..\FreeRTOS9/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 992:..\FreeRTOS9/queue.c **** 						}
 993:..\FreeRTOS9/queue.c **** 					}
 994:..\FreeRTOS9/queue.c **** 					else
 995:..\FreeRTOS9/queue.c **** 					{
 996:..\FreeRTOS9/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 997:..\FreeRTOS9/queue.c **** 						{
 998:..\FreeRTOS9/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 999:..\FreeRTOS9/queue.c **** 							{
1000:..\FreeRTOS9/queue.c **** 								/* The task waiting has a higher priority so
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 19


1001:..\FreeRTOS9/queue.c **** 								record that a context switch is required. */
1002:..\FreeRTOS9/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1003:..\FreeRTOS9/queue.c **** 								{
1004:..\FreeRTOS9/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1005:..\FreeRTOS9/queue.c **** 								}
1006:..\FreeRTOS9/queue.c **** 								else
1007:..\FreeRTOS9/queue.c **** 								{
1008:..\FreeRTOS9/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1009:..\FreeRTOS9/queue.c **** 								}
1010:..\FreeRTOS9/queue.c **** 							}
1011:..\FreeRTOS9/queue.c **** 							else
1012:..\FreeRTOS9/queue.c **** 							{
1013:..\FreeRTOS9/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1014:..\FreeRTOS9/queue.c **** 							}
1015:..\FreeRTOS9/queue.c **** 						}
1016:..\FreeRTOS9/queue.c **** 						else
1017:..\FreeRTOS9/queue.c **** 						{
1018:..\FreeRTOS9/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1019:..\FreeRTOS9/queue.c **** 						}
1020:..\FreeRTOS9/queue.c **** 					}
1021:..\FreeRTOS9/queue.c **** 				}
1022:..\FreeRTOS9/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1023:..\FreeRTOS9/queue.c **** 				{
1024:..\FreeRTOS9/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1025:..\FreeRTOS9/queue.c **** 					{
1026:..\FreeRTOS9/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1027:..\FreeRTOS9/queue.c **** 						{
1028:..\FreeRTOS9/queue.c **** 							/* The task waiting has a higher priority so record that a
1029:..\FreeRTOS9/queue.c **** 							context	switch is required. */
1030:..\FreeRTOS9/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1031:..\FreeRTOS9/queue.c **** 							{
1032:..\FreeRTOS9/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1033:..\FreeRTOS9/queue.c **** 							}
1034:..\FreeRTOS9/queue.c **** 							else
1035:..\FreeRTOS9/queue.c **** 							{
1036:..\FreeRTOS9/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1037:..\FreeRTOS9/queue.c **** 							}
1038:..\FreeRTOS9/queue.c **** 						}
1039:..\FreeRTOS9/queue.c **** 						else
1040:..\FreeRTOS9/queue.c **** 						{
1041:..\FreeRTOS9/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1042:..\FreeRTOS9/queue.c **** 						}
1043:..\FreeRTOS9/queue.c **** 					}
1044:..\FreeRTOS9/queue.c **** 					else
1045:..\FreeRTOS9/queue.c **** 					{
1046:..\FreeRTOS9/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1047:..\FreeRTOS9/queue.c **** 					}
1048:..\FreeRTOS9/queue.c **** 				}
1049:..\FreeRTOS9/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1050:..\FreeRTOS9/queue.c **** 			}
1051:..\FreeRTOS9/queue.c **** 			else
1052:..\FreeRTOS9/queue.c **** 			{
1053:..\FreeRTOS9/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1054:..\FreeRTOS9/queue.c **** 				knows that data was posted while it was locked. */
1055:..\FreeRTOS9/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1056:..\FreeRTOS9/queue.c **** 			}
1057:..\FreeRTOS9/queue.c **** 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 20


1058:..\FreeRTOS9/queue.c **** 			xReturn = pdPASS;
1059:..\FreeRTOS9/queue.c **** 		}
1060:..\FreeRTOS9/queue.c **** 		else
1061:..\FreeRTOS9/queue.c **** 		{
1062:..\FreeRTOS9/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1063:..\FreeRTOS9/queue.c **** 			xReturn = errQUEUE_FULL;
1064:..\FreeRTOS9/queue.c **** 		}
1065:..\FreeRTOS9/queue.c **** 	}
1066:..\FreeRTOS9/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1067:..\FreeRTOS9/queue.c **** 
1068:..\FreeRTOS9/queue.c **** 	return xReturn;
1069:..\FreeRTOS9/queue.c **** }
1070:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
1071:..\FreeRTOS9/queue.c **** 
1072:..\FreeRTOS9/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1073:..\FreeRTOS9/queue.c **** {
1074:..\FreeRTOS9/queue.c **** BaseType_t xReturn;
1075:..\FreeRTOS9/queue.c **** UBaseType_t uxSavedInterruptStatus;
1076:..\FreeRTOS9/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1077:..\FreeRTOS9/queue.c **** 
1078:..\FreeRTOS9/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1079:..\FreeRTOS9/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1080:..\FreeRTOS9/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1081:..\FreeRTOS9/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1082:..\FreeRTOS9/queue.c **** 	post). */
1083:..\FreeRTOS9/queue.c **** 
1084:..\FreeRTOS9/queue.c **** 	configASSERT( pxQueue );
1085:..\FreeRTOS9/queue.c **** 
1086:..\FreeRTOS9/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1087:..\FreeRTOS9/queue.c **** 	if the item size is not 0. */
1088:..\FreeRTOS9/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1089:..\FreeRTOS9/queue.c **** 
1090:..\FreeRTOS9/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1091:..\FreeRTOS9/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1092:..\FreeRTOS9/queue.c **** 	interrupts, only tasks. */
1093:..\FreeRTOS9/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NU
1094:..\FreeRTOS9/queue.c **** 
1095:..\FreeRTOS9/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1096:..\FreeRTOS9/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1097:..\FreeRTOS9/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1098:..\FreeRTOS9/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1099:..\FreeRTOS9/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1100:..\FreeRTOS9/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1101:..\FreeRTOS9/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1102:..\FreeRTOS9/queue.c **** 	assigned a priority above the configured maximum system call priority.
1103:..\FreeRTOS9/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1104:..\FreeRTOS9/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1105:..\FreeRTOS9/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1106:..\FreeRTOS9/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1107:..\FreeRTOS9/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1108:..\FreeRTOS9/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1109:..\FreeRTOS9/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1110:..\FreeRTOS9/queue.c **** 
1111:..\FreeRTOS9/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1112:..\FreeRTOS9/queue.c **** 	{
1113:..\FreeRTOS9/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1114:..\FreeRTOS9/queue.c **** 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 21


1115:..\FreeRTOS9/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1116:..\FreeRTOS9/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1117:..\FreeRTOS9/queue.c **** 		space'. */
1118:..\FreeRTOS9/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1119:..\FreeRTOS9/queue.c **** 		{
1120:..\FreeRTOS9/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1121:..\FreeRTOS9/queue.c **** 
1122:..\FreeRTOS9/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1123:..\FreeRTOS9/queue.c **** 
1124:..\FreeRTOS9/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1125:..\FreeRTOS9/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1126:..\FreeRTOS9/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1127:..\FreeRTOS9/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1128:..\FreeRTOS9/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1129:..\FreeRTOS9/queue.c **** 			messages (semaphores) available. */
1130:..\FreeRTOS9/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
1131:..\FreeRTOS9/queue.c **** 
1132:..\FreeRTOS9/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1133:..\FreeRTOS9/queue.c **** 			be done when the queue is unlocked later. */
1134:..\FreeRTOS9/queue.c **** 			if( cTxLock == queueUNLOCKED )
1135:..\FreeRTOS9/queue.c **** 			{
1136:..\FreeRTOS9/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1137:..\FreeRTOS9/queue.c **** 				{
1138:..\FreeRTOS9/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1139:..\FreeRTOS9/queue.c **** 					{
1140:..\FreeRTOS9/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1141:..\FreeRTOS9/queue.c **** 						{
1142:..\FreeRTOS9/queue.c **** 							/* The semaphore is a member of a queue set, and
1143:..\FreeRTOS9/queue.c **** 							posting	to the queue set caused a higher priority
1144:..\FreeRTOS9/queue.c **** 							task to	unblock.  A context switch is required. */
1145:..\FreeRTOS9/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1146:..\FreeRTOS9/queue.c **** 							{
1147:..\FreeRTOS9/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1148:..\FreeRTOS9/queue.c **** 							}
1149:..\FreeRTOS9/queue.c **** 							else
1150:..\FreeRTOS9/queue.c **** 							{
1151:..\FreeRTOS9/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1152:..\FreeRTOS9/queue.c **** 							}
1153:..\FreeRTOS9/queue.c **** 						}
1154:..\FreeRTOS9/queue.c **** 						else
1155:..\FreeRTOS9/queue.c **** 						{
1156:..\FreeRTOS9/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1157:..\FreeRTOS9/queue.c **** 						}
1158:..\FreeRTOS9/queue.c **** 					}
1159:..\FreeRTOS9/queue.c **** 					else
1160:..\FreeRTOS9/queue.c **** 					{
1161:..\FreeRTOS9/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1162:..\FreeRTOS9/queue.c **** 						{
1163:..\FreeRTOS9/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1164:..\FreeRTOS9/queue.c **** 							{
1165:..\FreeRTOS9/queue.c **** 								/* The task waiting has a higher priority so
1166:..\FreeRTOS9/queue.c **** 								record that a context switch is required. */
1167:..\FreeRTOS9/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1168:..\FreeRTOS9/queue.c **** 								{
1169:..\FreeRTOS9/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1170:..\FreeRTOS9/queue.c **** 								}
1171:..\FreeRTOS9/queue.c **** 								else
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 22


1172:..\FreeRTOS9/queue.c **** 								{
1173:..\FreeRTOS9/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1174:..\FreeRTOS9/queue.c **** 								}
1175:..\FreeRTOS9/queue.c **** 							}
1176:..\FreeRTOS9/queue.c **** 							else
1177:..\FreeRTOS9/queue.c **** 							{
1178:..\FreeRTOS9/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1179:..\FreeRTOS9/queue.c **** 							}
1180:..\FreeRTOS9/queue.c **** 						}
1181:..\FreeRTOS9/queue.c **** 						else
1182:..\FreeRTOS9/queue.c **** 						{
1183:..\FreeRTOS9/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1184:..\FreeRTOS9/queue.c **** 						}
1185:..\FreeRTOS9/queue.c **** 					}
1186:..\FreeRTOS9/queue.c **** 				}
1187:..\FreeRTOS9/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1188:..\FreeRTOS9/queue.c **** 				{
1189:..\FreeRTOS9/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1190:..\FreeRTOS9/queue.c **** 					{
1191:..\FreeRTOS9/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1192:..\FreeRTOS9/queue.c **** 						{
1193:..\FreeRTOS9/queue.c **** 							/* The task waiting has a higher priority so record that a
1194:..\FreeRTOS9/queue.c **** 							context	switch is required. */
1195:..\FreeRTOS9/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1196:..\FreeRTOS9/queue.c **** 							{
1197:..\FreeRTOS9/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1198:..\FreeRTOS9/queue.c **** 							}
1199:..\FreeRTOS9/queue.c **** 							else
1200:..\FreeRTOS9/queue.c **** 							{
1201:..\FreeRTOS9/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1202:..\FreeRTOS9/queue.c **** 							}
1203:..\FreeRTOS9/queue.c **** 						}
1204:..\FreeRTOS9/queue.c **** 						else
1205:..\FreeRTOS9/queue.c **** 						{
1206:..\FreeRTOS9/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1207:..\FreeRTOS9/queue.c **** 						}
1208:..\FreeRTOS9/queue.c **** 					}
1209:..\FreeRTOS9/queue.c **** 					else
1210:..\FreeRTOS9/queue.c **** 					{
1211:..\FreeRTOS9/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1212:..\FreeRTOS9/queue.c **** 					}
1213:..\FreeRTOS9/queue.c **** 				}
1214:..\FreeRTOS9/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1215:..\FreeRTOS9/queue.c **** 			}
1216:..\FreeRTOS9/queue.c **** 			else
1217:..\FreeRTOS9/queue.c **** 			{
1218:..\FreeRTOS9/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1219:..\FreeRTOS9/queue.c **** 				knows that data was posted while it was locked. */
1220:..\FreeRTOS9/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1221:..\FreeRTOS9/queue.c **** 			}
1222:..\FreeRTOS9/queue.c **** 
1223:..\FreeRTOS9/queue.c **** 			xReturn = pdPASS;
1224:..\FreeRTOS9/queue.c **** 		}
1225:..\FreeRTOS9/queue.c **** 		else
1226:..\FreeRTOS9/queue.c **** 		{
1227:..\FreeRTOS9/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1228:..\FreeRTOS9/queue.c **** 			xReturn = errQUEUE_FULL;
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 23


1229:..\FreeRTOS9/queue.c **** 		}
1230:..\FreeRTOS9/queue.c **** 	}
1231:..\FreeRTOS9/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1232:..\FreeRTOS9/queue.c **** 
1233:..\FreeRTOS9/queue.c **** 	return xReturn;
1234:..\FreeRTOS9/queue.c **** }
1235:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
1236:..\FreeRTOS9/queue.c **** 
1237:..\FreeRTOS9/queue.c **** BaseType_t xQueueGenericReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWa
1238:..\FreeRTOS9/queue.c **** {
1239:..\FreeRTOS9/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1240:..\FreeRTOS9/queue.c **** TimeOut_t xTimeOut;
1241:..\FreeRTOS9/queue.c **** int8_t *pcOriginalReadPosition;
1242:..\FreeRTOS9/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1243:..\FreeRTOS9/queue.c **** 
1244:..\FreeRTOS9/queue.c **** 	configASSERT( pxQueue );
1245:..\FreeRTOS9/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1246:..\FreeRTOS9/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1247:..\FreeRTOS9/queue.c **** 	{
1248:..\FreeRTOS9/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1249:..\FreeRTOS9/queue.c **** 	}
1250:..\FreeRTOS9/queue.c **** 	#endif
1251:..\FreeRTOS9/queue.c **** 
1252:..\FreeRTOS9/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1253:..\FreeRTOS9/queue.c **** 	statements within the function itself.  This is done in the interest
1254:..\FreeRTOS9/queue.c **** 	of execution time efficiency. */
1255:..\FreeRTOS9/queue.c **** 
1256:..\FreeRTOS9/queue.c **** 	for( ;; )
1257:..\FreeRTOS9/queue.c **** 	{
1258:..\FreeRTOS9/queue.c **** 		taskENTER_CRITICAL();
1259:..\FreeRTOS9/queue.c **** 		{
1260:..\FreeRTOS9/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1261:..\FreeRTOS9/queue.c **** 
1262:..\FreeRTOS9/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1263:..\FreeRTOS9/queue.c **** 			must be the highest priority task wanting to access the queue. */
1264:..\FreeRTOS9/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1265:..\FreeRTOS9/queue.c **** 			{
1266:..\FreeRTOS9/queue.c **** 				/* Remember the read position in case the queue is only being
1267:..\FreeRTOS9/queue.c **** 				peeked. */
1268:..\FreeRTOS9/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1269:..\FreeRTOS9/queue.c **** 
1270:..\FreeRTOS9/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1271:..\FreeRTOS9/queue.c **** 
1272:..\FreeRTOS9/queue.c **** 				if( xJustPeeking == pdFALSE )
1273:..\FreeRTOS9/queue.c **** 				{
1274:..\FreeRTOS9/queue.c **** 					traceQUEUE_RECEIVE( pxQueue );
1275:..\FreeRTOS9/queue.c **** 
1276:..\FreeRTOS9/queue.c **** 					/* Actually removing data, not just peeking. */
1277:..\FreeRTOS9/queue.c **** 					pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
1278:..\FreeRTOS9/queue.c **** 
1279:..\FreeRTOS9/queue.c **** 					#if ( configUSE_MUTEXES == 1 )
1280:..\FreeRTOS9/queue.c **** 					{
1281:..\FreeRTOS9/queue.c **** 						if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1282:..\FreeRTOS9/queue.c **** 						{
1283:..\FreeRTOS9/queue.c **** 							/* Record the information required to implement
1284:..\FreeRTOS9/queue.c **** 							priority inheritance should it become necessary. */
1285:..\FreeRTOS9/queue.c **** 							pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 24


1286:..\FreeRTOS9/queue.c **** 						}
1287:..\FreeRTOS9/queue.c **** 						else
1288:..\FreeRTOS9/queue.c **** 						{
1289:..\FreeRTOS9/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1290:..\FreeRTOS9/queue.c **** 						}
1291:..\FreeRTOS9/queue.c **** 					}
1292:..\FreeRTOS9/queue.c **** 					#endif /* configUSE_MUTEXES */
1293:..\FreeRTOS9/queue.c **** 
1294:..\FreeRTOS9/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1295:..\FreeRTOS9/queue.c **** 					{
1296:..\FreeRTOS9/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1297:..\FreeRTOS9/queue.c **** 						{
1298:..\FreeRTOS9/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
1299:..\FreeRTOS9/queue.c **** 						}
1300:..\FreeRTOS9/queue.c **** 						else
1301:..\FreeRTOS9/queue.c **** 						{
1302:..\FreeRTOS9/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1303:..\FreeRTOS9/queue.c **** 						}
1304:..\FreeRTOS9/queue.c **** 					}
1305:..\FreeRTOS9/queue.c **** 					else
1306:..\FreeRTOS9/queue.c **** 					{
1307:..\FreeRTOS9/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1308:..\FreeRTOS9/queue.c **** 					}
1309:..\FreeRTOS9/queue.c **** 				}
1310:..\FreeRTOS9/queue.c **** 				else
1311:..\FreeRTOS9/queue.c **** 				{
1312:..\FreeRTOS9/queue.c **** 					traceQUEUE_PEEK( pxQueue );
1313:..\FreeRTOS9/queue.c **** 
1314:..\FreeRTOS9/queue.c **** 					/* The data is not being removed, so reset the read
1315:..\FreeRTOS9/queue.c **** 					pointer. */
1316:..\FreeRTOS9/queue.c **** 					pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1317:..\FreeRTOS9/queue.c **** 
1318:..\FreeRTOS9/queue.c **** 					/* The data is being left in the queue, so see if there are
1319:..\FreeRTOS9/queue.c **** 					any other tasks waiting for the data. */
1320:..\FreeRTOS9/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1321:..\FreeRTOS9/queue.c **** 					{
1322:..\FreeRTOS9/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1323:..\FreeRTOS9/queue.c **** 						{
1324:..\FreeRTOS9/queue.c **** 							/* The task waiting has a higher priority than this task. */
1325:..\FreeRTOS9/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
1326:..\FreeRTOS9/queue.c **** 						}
1327:..\FreeRTOS9/queue.c **** 						else
1328:..\FreeRTOS9/queue.c **** 						{
1329:..\FreeRTOS9/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1330:..\FreeRTOS9/queue.c **** 						}
1331:..\FreeRTOS9/queue.c **** 					}
1332:..\FreeRTOS9/queue.c **** 					else
1333:..\FreeRTOS9/queue.c **** 					{
1334:..\FreeRTOS9/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1335:..\FreeRTOS9/queue.c **** 					}
1336:..\FreeRTOS9/queue.c **** 				}
1337:..\FreeRTOS9/queue.c **** 
1338:..\FreeRTOS9/queue.c **** 				taskEXIT_CRITICAL();
1339:..\FreeRTOS9/queue.c **** 				return pdPASS;
1340:..\FreeRTOS9/queue.c **** 			}
1341:..\FreeRTOS9/queue.c **** 			else
1342:..\FreeRTOS9/queue.c **** 			{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 25


1343:..\FreeRTOS9/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1344:..\FreeRTOS9/queue.c **** 				{
1345:..\FreeRTOS9/queue.c **** 					/* The queue was empty and no block time is specified (or
1346:..\FreeRTOS9/queue.c **** 					the block time has expired) so leave now. */
1347:..\FreeRTOS9/queue.c **** 					taskEXIT_CRITICAL();
1348:..\FreeRTOS9/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1349:..\FreeRTOS9/queue.c **** 					return errQUEUE_EMPTY;
1350:..\FreeRTOS9/queue.c **** 				}
1351:..\FreeRTOS9/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1352:..\FreeRTOS9/queue.c **** 				{
1353:..\FreeRTOS9/queue.c **** 					/* The queue was empty and a block time was specified so
1354:..\FreeRTOS9/queue.c **** 					configure the timeout structure. */
1355:..\FreeRTOS9/queue.c **** 					vTaskSetTimeOutState( &xTimeOut );
1356:..\FreeRTOS9/queue.c **** 					xEntryTimeSet = pdTRUE;
1357:..\FreeRTOS9/queue.c **** 				}
1358:..\FreeRTOS9/queue.c **** 				else
1359:..\FreeRTOS9/queue.c **** 				{
1360:..\FreeRTOS9/queue.c **** 					/* Entry time was already set. */
1361:..\FreeRTOS9/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1362:..\FreeRTOS9/queue.c **** 				}
1363:..\FreeRTOS9/queue.c **** 			}
1364:..\FreeRTOS9/queue.c **** 		}
1365:..\FreeRTOS9/queue.c **** 		taskEXIT_CRITICAL();
1366:..\FreeRTOS9/queue.c **** 
1367:..\FreeRTOS9/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1368:..\FreeRTOS9/queue.c **** 		now the critical section has been exited. */
1369:..\FreeRTOS9/queue.c **** 
1370:..\FreeRTOS9/queue.c **** 		vTaskSuspendAll();
1371:..\FreeRTOS9/queue.c **** 		prvLockQueue( pxQueue );
1372:..\FreeRTOS9/queue.c **** 
1373:..\FreeRTOS9/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1374:..\FreeRTOS9/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1375:..\FreeRTOS9/queue.c **** 		{
1376:..\FreeRTOS9/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1377:..\FreeRTOS9/queue.c **** 			{
1378:..\FreeRTOS9/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1379:..\FreeRTOS9/queue.c **** 
1380:..\FreeRTOS9/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1381:..\FreeRTOS9/queue.c **** 				{
1382:..\FreeRTOS9/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1383:..\FreeRTOS9/queue.c **** 					{
1384:..\FreeRTOS9/queue.c **** 						taskENTER_CRITICAL();
1385:..\FreeRTOS9/queue.c **** 						{
1386:..\FreeRTOS9/queue.c **** 							vTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1387:..\FreeRTOS9/queue.c **** 						}
1388:..\FreeRTOS9/queue.c **** 						taskEXIT_CRITICAL();
1389:..\FreeRTOS9/queue.c **** 					}
1390:..\FreeRTOS9/queue.c **** 					else
1391:..\FreeRTOS9/queue.c **** 					{
1392:..\FreeRTOS9/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1393:..\FreeRTOS9/queue.c **** 					}
1394:..\FreeRTOS9/queue.c **** 				}
1395:..\FreeRTOS9/queue.c **** 				#endif
1396:..\FreeRTOS9/queue.c **** 
1397:..\FreeRTOS9/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1398:..\FreeRTOS9/queue.c **** 				prvUnlockQueue( pxQueue );
1399:..\FreeRTOS9/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 26


1400:..\FreeRTOS9/queue.c **** 				{
1401:..\FreeRTOS9/queue.c **** 					portYIELD_WITHIN_API();
1402:..\FreeRTOS9/queue.c **** 				}
1403:..\FreeRTOS9/queue.c **** 				else
1404:..\FreeRTOS9/queue.c **** 				{
1405:..\FreeRTOS9/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1406:..\FreeRTOS9/queue.c **** 				}
1407:..\FreeRTOS9/queue.c **** 			}
1408:..\FreeRTOS9/queue.c **** 			else
1409:..\FreeRTOS9/queue.c **** 			{
1410:..\FreeRTOS9/queue.c **** 				/* Try again. */
1411:..\FreeRTOS9/queue.c **** 				prvUnlockQueue( pxQueue );
1412:..\FreeRTOS9/queue.c **** 				( void ) xTaskResumeAll();
1413:..\FreeRTOS9/queue.c **** 			}
1414:..\FreeRTOS9/queue.c **** 		}
1415:..\FreeRTOS9/queue.c **** 		else
1416:..\FreeRTOS9/queue.c **** 		{
1417:..\FreeRTOS9/queue.c **** 			prvUnlockQueue( pxQueue );
1418:..\FreeRTOS9/queue.c **** 			( void ) xTaskResumeAll();
1419:..\FreeRTOS9/queue.c **** 
1420:..\FreeRTOS9/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1421:..\FreeRTOS9/queue.c **** 			{
1422:..\FreeRTOS9/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1423:..\FreeRTOS9/queue.c **** 				return errQUEUE_EMPTY;
1424:..\FreeRTOS9/queue.c **** 			}
1425:..\FreeRTOS9/queue.c **** 			else
1426:..\FreeRTOS9/queue.c **** 			{
1427:..\FreeRTOS9/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1428:..\FreeRTOS9/queue.c **** 			}
1429:..\FreeRTOS9/queue.c **** 		}
1430:..\FreeRTOS9/queue.c **** 	}
1431:..\FreeRTOS9/queue.c **** }
1432:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
1433:..\FreeRTOS9/queue.c **** 
1434:..\FreeRTOS9/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1435:..\FreeRTOS9/queue.c **** {
1436:..\FreeRTOS9/queue.c **** BaseType_t xReturn;
1437:..\FreeRTOS9/queue.c **** UBaseType_t uxSavedInterruptStatus;
1438:..\FreeRTOS9/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1439:..\FreeRTOS9/queue.c **** 
1440:..\FreeRTOS9/queue.c **** 	configASSERT( pxQueue );
1441:..\FreeRTOS9/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1442:..\FreeRTOS9/queue.c **** 
1443:..\FreeRTOS9/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1444:..\FreeRTOS9/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1445:..\FreeRTOS9/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1446:..\FreeRTOS9/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1447:..\FreeRTOS9/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1448:..\FreeRTOS9/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1449:..\FreeRTOS9/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1450:..\FreeRTOS9/queue.c **** 	assigned a priority above the configured maximum system call priority.
1451:..\FreeRTOS9/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1452:..\FreeRTOS9/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1453:..\FreeRTOS9/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1454:..\FreeRTOS9/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1455:..\FreeRTOS9/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1456:..\FreeRTOS9/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 27


1457:..\FreeRTOS9/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1458:..\FreeRTOS9/queue.c **** 
1459:..\FreeRTOS9/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1460:..\FreeRTOS9/queue.c **** 	{
1461:..\FreeRTOS9/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1462:..\FreeRTOS9/queue.c **** 
1463:..\FreeRTOS9/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1464:..\FreeRTOS9/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1465:..\FreeRTOS9/queue.c **** 		{
1466:..\FreeRTOS9/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1467:..\FreeRTOS9/queue.c **** 
1468:..\FreeRTOS9/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1469:..\FreeRTOS9/queue.c **** 
1470:..\FreeRTOS9/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1471:..\FreeRTOS9/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
1472:..\FreeRTOS9/queue.c **** 
1473:..\FreeRTOS9/queue.c **** 			/* If the queue is locked the event list will not be modified.
1474:..\FreeRTOS9/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1475:..\FreeRTOS9/queue.c **** 			will know that an ISR has removed data while the queue was
1476:..\FreeRTOS9/queue.c **** 			locked. */
1477:..\FreeRTOS9/queue.c **** 			if( cRxLock == queueUNLOCKED )
1478:..\FreeRTOS9/queue.c **** 			{
1479:..\FreeRTOS9/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1480:..\FreeRTOS9/queue.c **** 				{
1481:..\FreeRTOS9/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1482:..\FreeRTOS9/queue.c **** 					{
1483:..\FreeRTOS9/queue.c **** 						/* The task waiting has a higher priority than us so
1484:..\FreeRTOS9/queue.c **** 						force a context switch. */
1485:..\FreeRTOS9/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1486:..\FreeRTOS9/queue.c **** 						{
1487:..\FreeRTOS9/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1488:..\FreeRTOS9/queue.c **** 						}
1489:..\FreeRTOS9/queue.c **** 						else
1490:..\FreeRTOS9/queue.c **** 						{
1491:..\FreeRTOS9/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1492:..\FreeRTOS9/queue.c **** 						}
1493:..\FreeRTOS9/queue.c **** 					}
1494:..\FreeRTOS9/queue.c **** 					else
1495:..\FreeRTOS9/queue.c **** 					{
1496:..\FreeRTOS9/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1497:..\FreeRTOS9/queue.c **** 					}
1498:..\FreeRTOS9/queue.c **** 				}
1499:..\FreeRTOS9/queue.c **** 				else
1500:..\FreeRTOS9/queue.c **** 				{
1501:..\FreeRTOS9/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1502:..\FreeRTOS9/queue.c **** 				}
1503:..\FreeRTOS9/queue.c **** 			}
1504:..\FreeRTOS9/queue.c **** 			else
1505:..\FreeRTOS9/queue.c **** 			{
1506:..\FreeRTOS9/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1507:..\FreeRTOS9/queue.c **** 				knows that data was removed while it was locked. */
1508:..\FreeRTOS9/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1509:..\FreeRTOS9/queue.c **** 			}
1510:..\FreeRTOS9/queue.c **** 
1511:..\FreeRTOS9/queue.c **** 			xReturn = pdPASS;
1512:..\FreeRTOS9/queue.c **** 		}
1513:..\FreeRTOS9/queue.c **** 		else
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 28


1514:..\FreeRTOS9/queue.c **** 		{
1515:..\FreeRTOS9/queue.c **** 			xReturn = pdFAIL;
1516:..\FreeRTOS9/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1517:..\FreeRTOS9/queue.c **** 		}
1518:..\FreeRTOS9/queue.c **** 	}
1519:..\FreeRTOS9/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1520:..\FreeRTOS9/queue.c **** 
1521:..\FreeRTOS9/queue.c **** 	return xReturn;
1522:..\FreeRTOS9/queue.c **** }
1523:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
1524:..\FreeRTOS9/queue.c **** 
1525:..\FreeRTOS9/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1526:..\FreeRTOS9/queue.c **** {
1527:..\FreeRTOS9/queue.c **** BaseType_t xReturn;
1528:..\FreeRTOS9/queue.c **** UBaseType_t uxSavedInterruptStatus;
1529:..\FreeRTOS9/queue.c **** int8_t *pcOriginalReadPosition;
1530:..\FreeRTOS9/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1531:..\FreeRTOS9/queue.c **** 
1532:..\FreeRTOS9/queue.c **** 	configASSERT( pxQueue );
1533:..\FreeRTOS9/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1534:..\FreeRTOS9/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1535:..\FreeRTOS9/queue.c **** 
1536:..\FreeRTOS9/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1537:..\FreeRTOS9/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1538:..\FreeRTOS9/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1539:..\FreeRTOS9/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1540:..\FreeRTOS9/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1541:..\FreeRTOS9/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1542:..\FreeRTOS9/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1543:..\FreeRTOS9/queue.c **** 	assigned a priority above the configured maximum system call priority.
1544:..\FreeRTOS9/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1545:..\FreeRTOS9/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1546:..\FreeRTOS9/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1547:..\FreeRTOS9/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1548:..\FreeRTOS9/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1549:..\FreeRTOS9/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1550:..\FreeRTOS9/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1551:..\FreeRTOS9/queue.c **** 
1552:..\FreeRTOS9/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1553:..\FreeRTOS9/queue.c **** 	{
1554:..\FreeRTOS9/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1555:..\FreeRTOS9/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1556:..\FreeRTOS9/queue.c **** 		{
1557:..\FreeRTOS9/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1558:..\FreeRTOS9/queue.c **** 
1559:..\FreeRTOS9/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1560:..\FreeRTOS9/queue.c **** 			actually being removed from the queue. */
1561:..\FreeRTOS9/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1562:..\FreeRTOS9/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1563:..\FreeRTOS9/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1564:..\FreeRTOS9/queue.c **** 
1565:..\FreeRTOS9/queue.c **** 			xReturn = pdPASS;
1566:..\FreeRTOS9/queue.c **** 		}
1567:..\FreeRTOS9/queue.c **** 		else
1568:..\FreeRTOS9/queue.c **** 		{
1569:..\FreeRTOS9/queue.c **** 			xReturn = pdFAIL;
1570:..\FreeRTOS9/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 29


1571:..\FreeRTOS9/queue.c **** 		}
1572:..\FreeRTOS9/queue.c **** 	}
1573:..\FreeRTOS9/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1574:..\FreeRTOS9/queue.c **** 
1575:..\FreeRTOS9/queue.c **** 	return xReturn;
1576:..\FreeRTOS9/queue.c **** }
1577:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
1578:..\FreeRTOS9/queue.c **** 
1579:..\FreeRTOS9/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1580:..\FreeRTOS9/queue.c **** {
1581:..\FreeRTOS9/queue.c **** UBaseType_t uxReturn;
1582:..\FreeRTOS9/queue.c **** 
1583:..\FreeRTOS9/queue.c **** 	configASSERT( xQueue );
1584:..\FreeRTOS9/queue.c **** 
1585:..\FreeRTOS9/queue.c **** 	taskENTER_CRITICAL();
1586:..\FreeRTOS9/queue.c **** 	{
1587:..\FreeRTOS9/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1588:..\FreeRTOS9/queue.c **** 	}
1589:..\FreeRTOS9/queue.c **** 	taskEXIT_CRITICAL();
1590:..\FreeRTOS9/queue.c **** 
1591:..\FreeRTOS9/queue.c **** 	return uxReturn;
1592:..\FreeRTOS9/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1593:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
1594:..\FreeRTOS9/queue.c **** 
1595:..\FreeRTOS9/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
1596:..\FreeRTOS9/queue.c **** {
1597:..\FreeRTOS9/queue.c **** UBaseType_t uxReturn;
1598:..\FreeRTOS9/queue.c **** Queue_t *pxQueue;
1599:..\FreeRTOS9/queue.c **** 
1600:..\FreeRTOS9/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
1601:..\FreeRTOS9/queue.c **** 	configASSERT( pxQueue );
1602:..\FreeRTOS9/queue.c **** 
1603:..\FreeRTOS9/queue.c **** 	taskENTER_CRITICAL();
1604:..\FreeRTOS9/queue.c **** 	{
1605:..\FreeRTOS9/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1606:..\FreeRTOS9/queue.c **** 	}
1607:..\FreeRTOS9/queue.c **** 	taskEXIT_CRITICAL();
1608:..\FreeRTOS9/queue.c **** 
1609:..\FreeRTOS9/queue.c **** 	return uxReturn;
1610:..\FreeRTOS9/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1611:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
1612:..\FreeRTOS9/queue.c **** 
1613:..\FreeRTOS9/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1614:..\FreeRTOS9/queue.c **** {
1615:..\FreeRTOS9/queue.c **** UBaseType_t uxReturn;
1616:..\FreeRTOS9/queue.c **** 
1617:..\FreeRTOS9/queue.c **** 	configASSERT( xQueue );
1618:..\FreeRTOS9/queue.c **** 
1619:..\FreeRTOS9/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1620:..\FreeRTOS9/queue.c **** 
1621:..\FreeRTOS9/queue.c **** 	return uxReturn;
1622:..\FreeRTOS9/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1623:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
1624:..\FreeRTOS9/queue.c **** 
1625:..\FreeRTOS9/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1626:..\FreeRTOS9/queue.c **** {
1627:..\FreeRTOS9/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 30


1628:..\FreeRTOS9/queue.c **** 
1629:..\FreeRTOS9/queue.c **** 	configASSERT( pxQueue );
1630:..\FreeRTOS9/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1631:..\FreeRTOS9/queue.c **** 
1632:..\FreeRTOS9/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1633:..\FreeRTOS9/queue.c **** 	{
1634:..\FreeRTOS9/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1635:..\FreeRTOS9/queue.c **** 	}
1636:..\FreeRTOS9/queue.c **** 	#endif
1637:..\FreeRTOS9/queue.c **** 
1638:..\FreeRTOS9/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1639:..\FreeRTOS9/queue.c **** 	{
1640:..\FreeRTOS9/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1641:..\FreeRTOS9/queue.c **** 		again. */
1642:..\FreeRTOS9/queue.c **** 		vPortFree( pxQueue );
1643:..\FreeRTOS9/queue.c **** 	}
1644:..\FreeRTOS9/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1645:..\FreeRTOS9/queue.c **** 	{
1646:..\FreeRTOS9/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1647:..\FreeRTOS9/queue.c **** 		check before attempting to free the memory. */
1648:..\FreeRTOS9/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1649:..\FreeRTOS9/queue.c **** 		{
1650:..\FreeRTOS9/queue.c **** 			vPortFree( pxQueue );
1651:..\FreeRTOS9/queue.c **** 		}
1652:..\FreeRTOS9/queue.c **** 		else
1653:..\FreeRTOS9/queue.c **** 		{
1654:..\FreeRTOS9/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1655:..\FreeRTOS9/queue.c **** 		}
1656:..\FreeRTOS9/queue.c **** 	}
1657:..\FreeRTOS9/queue.c **** 	#else
1658:..\FreeRTOS9/queue.c **** 	{
1659:..\FreeRTOS9/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
1660:..\FreeRTOS9/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
1661:..\FreeRTOS9/queue.c **** 		( void ) pxQueue;
1662:..\FreeRTOS9/queue.c **** 	}
1663:..\FreeRTOS9/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
1664:..\FreeRTOS9/queue.c **** }
1665:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
1666:..\FreeRTOS9/queue.c **** 
1667:..\FreeRTOS9/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1668:..\FreeRTOS9/queue.c **** 
1669:..\FreeRTOS9/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1670:..\FreeRTOS9/queue.c **** 	{
1671:..\FreeRTOS9/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
1672:..\FreeRTOS9/queue.c **** 	}
1673:..\FreeRTOS9/queue.c **** 
1674:..\FreeRTOS9/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1675:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
1676:..\FreeRTOS9/queue.c **** 
1677:..\FreeRTOS9/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1678:..\FreeRTOS9/queue.c **** 
1679:..\FreeRTOS9/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
1680:..\FreeRTOS9/queue.c **** 	{
1681:..\FreeRTOS9/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
1682:..\FreeRTOS9/queue.c **** 	}
1683:..\FreeRTOS9/queue.c **** 
1684:..\FreeRTOS9/queue.c **** #endif /* configUSE_TRACE_FACILITY */
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 31


1685:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
1686:..\FreeRTOS9/queue.c **** 
1687:..\FreeRTOS9/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1688:..\FreeRTOS9/queue.c **** 
1689:..\FreeRTOS9/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
1690:..\FreeRTOS9/queue.c **** 	{
1691:..\FreeRTOS9/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
1692:..\FreeRTOS9/queue.c **** 	}
1693:..\FreeRTOS9/queue.c **** 
1694:..\FreeRTOS9/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1695:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
1696:..\FreeRTOS9/queue.c **** 
1697:..\FreeRTOS9/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
1698:..\FreeRTOS9/queue.c **** {
1699:..\FreeRTOS9/queue.c **** BaseType_t xReturn = pdFALSE;
1700:..\FreeRTOS9/queue.c **** UBaseType_t uxMessagesWaiting;
1701:..\FreeRTOS9/queue.c **** 
1702:..\FreeRTOS9/queue.c **** 	/* This function is called from a critical section. */
1703:..\FreeRTOS9/queue.c **** 
1704:..\FreeRTOS9/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1705:..\FreeRTOS9/queue.c **** 
1706:..\FreeRTOS9/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
1707:..\FreeRTOS9/queue.c **** 	{
1708:..\FreeRTOS9/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
1709:..\FreeRTOS9/queue.c **** 		{
1710:..\FreeRTOS9/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1711:..\FreeRTOS9/queue.c **** 			{
1712:..\FreeRTOS9/queue.c **** 				/* The mutex is no longer being held. */
1713:..\FreeRTOS9/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
1714:..\FreeRTOS9/queue.c **** 				pxQueue->pxMutexHolder = NULL;
1715:..\FreeRTOS9/queue.c **** 			}
1716:..\FreeRTOS9/queue.c **** 			else
1717:..\FreeRTOS9/queue.c **** 			{
1718:..\FreeRTOS9/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1719:..\FreeRTOS9/queue.c **** 			}
1720:..\FreeRTOS9/queue.c **** 		}
1721:..\FreeRTOS9/queue.c **** 		#endif /* configUSE_MUTEXES */
1722:..\FreeRTOS9/queue.c **** 	}
1723:..\FreeRTOS9/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
1724:..\FreeRTOS9/queue.c **** 	{
1725:..\FreeRTOS9/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
1726:..\FreeRTOS9/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
1727:..\FreeRTOS9/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
1728:..\FreeRTOS9/queue.c **** 		{
1729:..\FreeRTOS9/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
1730:..\FreeRTOS9/queue.c **** 		}
1731:..\FreeRTOS9/queue.c **** 		else
1732:..\FreeRTOS9/queue.c **** 		{
1733:..\FreeRTOS9/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1734:..\FreeRTOS9/queue.c **** 		}
1735:..\FreeRTOS9/queue.c **** 	}
1736:..\FreeRTOS9/queue.c **** 	else
1737:..\FreeRTOS9/queue.c **** 	{
1738:..\FreeRTOS9/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
1739:..\FreeRTOS9/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
1740:..\FreeRTOS9/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
1741:..\FreeRTOS9/queue.c **** 		{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 32


1742:..\FreeRTOS9/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
1743:..\FreeRTOS9/queue.c **** 		}
1744:..\FreeRTOS9/queue.c **** 		else
1745:..\FreeRTOS9/queue.c **** 		{
1746:..\FreeRTOS9/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1747:..\FreeRTOS9/queue.c **** 		}
1748:..\FreeRTOS9/queue.c **** 
1749:..\FreeRTOS9/queue.c **** 		if( xPosition == queueOVERWRITE )
1750:..\FreeRTOS9/queue.c **** 		{
1751:..\FreeRTOS9/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1752:..\FreeRTOS9/queue.c **** 			{
1753:..\FreeRTOS9/queue.c **** 				/* An item is not being added but overwritten, so subtract
1754:..\FreeRTOS9/queue.c **** 				one from the recorded number of items in the queue so when
1755:..\FreeRTOS9/queue.c **** 				one is added again below the number of recorded items remains
1756:..\FreeRTOS9/queue.c **** 				correct. */
1757:..\FreeRTOS9/queue.c **** 				--uxMessagesWaiting;
1758:..\FreeRTOS9/queue.c **** 			}
1759:..\FreeRTOS9/queue.c **** 			else
1760:..\FreeRTOS9/queue.c **** 			{
1761:..\FreeRTOS9/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1762:..\FreeRTOS9/queue.c **** 			}
1763:..\FreeRTOS9/queue.c **** 		}
1764:..\FreeRTOS9/queue.c **** 		else
1765:..\FreeRTOS9/queue.c **** 		{
1766:..\FreeRTOS9/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1767:..\FreeRTOS9/queue.c **** 		}
1768:..\FreeRTOS9/queue.c **** 	}
1769:..\FreeRTOS9/queue.c **** 
1770:..\FreeRTOS9/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + 1;
1771:..\FreeRTOS9/queue.c **** 
1772:..\FreeRTOS9/queue.c **** 	return xReturn;
1773:..\FreeRTOS9/queue.c **** }
1774:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
1775:..\FreeRTOS9/queue.c **** 
1776:..\FreeRTOS9/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
1777:..\FreeRTOS9/queue.c **** {
1778:..\FreeRTOS9/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
1779:..\FreeRTOS9/queue.c **** 	{
1780:..\FreeRTOS9/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
1781:..\FreeRTOS9/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
1782:..\FreeRTOS9/queue.c **** 		{
1783:..\FreeRTOS9/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
1784:..\FreeRTOS9/queue.c **** 		}
1785:..\FreeRTOS9/queue.c **** 		else
1786:..\FreeRTOS9/queue.c **** 		{
1787:..\FreeRTOS9/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1788:..\FreeRTOS9/queue.c **** 		}
1789:..\FreeRTOS9/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
1790:..\FreeRTOS9/queue.c **** 	}
1791:..\FreeRTOS9/queue.c **** }
1792:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
1793:..\FreeRTOS9/queue.c **** 
1794:..\FreeRTOS9/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
1795:..\FreeRTOS9/queue.c **** {
1796:..\FreeRTOS9/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
1797:..\FreeRTOS9/queue.c **** 
1798:..\FreeRTOS9/queue.c **** 	/* The lock counts contains the number of extra data items placed or
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 33


1799:..\FreeRTOS9/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
1800:..\FreeRTOS9/queue.c **** 	locked items can be added or removed, but the event lists cannot be
1801:..\FreeRTOS9/queue.c **** 	updated. */
1802:..\FreeRTOS9/queue.c **** 	taskENTER_CRITICAL();
1803:..\FreeRTOS9/queue.c **** 	{
1804:..\FreeRTOS9/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
1805:..\FreeRTOS9/queue.c **** 
1806:..\FreeRTOS9/queue.c **** 		/* See if data was added to the queue while it was locked. */
1807:..\FreeRTOS9/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
1808:..\FreeRTOS9/queue.c **** 		{
1809:..\FreeRTOS9/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
1810:..\FreeRTOS9/queue.c **** 			blocked waiting for data to become available? */
1811:..\FreeRTOS9/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
1812:..\FreeRTOS9/queue.c **** 			{
1813:..\FreeRTOS9/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
1814:..\FreeRTOS9/queue.c **** 				{
1815:..\FreeRTOS9/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1816:..\FreeRTOS9/queue.c **** 					{
1817:..\FreeRTOS9/queue.c **** 						/* The queue is a member of a queue set, and posting to
1818:..\FreeRTOS9/queue.c **** 						the queue set caused a higher priority task to unblock.
1819:..\FreeRTOS9/queue.c **** 						A context switch is required. */
1820:..\FreeRTOS9/queue.c **** 						vTaskMissedYield();
1821:..\FreeRTOS9/queue.c **** 					}
1822:..\FreeRTOS9/queue.c **** 					else
1823:..\FreeRTOS9/queue.c **** 					{
1824:..\FreeRTOS9/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1825:..\FreeRTOS9/queue.c **** 					}
1826:..\FreeRTOS9/queue.c **** 				}
1827:..\FreeRTOS9/queue.c **** 				else
1828:..\FreeRTOS9/queue.c **** 				{
1829:..\FreeRTOS9/queue.c **** 					/* Tasks that are removed from the event list will get
1830:..\FreeRTOS9/queue.c **** 					added to the pending ready list as the scheduler is still
1831:..\FreeRTOS9/queue.c **** 					suspended. */
1832:..\FreeRTOS9/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1833:..\FreeRTOS9/queue.c **** 					{
1834:..\FreeRTOS9/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1835:..\FreeRTOS9/queue.c **** 						{
1836:..\FreeRTOS9/queue.c **** 							/* The task waiting has a higher priority so record that a
1837:..\FreeRTOS9/queue.c **** 							context	switch is required. */
1838:..\FreeRTOS9/queue.c **** 							vTaskMissedYield();
1839:..\FreeRTOS9/queue.c **** 						}
1840:..\FreeRTOS9/queue.c **** 						else
1841:..\FreeRTOS9/queue.c **** 						{
1842:..\FreeRTOS9/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1843:..\FreeRTOS9/queue.c **** 						}
1844:..\FreeRTOS9/queue.c **** 					}
1845:..\FreeRTOS9/queue.c **** 					else
1846:..\FreeRTOS9/queue.c **** 					{
1847:..\FreeRTOS9/queue.c **** 						break;
1848:..\FreeRTOS9/queue.c **** 					}
1849:..\FreeRTOS9/queue.c **** 				}
1850:..\FreeRTOS9/queue.c **** 			}
1851:..\FreeRTOS9/queue.c **** 			#else /* configUSE_QUEUE_SETS */
1852:..\FreeRTOS9/queue.c **** 			{
1853:..\FreeRTOS9/queue.c **** 				/* Tasks that are removed from the event list will get added to
1854:..\FreeRTOS9/queue.c **** 				the pending ready list as the scheduler is still suspended. */
1855:..\FreeRTOS9/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 34


1856:..\FreeRTOS9/queue.c **** 				{
1857:..\FreeRTOS9/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1858:..\FreeRTOS9/queue.c **** 					{
1859:..\FreeRTOS9/queue.c **** 						/* The task waiting has a higher priority so record that
1860:..\FreeRTOS9/queue.c **** 						a context switch is required. */
1861:..\FreeRTOS9/queue.c **** 						vTaskMissedYield();
1862:..\FreeRTOS9/queue.c **** 					}
1863:..\FreeRTOS9/queue.c **** 					else
1864:..\FreeRTOS9/queue.c **** 					{
1865:..\FreeRTOS9/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1866:..\FreeRTOS9/queue.c **** 					}
1867:..\FreeRTOS9/queue.c **** 				}
1868:..\FreeRTOS9/queue.c **** 				else
1869:..\FreeRTOS9/queue.c **** 				{
1870:..\FreeRTOS9/queue.c **** 					break;
1871:..\FreeRTOS9/queue.c **** 				}
1872:..\FreeRTOS9/queue.c **** 			}
1873:..\FreeRTOS9/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
1874:..\FreeRTOS9/queue.c **** 
1875:..\FreeRTOS9/queue.c **** 			--cTxLock;
1876:..\FreeRTOS9/queue.c **** 		}
1877:..\FreeRTOS9/queue.c **** 
1878:..\FreeRTOS9/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
1879:..\FreeRTOS9/queue.c **** 	}
1880:..\FreeRTOS9/queue.c **** 	taskEXIT_CRITICAL();
1881:..\FreeRTOS9/queue.c **** 
1882:..\FreeRTOS9/queue.c **** 	/* Do the same for the Rx lock. */
1883:..\FreeRTOS9/queue.c **** 	taskENTER_CRITICAL();
1884:..\FreeRTOS9/queue.c **** 	{
1885:..\FreeRTOS9/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
1886:..\FreeRTOS9/queue.c **** 
1887:..\FreeRTOS9/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
1888:..\FreeRTOS9/queue.c **** 		{
1889:..\FreeRTOS9/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1890:..\FreeRTOS9/queue.c **** 			{
1891:..\FreeRTOS9/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1892:..\FreeRTOS9/queue.c **** 				{
1893:..\FreeRTOS9/queue.c **** 					vTaskMissedYield();
1894:..\FreeRTOS9/queue.c **** 				}
1895:..\FreeRTOS9/queue.c **** 				else
1896:..\FreeRTOS9/queue.c **** 				{
1897:..\FreeRTOS9/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1898:..\FreeRTOS9/queue.c **** 				}
1899:..\FreeRTOS9/queue.c **** 
1900:..\FreeRTOS9/queue.c **** 				--cRxLock;
1901:..\FreeRTOS9/queue.c **** 			}
1902:..\FreeRTOS9/queue.c **** 			else
1903:..\FreeRTOS9/queue.c **** 			{
1904:..\FreeRTOS9/queue.c **** 				break;
1905:..\FreeRTOS9/queue.c **** 			}
1906:..\FreeRTOS9/queue.c **** 		}
1907:..\FreeRTOS9/queue.c **** 
1908:..\FreeRTOS9/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
1909:..\FreeRTOS9/queue.c **** 	}
1910:..\FreeRTOS9/queue.c **** 	taskEXIT_CRITICAL();
1911:..\FreeRTOS9/queue.c **** }
1912:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 35


1913:..\FreeRTOS9/queue.c **** 
1914:..\FreeRTOS9/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
1915:..\FreeRTOS9/queue.c **** {
1916:..\FreeRTOS9/queue.c **** BaseType_t xReturn;
1917:..\FreeRTOS9/queue.c **** 
1918:..\FreeRTOS9/queue.c **** 	taskENTER_CRITICAL();
1919:..\FreeRTOS9/queue.c **** 	{
1920:..\FreeRTOS9/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
1921:..\FreeRTOS9/queue.c **** 		{
1922:..\FreeRTOS9/queue.c **** 			xReturn = pdTRUE;
1923:..\FreeRTOS9/queue.c **** 		}
1924:..\FreeRTOS9/queue.c **** 		else
1925:..\FreeRTOS9/queue.c **** 		{
1926:..\FreeRTOS9/queue.c **** 			xReturn = pdFALSE;
1927:..\FreeRTOS9/queue.c **** 		}
1928:..\FreeRTOS9/queue.c **** 	}
1929:..\FreeRTOS9/queue.c **** 	taskEXIT_CRITICAL();
1930:..\FreeRTOS9/queue.c **** 
1931:..\FreeRTOS9/queue.c **** 	return xReturn;
1932:..\FreeRTOS9/queue.c **** }
1933:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
1934:..\FreeRTOS9/queue.c **** 
1935:..\FreeRTOS9/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
1936:..\FreeRTOS9/queue.c **** {
1937:..\FreeRTOS9/queue.c **** BaseType_t xReturn;
1938:..\FreeRTOS9/queue.c **** 
1939:..\FreeRTOS9/queue.c **** 	configASSERT( xQueue );
1940:..\FreeRTOS9/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
1941:..\FreeRTOS9/queue.c **** 	{
1942:..\FreeRTOS9/queue.c **** 		xReturn = pdTRUE;
1943:..\FreeRTOS9/queue.c **** 	}
1944:..\FreeRTOS9/queue.c **** 	else
1945:..\FreeRTOS9/queue.c **** 	{
1946:..\FreeRTOS9/queue.c **** 		xReturn = pdFALSE;
1947:..\FreeRTOS9/queue.c **** 	}
1948:..\FreeRTOS9/queue.c **** 
1949:..\FreeRTOS9/queue.c **** 	return xReturn;
1950:..\FreeRTOS9/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
1951:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
1952:..\FreeRTOS9/queue.c **** 
1953:..\FreeRTOS9/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
1954:..\FreeRTOS9/queue.c **** {
  27              		.loc 1 1954 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36 0002 0400     		movs	r4, r0
1955:..\FreeRTOS9/queue.c **** BaseType_t xReturn;
1956:..\FreeRTOS9/queue.c **** 
1957:..\FreeRTOS9/queue.c **** 	taskENTER_CRITICAL();
  37              		.loc 1 1957 0
  38 0004 FFF7FEFF 		bl	vPortEnterCritical
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 36


  39              	.LVL1:
1958:..\FreeRTOS9/queue.c **** 	{
1959:..\FreeRTOS9/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  40              		.loc 1 1959 0
  41 0008 A26B     		ldr	r2, [r4, #56]
  42 000a E36B     		ldr	r3, [r4, #60]
  43 000c 9A42     		cmp	r2, r3
  44 000e 01D1     		bne	.L3
1960:..\FreeRTOS9/queue.c **** 		{
1961:..\FreeRTOS9/queue.c **** 			xReturn = pdTRUE;
  45              		.loc 1 1961 0
  46 0010 0124     		movs	r4, #1
  47              	.LVL2:
  48 0012 00E0     		b	.L2
  49              	.LVL3:
  50              	.L3:
1962:..\FreeRTOS9/queue.c **** 		}
1963:..\FreeRTOS9/queue.c **** 		else
1964:..\FreeRTOS9/queue.c **** 		{
1965:..\FreeRTOS9/queue.c **** 			xReturn = pdFALSE;
  51              		.loc 1 1965 0
  52 0014 0024     		movs	r4, #0
  53              	.LVL4:
  54              	.L2:
1966:..\FreeRTOS9/queue.c **** 		}
1967:..\FreeRTOS9/queue.c **** 	}
1968:..\FreeRTOS9/queue.c **** 	taskEXIT_CRITICAL();
  55              		.loc 1 1968 0
  56 0016 FFF7FEFF 		bl	vPortExitCritical
  57              	.LVL5:
1969:..\FreeRTOS9/queue.c **** 
1970:..\FreeRTOS9/queue.c **** 	return xReturn;
1971:..\FreeRTOS9/queue.c **** }
  58              		.loc 1 1971 0
  59 001a 2000     		movs	r0, r4
  60              		@ sp needed
  61              	.LVL6:
  62 001c 10BD     		pop	{r4, pc}
  63              		.cfi_endproc
  64              	.LFE55:
  65              		.size	prvIsQueueFull, .-prvIsQueueFull
  66 001e C046     		.section	.text.prvIsQueueEmpty,"ax",%progbits
  67              		.align	2
  68              		.code	16
  69              		.thumb_func
  70              		.type	prvIsQueueEmpty, %function
  71              	prvIsQueueEmpty:
  72              	.LFB53:
1915:..\FreeRTOS9/queue.c **** BaseType_t xReturn;
  73              		.loc 1 1915 0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              	.LVL7:
  78 0000 10B5     		push	{r4, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 4, -8
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 37


  81              		.cfi_offset 14, -4
  82 0002 0400     		movs	r4, r0
1918:..\FreeRTOS9/queue.c **** 	{
  83              		.loc 1 1918 0
  84 0004 FFF7FEFF 		bl	vPortEnterCritical
  85              	.LVL8:
1920:..\FreeRTOS9/queue.c **** 		{
  86              		.loc 1 1920 0
  87 0008 A36B     		ldr	r3, [r4, #56]
  88 000a 002B     		cmp	r3, #0
  89 000c 01D1     		bne	.L6
1922:..\FreeRTOS9/queue.c **** 		}
  90              		.loc 1 1922 0
  91 000e 0124     		movs	r4, #1
  92              	.LVL9:
  93 0010 00E0     		b	.L5
  94              	.LVL10:
  95              	.L6:
1926:..\FreeRTOS9/queue.c **** 		}
  96              		.loc 1 1926 0
  97 0012 0024     		movs	r4, #0
  98              	.LVL11:
  99              	.L5:
1929:..\FreeRTOS9/queue.c **** 
 100              		.loc 1 1929 0
 101 0014 FFF7FEFF 		bl	vPortExitCritical
 102              	.LVL12:
1932:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 103              		.loc 1 1932 0
 104 0018 2000     		movs	r0, r4
 105              		@ sp needed
 106              	.LVL13:
 107 001a 10BD     		pop	{r4, pc}
 108              		.cfi_endproc
 109              	.LFE53:
 110              		.size	prvIsQueueEmpty, .-prvIsQueueEmpty
 111              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 112              		.align	2
 113              		.code	16
 114              		.thumb_func
 115              		.type	prvCopyDataToQueue, %function
 116              	prvCopyDataToQueue:
 117              	.LFB50:
1698:..\FreeRTOS9/queue.c **** BaseType_t xReturn = pdFALSE;
 118              		.loc 1 1698 0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              	.LVL14:
 123 0000 70B5     		push	{r4, r5, r6, lr}
 124              		.cfi_def_cfa_offset 16
 125              		.cfi_offset 4, -16
 126              		.cfi_offset 5, -12
 127              		.cfi_offset 6, -8
 128              		.cfi_offset 14, -4
 129 0002 0400     		movs	r4, r0
 130 0004 1600     		movs	r6, r2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 38


 131              	.LVL15:
1704:..\FreeRTOS9/queue.c **** 
 132              		.loc 1 1704 0
 133 0006 856B     		ldr	r5, [r0, #56]
 134              	.LVL16:
1706:..\FreeRTOS9/queue.c **** 	{
 135              		.loc 1 1706 0
 136 0008 026C     		ldr	r2, [r0, #64]
 137              	.LVL17:
 138 000a 002A     		cmp	r2, #0
 139 000c 08D1     		bne	.L8
1710:..\FreeRTOS9/queue.c **** 			{
 140              		.loc 1 1710 0
 141 000e 0368     		ldr	r3, [r0]
 142 0010 002B     		cmp	r3, #0
 143 0012 2CD1     		bne	.L12
1713:..\FreeRTOS9/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 144              		.loc 1 1713 0
 145 0014 4068     		ldr	r0, [r0, #4]
 146              	.LVL18:
 147 0016 FFF7FEFF 		bl	xTaskPriorityDisinherit
 148              	.LVL19:
1714:..\FreeRTOS9/queue.c **** 			}
 149              		.loc 1 1714 0
 150 001a 0023     		movs	r3, #0
 151 001c 6360     		str	r3, [r4, #4]
 152 001e 2DE0     		b	.L9
 153              	.LVL20:
 154              	.L8:
1723:..\FreeRTOS9/queue.c **** 	{
 155              		.loc 1 1723 0
 156 0020 002E     		cmp	r6, #0
 157 0022 0ED1     		bne	.L10
1725:..\FreeRTOS9/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 158              		.loc 1 1725 0
 159 0024 8068     		ldr	r0, [r0, #8]
 160              	.LVL21:
 161 0026 FFF7FEFF 		bl	memcpy
 162              	.LVL22:
1726:..\FreeRTOS9/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 163              		.loc 1 1726 0
 164 002a A368     		ldr	r3, [r4, #8]
 165 002c 226C     		ldr	r2, [r4, #64]
 166 002e 9446     		mov	ip, r2
 167 0030 6344     		add	r3, r3, ip
 168 0032 A360     		str	r3, [r4, #8]
1727:..\FreeRTOS9/queue.c **** 		{
 169              		.loc 1 1727 0
 170 0034 6268     		ldr	r2, [r4, #4]
 171 0036 9342     		cmp	r3, r2
 172 0038 1BD3     		bcc	.L13
1729:..\FreeRTOS9/queue.c **** 		}
 173              		.loc 1 1729 0
 174 003a 2368     		ldr	r3, [r4]
 175 003c A360     		str	r3, [r4, #8]
1699:..\FreeRTOS9/queue.c **** UBaseType_t uxMessagesWaiting;
 176              		.loc 1 1699 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 39


 177 003e 0020     		movs	r0, #0
 178 0040 1CE0     		b	.L9
 179              	.LVL23:
 180              	.L10:
1738:..\FreeRTOS9/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 181              		.loc 1 1738 0
 182 0042 C068     		ldr	r0, [r0, #12]
 183              	.LVL24:
 184 0044 FFF7FEFF 		bl	memcpy
 185              	.LVL25:
1739:..\FreeRTOS9/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 186              		.loc 1 1739 0
 187 0048 236C     		ldr	r3, [r4, #64]
 188 004a 5B42     		rsbs	r3, r3, #0
 189 004c E268     		ldr	r2, [r4, #12]
 190 004e D218     		adds	r2, r2, r3
 191 0050 E260     		str	r2, [r4, #12]
1740:..\FreeRTOS9/queue.c **** 		{
 192              		.loc 1 1740 0
 193 0052 2168     		ldr	r1, [r4]
 194 0054 8A42     		cmp	r2, r1
 195 0056 03D2     		bcs	.L11
1742:..\FreeRTOS9/queue.c **** 		}
 196              		.loc 1 1742 0
 197 0058 6268     		ldr	r2, [r4, #4]
 198 005a 9446     		mov	ip, r2
 199 005c 6344     		add	r3, r3, ip
 200 005e E360     		str	r3, [r4, #12]
 201              	.L11:
1749:..\FreeRTOS9/queue.c **** 		{
 202              		.loc 1 1749 0
 203 0060 022E     		cmp	r6, #2
 204 0062 08D1     		bne	.L14
1751:..\FreeRTOS9/queue.c **** 			{
 205              		.loc 1 1751 0
 206 0064 002D     		cmp	r5, #0
 207 0066 08D0     		beq	.L15
1757:..\FreeRTOS9/queue.c **** 			}
 208              		.loc 1 1757 0
 209 0068 013D     		subs	r5, r5, #1
 210              	.LVL26:
1699:..\FreeRTOS9/queue.c **** UBaseType_t uxMessagesWaiting;
 211              		.loc 1 1699 0
 212 006a 0020     		movs	r0, #0
 213 006c 06E0     		b	.L9
 214              	.LVL27:
 215              	.L12:
 216 006e 0020     		movs	r0, #0
 217              	.LVL28:
 218 0070 04E0     		b	.L9
 219              	.LVL29:
 220              	.L13:
 221 0072 0020     		movs	r0, #0
 222 0074 02E0     		b	.L9
 223              	.L14:
 224 0076 0020     		movs	r0, #0
 225 0078 00E0     		b	.L9
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 40


 226              	.L15:
 227 007a 0020     		movs	r0, #0
 228              	.LVL30:
 229              	.L9:
1770:..\FreeRTOS9/queue.c **** 
 230              		.loc 1 1770 0
 231 007c 0135     		adds	r5, r5, #1
 232              	.LVL31:
 233 007e A563     		str	r5, [r4, #56]
1773:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 234              		.loc 1 1773 0
 235              		@ sp needed
 236              	.LVL32:
 237              	.LVL33:
 238              	.LVL34:
 239 0080 70BD     		pop	{r4, r5, r6, pc}
 240              		.cfi_endproc
 241              	.LFE50:
 242              		.size	prvCopyDataToQueue, .-prvCopyDataToQueue
 243 0082 C046     		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 244              		.align	2
 245              		.code	16
 246              		.thumb_func
 247              		.type	prvCopyDataFromQueue, %function
 248              	prvCopyDataFromQueue:
 249              	.LFB51:
1777:..\FreeRTOS9/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 250              		.loc 1 1777 0
 251              		.cfi_startproc
 252              		@ args = 0, pretend = 0, frame = 0
 253              		@ frame_needed = 0, uses_anonymous_args = 0
 254              	.LVL35:
 255 0000 10B5     		push	{r4, lr}
 256              		.cfi_def_cfa_offset 8
 257              		.cfi_offset 4, -8
 258              		.cfi_offset 14, -4
 259 0002 0C00     		movs	r4, r1
1778:..\FreeRTOS9/queue.c **** 	{
 260              		.loc 1 1778 0
 261 0004 026C     		ldr	r2, [r0, #64]
 262 0006 002A     		cmp	r2, #0
 263 0008 0BD0     		beq	.L16
1780:..\FreeRTOS9/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 264              		.loc 1 1780 0
 265 000a C368     		ldr	r3, [r0, #12]
 266 000c 9B18     		adds	r3, r3, r2
 267 000e C360     		str	r3, [r0, #12]
1781:..\FreeRTOS9/queue.c **** 		{
 268              		.loc 1 1781 0
 269 0010 4168     		ldr	r1, [r0, #4]
 270              	.LVL36:
 271 0012 8B42     		cmp	r3, r1
 272 0014 01D3     		bcc	.L18
1783:..\FreeRTOS9/queue.c **** 		}
 273              		.loc 1 1783 0
 274 0016 0368     		ldr	r3, [r0]
 275 0018 C360     		str	r3, [r0, #12]
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 41


 276              	.L18:
1789:..\FreeRTOS9/queue.c **** 	}
 277              		.loc 1 1789 0
 278 001a C168     		ldr	r1, [r0, #12]
 279 001c 2000     		movs	r0, r4
 280              	.LVL37:
 281 001e FFF7FEFF 		bl	memcpy
 282              	.LVL38:
 283              	.L16:
1791:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 284              		.loc 1 1791 0
 285              		@ sp needed
 286              	.LVL39:
 287 0022 10BD     		pop	{r4, pc}
 288              		.cfi_endproc
 289              	.LFE51:
 290              		.size	prvCopyDataFromQueue, .-prvCopyDataFromQueue
 291              		.section	.text.prvUnlockQueue,"ax",%progbits
 292              		.align	2
 293              		.code	16
 294              		.thumb_func
 295              		.type	prvUnlockQueue, %function
 296              	prvUnlockQueue:
 297              	.LFB52:
1795:..\FreeRTOS9/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 298              		.loc 1 1795 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              	.LVL40:
 303 0000 70B5     		push	{r4, r5, r6, lr}
 304              		.cfi_def_cfa_offset 16
 305              		.cfi_offset 4, -16
 306              		.cfi_offset 5, -12
 307              		.cfi_offset 6, -8
 308              		.cfi_offset 14, -4
 309 0002 0500     		movs	r5, r0
1802:..\FreeRTOS9/queue.c **** 	{
 310              		.loc 1 1802 0
 311 0004 FFF7FEFF 		bl	vPortEnterCritical
 312              	.LVL41:
 313              	.LBB2:
1804:..\FreeRTOS9/queue.c **** 
 314              		.loc 1 1804 0
 315 0008 4523     		movs	r3, #69
 316 000a EC5C     		ldrb	r4, [r5, r3]
 317 000c 64B2     		sxtb	r4, r4
 318              	.LVL42:
1807:..\FreeRTOS9/queue.c **** 		{
 319              		.loc 1 1807 0
 320 000e 0CE0     		b	.L20
 321              	.L23:
1855:..\FreeRTOS9/queue.c **** 				{
 322              		.loc 1 1855 0
 323 0010 6B6A     		ldr	r3, [r5, #36]
 324 0012 002B     		cmp	r3, #0
 325 0014 0BD0     		beq	.L21
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 42


1857:..\FreeRTOS9/queue.c **** 					{
 326              		.loc 1 1857 0
 327 0016 2800     		movs	r0, r5
 328 0018 2430     		adds	r0, r0, #36
 329 001a FFF7FEFF 		bl	xTaskRemoveFromEventList
 330              	.LVL43:
 331 001e 0028     		cmp	r0, #0
 332 0020 01D0     		beq	.L22
1861:..\FreeRTOS9/queue.c **** 					}
 333              		.loc 1 1861 0
 334 0022 FFF7FEFF 		bl	vTaskMissedYield
 335              	.LVL44:
 336              	.L22:
1875:..\FreeRTOS9/queue.c **** 		}
 337              		.loc 1 1875 0
 338 0026 013C     		subs	r4, r4, #1
 339              	.LVL45:
 340 0028 64B2     		sxtb	r4, r4
 341              	.LVL46:
 342              	.L20:
1807:..\FreeRTOS9/queue.c **** 		{
 343              		.loc 1 1807 0
 344 002a 002C     		cmp	r4, #0
 345 002c F0DC     		bgt	.L23
 346              	.L21:
1878:..\FreeRTOS9/queue.c **** 	}
 347              		.loc 1 1878 0
 348 002e FF22     		movs	r2, #255
 349 0030 4523     		movs	r3, #69
 350 0032 EA54     		strb	r2, [r5, r3]
 351              	.LBE2:
1880:..\FreeRTOS9/queue.c **** 
 352              		.loc 1 1880 0
 353 0034 FFF7FEFF 		bl	vPortExitCritical
 354              	.LVL47:
1883:..\FreeRTOS9/queue.c **** 	{
 355              		.loc 1 1883 0
 356 0038 FFF7FEFF 		bl	vPortEnterCritical
 357              	.LVL48:
 358              	.LBB3:
1885:..\FreeRTOS9/queue.c **** 
 359              		.loc 1 1885 0
 360 003c 4423     		movs	r3, #68
 361 003e EC5C     		ldrb	r4, [r5, r3]
 362              	.LVL49:
 363 0040 64B2     		sxtb	r4, r4
 364              	.LVL50:
1887:..\FreeRTOS9/queue.c **** 		{
 365              		.loc 1 1887 0
 366 0042 0CE0     		b	.L24
 367              	.L27:
1889:..\FreeRTOS9/queue.c **** 			{
 368              		.loc 1 1889 0
 369 0044 2B69     		ldr	r3, [r5, #16]
 370 0046 002B     		cmp	r3, #0
 371 0048 0BD0     		beq	.L25
1891:..\FreeRTOS9/queue.c **** 				{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 43


 372              		.loc 1 1891 0
 373 004a 2800     		movs	r0, r5
 374 004c 1030     		adds	r0, r0, #16
 375 004e FFF7FEFF 		bl	xTaskRemoveFromEventList
 376              	.LVL51:
 377 0052 0028     		cmp	r0, #0
 378 0054 01D0     		beq	.L26
1893:..\FreeRTOS9/queue.c **** 				}
 379              		.loc 1 1893 0
 380 0056 FFF7FEFF 		bl	vTaskMissedYield
 381              	.LVL52:
 382              	.L26:
1900:..\FreeRTOS9/queue.c **** 			}
 383              		.loc 1 1900 0
 384 005a 013C     		subs	r4, r4, #1
 385              	.LVL53:
 386 005c 64B2     		sxtb	r4, r4
 387              	.LVL54:
 388              	.L24:
1887:..\FreeRTOS9/queue.c **** 		{
 389              		.loc 1 1887 0
 390 005e 002C     		cmp	r4, #0
 391 0060 F0DC     		bgt	.L27
 392              	.L25:
1908:..\FreeRTOS9/queue.c **** 	}
 393              		.loc 1 1908 0
 394 0062 FF22     		movs	r2, #255
 395 0064 4423     		movs	r3, #68
 396 0066 EA54     		strb	r2, [r5, r3]
 397              	.LBE3:
1910:..\FreeRTOS9/queue.c **** }
 398              		.loc 1 1910 0
 399 0068 FFF7FEFF 		bl	vPortExitCritical
 400              	.LVL55:
1911:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 401              		.loc 1 1911 0
 402              		@ sp needed
 403              	.LVL56:
 404              	.LVL57:
 405 006c 70BD     		pop	{r4, r5, r6, pc}
 406              		.cfi_endproc
 407              	.LFE52:
 408              		.size	prvUnlockQueue, .-prvUnlockQueue
 409 006e C046     		.section	.text.xQueueGenericReset,"ax",%progbits
 410              		.align	2
 411              		.global	xQueueGenericReset
 412              		.code	16
 413              		.thumb_func
 414              		.type	xQueueGenericReset, %function
 415              	xQueueGenericReset:
 416              	.LFB32:
 280:..\FreeRTOS9/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 417              		.loc 1 280 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              	.LVL58:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 44


 422 0000 70B5     		push	{r4, r5, r6, lr}
 423              		.cfi_def_cfa_offset 16
 424              		.cfi_offset 4, -16
 425              		.cfi_offset 5, -12
 426              		.cfi_offset 6, -8
 427              		.cfi_offset 14, -4
 428 0002 0400     		movs	r4, r0
 429 0004 0D00     		movs	r5, r1
 430              	.LVL59:
 285:..\FreeRTOS9/queue.c **** 	{
 431              		.loc 1 285 0
 432 0006 FFF7FEFF 		bl	vPortEnterCritical
 433              	.LVL60:
 287:..\FreeRTOS9/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 434              		.loc 1 287 0
 435 000a 2268     		ldr	r2, [r4]
 436 000c E36B     		ldr	r3, [r4, #60]
 437 000e 206C     		ldr	r0, [r4, #64]
 438 0010 0100     		movs	r1, r0
 439 0012 5943     		muls	r1, r3
 440 0014 5118     		adds	r1, r2, r1
 441 0016 6160     		str	r1, [r4, #4]
 288:..\FreeRTOS9/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 442              		.loc 1 288 0
 443 0018 0021     		movs	r1, #0
 444 001a A163     		str	r1, [r4, #56]
 289:..\FreeRTOS9/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 445              		.loc 1 289 0
 446 001c A260     		str	r2, [r4, #8]
 290:..\FreeRTOS9/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 447              		.loc 1 290 0
 448 001e 013B     		subs	r3, r3, #1
 449 0020 4343     		muls	r3, r0
 450 0022 D318     		adds	r3, r2, r3
 451 0024 E360     		str	r3, [r4, #12]
 291:..\FreeRTOS9/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 452              		.loc 1 291 0
 453 0026 FF23     		movs	r3, #255
 454 0028 4422     		movs	r2, #68
 455 002a A354     		strb	r3, [r4, r2]
 292:..\FreeRTOS9/queue.c **** 
 456              		.loc 1 292 0
 457 002c 0132     		adds	r2, r2, #1
 458 002e A354     		strb	r3, [r4, r2]
 294:..\FreeRTOS9/queue.c **** 		{
 459              		.loc 1 294 0
 460 0030 002D     		cmp	r5, #0
 461 0032 0BD1     		bne	.L29
 301:..\FreeRTOS9/queue.c **** 			{
 462              		.loc 1 301 0
 463 0034 2369     		ldr	r3, [r4, #16]
 464 0036 002B     		cmp	r3, #0
 465 0038 10D0     		beq	.L30
 303:..\FreeRTOS9/queue.c **** 				{
 466              		.loc 1 303 0
 467 003a 2000     		movs	r0, r4
 468 003c 1030     		adds	r0, r0, #16
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 45


 469 003e FFF7FEFF 		bl	xTaskRemoveFromEventList
 470              	.LVL61:
 471 0042 0028     		cmp	r0, #0
 472 0044 0AD0     		beq	.L30
 305:..\FreeRTOS9/queue.c **** 				}
 473              		.loc 1 305 0
 474 0046 FFF7FEFF 		bl	vPortYield
 475              	.LVL62:
 476 004a 07E0     		b	.L30
 477              	.L29:
 320:..\FreeRTOS9/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 478              		.loc 1 320 0
 479 004c 2000     		movs	r0, r4
 480 004e 1030     		adds	r0, r0, #16
 481 0050 FFF7FEFF 		bl	vListInitialise
 482              	.LVL63:
 321:..\FreeRTOS9/queue.c **** 		}
 483              		.loc 1 321 0
 484 0054 2000     		movs	r0, r4
 485 0056 2430     		adds	r0, r0, #36
 486 0058 FFF7FEFF 		bl	vListInitialise
 487              	.LVL64:
 488              	.L30:
 324:..\FreeRTOS9/queue.c **** 
 489              		.loc 1 324 0
 490 005c FFF7FEFF 		bl	vPortExitCritical
 491              	.LVL65:
 329:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 492              		.loc 1 329 0
 493 0060 0120     		movs	r0, #1
 494              		@ sp needed
 495              	.LVL66:
 496              	.LVL67:
 497 0062 70BD     		pop	{r4, r5, r6, pc}
 498              		.cfi_endproc
 499              	.LFE32:
 500              		.size	xQueueGenericReset, .-xQueueGenericReset
 501              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 502              		.align	2
 503              		.code	16
 504              		.thumb_func
 505              		.type	prvInitialiseNewQueue, %function
 506              	prvInitialiseNewQueue:
 507              	.LFB34:
 433:..\FreeRTOS9/queue.c **** 	/* Remove compiler warnings about unused parameters should
 508              		.loc 1 433 0
 509              		.cfi_startproc
 510              		@ args = 4, pretend = 0, frame = 0
 511              		@ frame_needed = 0, uses_anonymous_args = 0
 512              	.LVL68:
 513 0000 10B5     		push	{r4, lr}
 514              		.cfi_def_cfa_offset 8
 515              		.cfi_offset 4, -8
 516              		.cfi_offset 14, -4
 517 0002 029B     		ldr	r3, [sp, #8]
 518              	.LVL69:
 438:..\FreeRTOS9/queue.c **** 	{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 46


 519              		.loc 1 438 0
 520 0004 0029     		cmp	r1, #0
 521 0006 01D1     		bne	.L32
 444:..\FreeRTOS9/queue.c **** 	}
 522              		.loc 1 444 0
 523 0008 1B60     		str	r3, [r3]
 524 000a 00E0     		b	.L33
 525              	.L32:
 449:..\FreeRTOS9/queue.c **** 	}
 526              		.loc 1 449 0
 527 000c 1A60     		str	r2, [r3]
 528              	.L33:
 454:..\FreeRTOS9/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 529              		.loc 1 454 0
 530 000e D863     		str	r0, [r3, #60]
 455:..\FreeRTOS9/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 531              		.loc 1 455 0
 532 0010 1964     		str	r1, [r3, #64]
 456:..\FreeRTOS9/queue.c **** 
 533              		.loc 1 456 0
 534 0012 0121     		movs	r1, #1
 535              	.LVL70:
 536 0014 1800     		movs	r0, r3
 537              	.LVL71:
 538 0016 FFF7FEFF 		bl	xQueueGenericReset
 539              	.LVL72:
 471:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 540              		.loc 1 471 0
 541              		@ sp needed
 542 001a 10BD     		pop	{r4, pc}
 543              		.cfi_endproc
 544              	.LFE34:
 545              		.size	prvInitialiseNewQueue, .-prvInitialiseNewQueue
 546              		.section	.text.xQueueGenericCreate,"ax",%progbits
 547              		.align	2
 548              		.global	xQueueGenericCreate
 549              		.code	16
 550              		.thumb_func
 551              		.type	xQueueGenericCreate, %function
 552              	xQueueGenericCreate:
 553              	.LFB33:
 387:..\FreeRTOS9/queue.c **** 	Queue_t *pxNewQueue;
 554              		.loc 1 387 0
 555              		.cfi_startproc
 556              		@ args = 0, pretend = 0, frame = 0
 557              		@ frame_needed = 0, uses_anonymous_args = 0
 558              	.LVL73:
 559 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 560              		.cfi_def_cfa_offset 20
 561              		.cfi_offset 4, -20
 562              		.cfi_offset 5, -16
 563              		.cfi_offset 6, -12
 564              		.cfi_offset 7, -8
 565              		.cfi_offset 14, -4
 566 0002 83B0     		sub	sp, sp, #12
 567              		.cfi_def_cfa_offset 32
 568 0004 0500     		movs	r5, r0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 47


 569 0006 0F00     		movs	r7, r1
 570 0008 1600     		movs	r6, r2
 394:..\FreeRTOS9/queue.c **** 		{
 571              		.loc 1 394 0
 572 000a 0029     		cmp	r1, #0
 573 000c 01D0     		beq	.L37
 403:..\FreeRTOS9/queue.c **** 		}
 574              		.loc 1 403 0
 575 000e 4843     		muls	r0, r1
 576              	.LVL74:
 577 0010 00E0     		b	.L35
 578              	.LVL75:
 579              	.L37:
 397:..\FreeRTOS9/queue.c **** 		}
 580              		.loc 1 397 0
 581 0012 0020     		movs	r0, #0
 582              	.LVL76:
 583              	.L35:
 406:..\FreeRTOS9/queue.c **** 
 584              		.loc 1 406 0
 585 0014 4830     		adds	r0, r0, #72
 586              	.LVL77:
 587 0016 FFF7FEFF 		bl	pvPortMalloc
 588              	.LVL78:
 589 001a 041E     		subs	r4, r0, #0
 590              	.LVL79:
 408:..\FreeRTOS9/queue.c **** 		{
 591              		.loc 1 408 0
 592 001c 07D0     		beq	.L36
 412:..\FreeRTOS9/queue.c **** 
 593              		.loc 1 412 0
 594 001e 0200     		movs	r2, r0
 595 0020 4832     		adds	r2, r2, #72
 423:..\FreeRTOS9/queue.c **** 		}
 596              		.loc 1 423 0
 597 0022 0090     		str	r0, [sp]
 598 0024 3300     		movs	r3, r6
 599 0026 3900     		movs	r1, r7
 600 0028 2800     		movs	r0, r5
 601              	.LVL80:
 602 002a FFF7FEFF 		bl	prvInitialiseNewQueue
 603              	.LVL81:
 604              	.L36:
 427:..\FreeRTOS9/queue.c **** 
 605              		.loc 1 427 0
 606 002e 2000     		movs	r0, r4
 607 0030 03B0     		add	sp, sp, #12
 608              		@ sp needed
 609              	.LVL82:
 610              	.LVL83:
 611              	.LVL84:
 612 0032 F0BD     		pop	{r4, r5, r6, r7, pc}
 613              		.cfi_endproc
 614              	.LFE33:
 615              		.size	xQueueGenericCreate, .-xQueueGenericCreate
 616              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 617              		.align	2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 48


 618              		.global	xQueueCreateCountingSemaphore
 619              		.code	16
 620              		.thumb_func
 621              		.type	xQueueCreateCountingSemaphore, %function
 622              	xQueueCreateCountingSemaphore:
 623              	.LFB39:
 698:..\FreeRTOS9/queue.c **** 	QueueHandle_t xHandle;
 624              		.loc 1 698 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628              	.LVL85:
 629 0000 10B5     		push	{r4, lr}
 630              		.cfi_def_cfa_offset 8
 631              		.cfi_offset 4, -8
 632              		.cfi_offset 14, -4
 633 0002 0C00     		movs	r4, r1
 704:..\FreeRTOS9/queue.c **** 
 634              		.loc 1 704 0
 635 0004 0222     		movs	r2, #2
 636 0006 0021     		movs	r1, #0
 637              	.LVL86:
 638 0008 FFF7FEFF 		bl	xQueueGenericCreate
 639              	.LVL87:
 706:..\FreeRTOS9/queue.c **** 		{
 640              		.loc 1 706 0
 641 000c 0028     		cmp	r0, #0
 642 000e 00D0     		beq	.L39
 708:..\FreeRTOS9/queue.c **** 
 643              		.loc 1 708 0
 644 0010 8463     		str	r4, [r0, #56]
 645              	.L39:
 718:..\FreeRTOS9/queue.c **** 
 646              		.loc 1 718 0
 647              		@ sp needed
 648              	.LVL88:
 649 0012 10BD     		pop	{r4, pc}
 650              		.cfi_endproc
 651              	.LFE39:
 652              		.size	xQueueCreateCountingSemaphore, .-xQueueCreateCountingSemaphore
 653              		.section	.text.xQueueGenericSend,"ax",%progbits
 654              		.align	2
 655              		.global	xQueueGenericSend
 656              		.code	16
 657              		.thumb_func
 658              		.type	xQueueGenericSend, %function
 659              	xQueueGenericSend:
 660              	.LFB40:
 724:..\FreeRTOS9/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 661              		.loc 1 724 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 16
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              	.LVL89:
 666 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 667              		.cfi_def_cfa_offset 20
 668              		.cfi_offset 4, -20
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 49


 669              		.cfi_offset 5, -16
 670              		.cfi_offset 6, -12
 671              		.cfi_offset 7, -8
 672              		.cfi_offset 14, -4
 673 0002 85B0     		sub	sp, sp, #20
 674              		.cfi_def_cfa_offset 40
 675 0004 0400     		movs	r4, r0
 676 0006 0D00     		movs	r5, r1
 677 0008 0192     		str	r2, [sp, #4]
 678 000a 1F00     		movs	r7, r3
 679              	.LVL90:
 725:..\FreeRTOS9/queue.c **** TimeOut_t xTimeOut;
 680              		.loc 1 725 0
 681 000c 0026     		movs	r6, #0
 682              	.LVL91:
 683              	.L41:
 744:..\FreeRTOS9/queue.c **** 		{
 684              		.loc 1 744 0
 685 000e FFF7FEFF 		bl	vPortEnterCritical
 686              	.LVL92:
 750:..\FreeRTOS9/queue.c **** 			{
 687              		.loc 1 750 0
 688 0012 A36B     		ldr	r3, [r4, #56]
 689 0014 E26B     		ldr	r2, [r4, #60]
 690 0016 9342     		cmp	r3, r2
 691 0018 01D3     		bcc	.L42
 750:..\FreeRTOS9/queue.c **** 			{
 692              		.loc 1 750 0 is_stmt 0 discriminator 1
 693 001a 022F     		cmp	r7, #2
 694 001c 18D1     		bne	.L43
 695              	.L42:
 753:..\FreeRTOS9/queue.c **** 
 696              		.loc 1 753 0 is_stmt 1
 697 001e 3A00     		movs	r2, r7
 698 0020 2900     		movs	r1, r5
 699 0022 2000     		movs	r0, r4
 700 0024 FFF7FEFF 		bl	prvCopyDataToQueue
 701              	.LVL93:
 808:..\FreeRTOS9/queue.c **** 					{
 702              		.loc 1 808 0
 703 0028 636A     		ldr	r3, [r4, #36]
 704 002a 002B     		cmp	r3, #0
 705 002c 08D0     		beq	.L44
 810:..\FreeRTOS9/queue.c **** 						{
 706              		.loc 1 810 0
 707 002e 2000     		movs	r0, r4
 708              	.LVL94:
 709 0030 2430     		adds	r0, r0, #36
 710 0032 FFF7FEFF 		bl	xTaskRemoveFromEventList
 711              	.LVL95:
 712 0036 0028     		cmp	r0, #0
 713 0038 06D0     		beq	.L45
 816:..\FreeRTOS9/queue.c **** 						}
 714              		.loc 1 816 0
 715 003a FFF7FEFF 		bl	vPortYield
 716              	.LVL96:
 717 003e 03E0     		b	.L45
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 50


 718              	.LVL97:
 719              	.L44:
 823:..\FreeRTOS9/queue.c **** 					{
 720              		.loc 1 823 0
 721 0040 0028     		cmp	r0, #0
 722 0042 01D0     		beq	.L45
 829:..\FreeRTOS9/queue.c **** 					}
 723              		.loc 1 829 0
 724 0044 FFF7FEFF 		bl	vPortYield
 725              	.LVL98:
 726              	.L45:
 838:..\FreeRTOS9/queue.c **** 				return pdPASS;
 727              		.loc 1 838 0
 728 0048 FFF7FEFF 		bl	vPortExitCritical
 729              	.LVL99:
 839:..\FreeRTOS9/queue.c **** 			}
 730              		.loc 1 839 0
 731 004c 0120     		movs	r0, #1
 732 004e 4AE0     		b	.L46
 733              	.L43:
 843:..\FreeRTOS9/queue.c **** 				{
 734              		.loc 1 843 0
 735 0050 019B     		ldr	r3, [sp, #4]
 736 0052 002B     		cmp	r3, #0
 737 0054 03D1     		bne	.L47
 847:..\FreeRTOS9/queue.c **** 
 738              		.loc 1 847 0
 739 0056 FFF7FEFF 		bl	vPortExitCritical
 740              	.LVL100:
 852:..\FreeRTOS9/queue.c **** 				}
 741              		.loc 1 852 0
 742 005a 0020     		movs	r0, #0
 743 005c 43E0     		b	.L46
 744              	.L47:
 854:..\FreeRTOS9/queue.c **** 				{
 745              		.loc 1 854 0
 746 005e 002E     		cmp	r6, #0
 747 0060 03D1     		bne	.L48
 858:..\FreeRTOS9/queue.c **** 					xEntryTimeSet = pdTRUE;
 748              		.loc 1 858 0
 749 0062 02A8     		add	r0, sp, #8
 750 0064 FFF7FEFF 		bl	vTaskSetTimeOutState
 751              	.LVL101:
 859:..\FreeRTOS9/queue.c **** 				}
 752              		.loc 1 859 0
 753 0068 0136     		adds	r6, r6, #1
 754              	.LVL102:
 755              	.L48:
 868:..\FreeRTOS9/queue.c **** 
 756              		.loc 1 868 0
 757 006a FFF7FEFF 		bl	vPortExitCritical
 758              	.LVL103:
 873:..\FreeRTOS9/queue.c **** 		prvLockQueue( pxQueue );
 759              		.loc 1 873 0
 760 006e FFF7FEFF 		bl	vTaskSuspendAll
 761              	.LVL104:
 874:..\FreeRTOS9/queue.c **** 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 51


 762              		.loc 1 874 0
 763 0072 FFF7FEFF 		bl	vPortEnterCritical
 764              	.LVL105:
 765 0076 4423     		movs	r3, #68
 766 0078 E35C     		ldrb	r3, [r4, r3]
 767 007a 5BB2     		sxtb	r3, r3
 768 007c 0133     		adds	r3, r3, #1
 769 007e 02D1     		bne	.L49
 874:..\FreeRTOS9/queue.c **** 
 770              		.loc 1 874 0 is_stmt 0 discriminator 1
 771 0080 0022     		movs	r2, #0
 772 0082 4423     		movs	r3, #68
 773 0084 E254     		strb	r2, [r4, r3]
 774              	.L49:
 874:..\FreeRTOS9/queue.c **** 
 775              		.loc 1 874 0 discriminator 3
 776 0086 4523     		movs	r3, #69
 777 0088 E35C     		ldrb	r3, [r4, r3]
 778 008a 5BB2     		sxtb	r3, r3
 779 008c 0133     		adds	r3, r3, #1
 780 008e 02D1     		bne	.L50
 874:..\FreeRTOS9/queue.c **** 
 781              		.loc 1 874 0 discriminator 4
 782 0090 0022     		movs	r2, #0
 783 0092 4523     		movs	r3, #69
 784 0094 E254     		strb	r2, [r4, r3]
 785              	.L50:
 874:..\FreeRTOS9/queue.c **** 
 786              		.loc 1 874 0 discriminator 6
 787 0096 FFF7FEFF 		bl	vPortExitCritical
 788              	.LVL106:
 877:..\FreeRTOS9/queue.c **** 		{
 789              		.loc 1 877 0 is_stmt 1 discriminator 6
 790 009a 01A9     		add	r1, sp, #4
 791              	.LVL107:
 792 009c 02A8     		add	r0, sp, #8
 793 009e FFF7FEFF 		bl	xTaskCheckForTimeOut
 794              	.LVL108:
 795 00a2 0028     		cmp	r0, #0
 796 00a4 19D1     		bne	.L51
 879:..\FreeRTOS9/queue.c **** 			{
 797              		.loc 1 879 0
 798 00a6 2000     		movs	r0, r4
 799 00a8 FFF7FEFF 		bl	prvIsQueueFull
 800              	.LVL109:
 801 00ac 0028     		cmp	r0, #0
 802 00ae 0ED0     		beq	.L52
 882:..\FreeRTOS9/queue.c **** 
 803              		.loc 1 882 0
 804 00b0 2000     		movs	r0, r4
 805 00b2 1030     		adds	r0, r0, #16
 806 00b4 0199     		ldr	r1, [sp, #4]
 807 00b6 FFF7FEFF 		bl	vTaskPlaceOnEventList
 808              	.LVL110:
 889:..\FreeRTOS9/queue.c **** 
 809              		.loc 1 889 0
 810 00ba 2000     		movs	r0, r4
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 52


 811 00bc FFF7FEFF 		bl	prvUnlockQueue
 812              	.LVL111:
 896:..\FreeRTOS9/queue.c **** 				{
 813              		.loc 1 896 0
 814 00c0 FFF7FEFF 		bl	xTaskResumeAll
 815              	.LVL112:
 816 00c4 0028     		cmp	r0, #0
 817 00c6 A2D1     		bne	.L41
 898:..\FreeRTOS9/queue.c **** 				}
 818              		.loc 1 898 0
 819 00c8 FFF7FEFF 		bl	vPortYield
 820              	.LVL113:
 821 00cc 9FE7     		b	.L41
 822              	.L52:
 904:..\FreeRTOS9/queue.c **** 				( void ) xTaskResumeAll();
 823              		.loc 1 904 0
 824 00ce 2000     		movs	r0, r4
 825 00d0 FFF7FEFF 		bl	prvUnlockQueue
 826              	.LVL114:
 905:..\FreeRTOS9/queue.c **** 			}
 827              		.loc 1 905 0
 828 00d4 FFF7FEFF 		bl	xTaskResumeAll
 829              	.LVL115:
 830 00d8 99E7     		b	.L41
 831              	.L51:
 911:..\FreeRTOS9/queue.c **** 			( void ) xTaskResumeAll();
 832              		.loc 1 911 0
 833 00da 2000     		movs	r0, r4
 834 00dc FFF7FEFF 		bl	prvUnlockQueue
 835              	.LVL116:
 912:..\FreeRTOS9/queue.c **** 
 836              		.loc 1 912 0
 837 00e0 FFF7FEFF 		bl	xTaskResumeAll
 838              	.LVL117:
 915:..\FreeRTOS9/queue.c **** 		}
 839              		.loc 1 915 0
 840 00e4 0020     		movs	r0, #0
 841              	.L46:
 918:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 842              		.loc 1 918 0
 843 00e6 05B0     		add	sp, sp, #20
 844              		@ sp needed
 845              	.LVL118:
 846              	.LVL119:
 847              	.LVL120:
 848              	.LVL121:
 849 00e8 F0BD     		pop	{r4, r5, r6, r7, pc}
 850              		.cfi_endproc
 851              	.LFE40:
 852              		.size	xQueueGenericSend, .-xQueueGenericSend
 853 00ea C046     		.section	.text.prvInitialiseMutex,"ax",%progbits
 854              		.align	2
 855              		.code	16
 856              		.thumb_func
 857              		.type	prvInitialiseMutex, %function
 858              	prvInitialiseMutex:
 859              	.LFB35:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 53


 477:..\FreeRTOS9/queue.c **** 		if( pxNewQueue != NULL )
 860              		.loc 1 477 0
 861              		.cfi_startproc
 862              		@ args = 0, pretend = 0, frame = 0
 863              		@ frame_needed = 0, uses_anonymous_args = 0
 864              	.LVL122:
 865 0000 10B5     		push	{r4, lr}
 866              		.cfi_def_cfa_offset 8
 867              		.cfi_offset 4, -8
 868              		.cfi_offset 14, -4
 478:..\FreeRTOS9/queue.c **** 		{
 869              		.loc 1 478 0
 870 0002 0028     		cmp	r0, #0
 871 0004 07D0     		beq	.L54
 484:..\FreeRTOS9/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 872              		.loc 1 484 0
 873 0006 0023     		movs	r3, #0
 874 0008 4360     		str	r3, [r0, #4]
 485:..\FreeRTOS9/queue.c **** 
 875              		.loc 1 485 0
 876 000a 0360     		str	r3, [r0]
 488:..\FreeRTOS9/queue.c **** 
 877              		.loc 1 488 0
 878 000c C360     		str	r3, [r0, #12]
 493:..\FreeRTOS9/queue.c **** 		}
 879              		.loc 1 493 0
 880 000e 0022     		movs	r2, #0
 881 0010 0021     		movs	r1, #0
 882 0012 FFF7FEFF 		bl	xQueueGenericSend
 883              	.LVL123:
 884              	.L54:
 499:..\FreeRTOS9/queue.c **** 
 885              		.loc 1 499 0
 886              		@ sp needed
 887 0016 10BD     		pop	{r4, pc}
 888              		.cfi_endproc
 889              	.LFE35:
 890              		.size	prvInitialiseMutex, .-prvInitialiseMutex
 891              		.section	.text.xQueueCreateMutex,"ax",%progbits
 892              		.align	2
 893              		.global	xQueueCreateMutex
 894              		.code	16
 895              		.thumb_func
 896              		.type	xQueueCreateMutex, %function
 897              	xQueueCreateMutex:
 898              	.LFB36:
 507:..\FreeRTOS9/queue.c **** 	Queue_t *pxNewQueue;
 899              		.loc 1 507 0
 900              		.cfi_startproc
 901              		@ args = 0, pretend = 0, frame = 0
 902              		@ frame_needed = 0, uses_anonymous_args = 0
 903              	.LVL124:
 904 0000 10B5     		push	{r4, lr}
 905              		.cfi_def_cfa_offset 8
 906              		.cfi_offset 4, -8
 907              		.cfi_offset 14, -4
 908 0002 0200     		movs	r2, r0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 54


 909              	.LVL125:
 511:..\FreeRTOS9/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 910              		.loc 1 511 0
 911 0004 0021     		movs	r1, #0
 912 0006 0120     		movs	r0, #1
 913              	.LVL126:
 914 0008 FFF7FEFF 		bl	xQueueGenericCreate
 915              	.LVL127:
 916 000c 0400     		movs	r4, r0
 917              	.LVL128:
 512:..\FreeRTOS9/queue.c **** 
 918              		.loc 1 512 0
 919 000e FFF7FEFF 		bl	prvInitialiseMutex
 920              	.LVL129:
 515:..\FreeRTOS9/queue.c **** 
 921              		.loc 1 515 0
 922 0012 2000     		movs	r0, r4
 923              		@ sp needed
 924              	.LVL130:
 925 0014 10BD     		pop	{r4, pc}
 926              		.cfi_endproc
 927              	.LFE36:
 928              		.size	xQueueCreateMutex, .-xQueueCreateMutex
 929 0016 C046     		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 930              		.align	2
 931              		.global	xQueueGiveMutexRecursive
 932              		.code	16
 933              		.thumb_func
 934              		.type	xQueueGiveMutexRecursive, %function
 935              	xQueueGiveMutexRecursive:
 936              	.LFB37:
 573:..\FreeRTOS9/queue.c **** 	BaseType_t xReturn;
 937              		.loc 1 573 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941              	.LVL131:
 942 0000 70B5     		push	{r4, r5, r6, lr}
 943              		.cfi_def_cfa_offset 16
 944              		.cfi_offset 4, -16
 945              		.cfi_offset 5, -12
 946              		.cfi_offset 6, -8
 947              		.cfi_offset 14, -4
 948 0002 0400     		movs	r4, r0
 949              	.LVL132:
 585:..\FreeRTOS9/queue.c **** 		{
 950              		.loc 1 585 0
 951 0004 4568     		ldr	r5, [r0, #4]
 952 0006 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 953              	.LVL133:
 954 000a 8542     		cmp	r5, r0
 955 000c 0BD1     		bne	.L59
 594:..\FreeRTOS9/queue.c **** 
 956              		.loc 1 594 0
 957 000e E368     		ldr	r3, [r4, #12]
 958 0010 013B     		subs	r3, r3, #1
 959 0012 E360     		str	r3, [r4, #12]
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 55


 597:..\FreeRTOS9/queue.c **** 			{
 960              		.loc 1 597 0
 961 0014 002B     		cmp	r3, #0
 962 0016 08D1     		bne	.L60
 601:..\FreeRTOS9/queue.c **** 			}
 963              		.loc 1 601 0
 964 0018 0022     		movs	r2, #0
 965 001a 0021     		movs	r1, #0
 966 001c 2000     		movs	r0, r4
 967 001e FFF7FEFF 		bl	xQueueGenericSend
 968              	.LVL134:
 608:..\FreeRTOS9/queue.c **** 		}
 969              		.loc 1 608 0
 970 0022 0120     		movs	r0, #1
 971 0024 02E0     		b	.L58
 972              	.L59:
 614:..\FreeRTOS9/queue.c **** 
 973              		.loc 1 614 0
 974 0026 0020     		movs	r0, #0
 975 0028 00E0     		b	.L58
 976              	.L60:
 608:..\FreeRTOS9/queue.c **** 		}
 977              		.loc 1 608 0
 978 002a 0120     		movs	r0, #1
 979              	.L58:
 980              	.LVL135:
 620:..\FreeRTOS9/queue.c **** 
 981              		.loc 1 620 0
 982              		@ sp needed
 983              	.LVL136:
 984 002c 70BD     		pop	{r4, r5, r6, pc}
 985              		.cfi_endproc
 986              	.LFE37:
 987              		.size	xQueueGiveMutexRecursive, .-xQueueGiveMutexRecursive
 988 002e C046     		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 989              		.align	2
 990              		.global	xQueueGenericSendFromISR
 991              		.code	16
 992              		.thumb_func
 993              		.type	xQueueGenericSendFromISR, %function
 994              	xQueueGenericSendFromISR:
 995              	.LFB41:
 922:..\FreeRTOS9/queue.c **** BaseType_t xReturn;
 996              		.loc 1 922 0
 997              		.cfi_startproc
 998              		@ args = 0, pretend = 0, frame = 8
 999              		@ frame_needed = 0, uses_anonymous_args = 0
 1000              	.LVL137:
 1001 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1002              		.cfi_def_cfa_offset 20
 1003              		.cfi_offset 4, -20
 1004              		.cfi_offset 5, -16
 1005              		.cfi_offset 6, -12
 1006              		.cfi_offset 7, -8
 1007              		.cfi_offset 14, -4
 1008 0002 83B0     		sub	sp, sp, #12
 1009              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 56


 1010 0004 0600     		movs	r6, r0
 1011 0006 0091     		str	r1, [sp]
 1012 0008 0192     		str	r2, [sp, #4]
 1013 000a 1C00     		movs	r4, r3
 1014              	.LVL138:
 952:..\FreeRTOS9/queue.c **** 	{
 1015              		.loc 1 952 0
 1016 000c FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1017              	.LVL139:
 1018 0010 0500     		movs	r5, r0
 1019              	.LVL140:
 954:..\FreeRTOS9/queue.c **** 		{
 1020              		.loc 1 954 0
 1021 0012 B36B     		ldr	r3, [r6, #56]
 1022 0014 F26B     		ldr	r2, [r6, #60]
 1023 0016 9342     		cmp	r3, r2
 1024 0018 01D3     		bcc	.L62
 954:..\FreeRTOS9/queue.c **** 		{
 1025              		.loc 1 954 0 is_stmt 0 discriminator 1
 1026 001a 022C     		cmp	r4, #2
 1027 001c 1FD1     		bne	.L65
 1028              	.L62:
 1029              	.LBB4:
 956:..\FreeRTOS9/queue.c **** 
 1030              		.loc 1 956 0 is_stmt 1
 1031 001e 4523     		movs	r3, #69
 1032 0020 F35C     		ldrb	r3, [r6, r3]
 1033 0022 5FB2     		sxtb	r7, r3
 1034              	.LVL141:
 965:..\FreeRTOS9/queue.c **** 
 1035              		.loc 1 965 0
 1036 0024 2200     		movs	r2, r4
 1037 0026 0099     		ldr	r1, [sp]
 1038 0028 3000     		movs	r0, r6
 1039              	.LVL142:
 1040 002a FFF7FEFF 		bl	prvCopyDataToQueue
 1041              	.LVL143:
 969:..\FreeRTOS9/queue.c **** 			{
 1042              		.loc 1 969 0
 1043 002e 7B1C     		adds	r3, r7, #1
 1044 0030 0FD1     		bne	.L64
1024:..\FreeRTOS9/queue.c **** 					{
 1045              		.loc 1 1024 0
 1046 0032 736A     		ldr	r3, [r6, #36]
 1047 0034 002B     		cmp	r3, #0
 1048 0036 14D0     		beq	.L66
1026:..\FreeRTOS9/queue.c **** 						{
 1049              		.loc 1 1026 0
 1050 0038 3000     		movs	r0, r6
 1051 003a 2430     		adds	r0, r0, #36
 1052 003c FFF7FEFF 		bl	xTaskRemoveFromEventList
 1053              	.LVL144:
 1054 0040 0028     		cmp	r0, #0
 1055 0042 10D0     		beq	.L67
1030:..\FreeRTOS9/queue.c **** 							{
 1056              		.loc 1 1030 0
 1057 0044 019A     		ldr	r2, [sp, #4]
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 57


 1058 0046 002A     		cmp	r2, #0
 1059 0048 0FD0     		beq	.L68
1032:..\FreeRTOS9/queue.c **** 							}
 1060              		.loc 1 1032 0
 1061 004a 0123     		movs	r3, #1
 1062 004c 1360     		str	r3, [r2]
1058:..\FreeRTOS9/queue.c **** 		}
 1063              		.loc 1 1058 0
 1064 004e 0124     		movs	r4, #1
 1065              	.LVL145:
 1066 0050 0CE0     		b	.L63
 1067              	.LVL146:
 1068              	.L64:
1055:..\FreeRTOS9/queue.c **** 			}
 1069              		.loc 1 1055 0
 1070 0052 7B1C     		adds	r3, r7, #1
 1071 0054 5BB2     		sxtb	r3, r3
 1072 0056 4522     		movs	r2, #69
 1073 0058 B354     		strb	r3, [r6, r2]
1058:..\FreeRTOS9/queue.c **** 		}
 1074              		.loc 1 1058 0
 1075 005a 0124     		movs	r4, #1
 1076              	.LVL147:
 1077 005c 06E0     		b	.L63
 1078              	.LVL148:
 1079              	.L65:
 1080              	.LBE4:
1063:..\FreeRTOS9/queue.c **** 		}
 1081              		.loc 1 1063 0
 1082 005e 0024     		movs	r4, #0
 1083              	.LVL149:
 1084 0060 04E0     		b	.L63
 1085              	.LVL150:
 1086              	.L66:
 1087              	.LBB5:
1058:..\FreeRTOS9/queue.c **** 		}
 1088              		.loc 1 1058 0
 1089 0062 0124     		movs	r4, #1
 1090              	.LVL151:
 1091 0064 02E0     		b	.L63
 1092              	.LVL152:
 1093              	.L67:
 1094 0066 0124     		movs	r4, #1
 1095              	.LVL153:
 1096 0068 00E0     		b	.L63
 1097              	.LVL154:
 1098              	.L68:
 1099 006a 0124     		movs	r4, #1
 1100              	.LVL155:
 1101              	.L63:
 1102              	.LBE5:
1066:..\FreeRTOS9/queue.c **** 
 1103              		.loc 1 1066 0
 1104 006c 2800     		movs	r0, r5
 1105 006e FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1106              	.LVL156:
1069:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 58


 1107              		.loc 1 1069 0
 1108 0072 2000     		movs	r0, r4
 1109 0074 03B0     		add	sp, sp, #12
 1110              	.LVL157:
 1111              		@ sp needed
 1112              	.LVL158:
 1113              	.LVL159:
 1114              	.LVL160:
 1115 0076 F0BD     		pop	{r4, r5, r6, r7, pc}
 1116              		.cfi_endproc
 1117              	.LFE41:
 1118              		.size	xQueueGenericSendFromISR, .-xQueueGenericSendFromISR
 1119              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1120              		.align	2
 1121              		.global	xQueueGiveFromISR
 1122              		.code	16
 1123              		.thumb_func
 1124              		.type	xQueueGiveFromISR, %function
 1125              	xQueueGiveFromISR:
 1126              	.LFB42:
1073:..\FreeRTOS9/queue.c **** BaseType_t xReturn;
 1127              		.loc 1 1073 0
 1128              		.cfi_startproc
 1129              		@ args = 0, pretend = 0, frame = 0
 1130              		@ frame_needed = 0, uses_anonymous_args = 0
 1131              	.LVL161:
 1132 0000 70B5     		push	{r4, r5, r6, lr}
 1133              		.cfi_def_cfa_offset 16
 1134              		.cfi_offset 4, -16
 1135              		.cfi_offset 5, -12
 1136              		.cfi_offset 6, -8
 1137              		.cfi_offset 14, -4
 1138 0002 0400     		movs	r4, r0
 1139 0004 0E00     		movs	r6, r1
 1140              	.LVL162:
1111:..\FreeRTOS9/queue.c **** 	{
 1141              		.loc 1 1111 0
 1142 0006 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1143              	.LVL163:
 1144 000a 0500     		movs	r5, r0
 1145              	.LVL164:
 1146              	.LBB6:
1113:..\FreeRTOS9/queue.c **** 
 1147              		.loc 1 1113 0
 1148 000c A26B     		ldr	r2, [r4, #56]
 1149              	.LVL165:
1118:..\FreeRTOS9/queue.c **** 		{
 1150              		.loc 1 1118 0
 1151 000e E36B     		ldr	r3, [r4, #60]
 1152 0010 9A42     		cmp	r2, r3
 1153 0012 1BD2     		bcs	.L72
 1154              	.LBB7:
1120:..\FreeRTOS9/queue.c **** 
 1155              		.loc 1 1120 0
 1156 0014 4523     		movs	r3, #69
 1157 0016 E35C     		ldrb	r3, [r4, r3]
 1158 0018 5BB2     		sxtb	r3, r3
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 59


 1159              	.LVL166:
1130:..\FreeRTOS9/queue.c **** 
 1160              		.loc 1 1130 0
 1161 001a 0132     		adds	r2, r2, #1
 1162              	.LVL167:
 1163 001c A263     		str	r2, [r4, #56]
1134:..\FreeRTOS9/queue.c **** 			{
 1164              		.loc 1 1134 0
 1165 001e 5A1C     		adds	r2, r3, #1
 1166 0020 0ED1     		bne	.L71
 1167              	.LVL168:
1189:..\FreeRTOS9/queue.c **** 					{
 1168              		.loc 1 1189 0
 1169 0022 636A     		ldr	r3, [r4, #36]
 1170              	.LVL169:
 1171 0024 002B     		cmp	r3, #0
 1172 0026 13D0     		beq	.L73
1191:..\FreeRTOS9/queue.c **** 						{
 1173              		.loc 1 1191 0
 1174 0028 2000     		movs	r0, r4
 1175              	.LVL170:
 1176 002a 2430     		adds	r0, r0, #36
 1177 002c FFF7FEFF 		bl	xTaskRemoveFromEventList
 1178              	.LVL171:
 1179 0030 0028     		cmp	r0, #0
 1180 0032 0FD0     		beq	.L74
1195:..\FreeRTOS9/queue.c **** 							{
 1181              		.loc 1 1195 0
 1182 0034 002E     		cmp	r6, #0
 1183 0036 0FD0     		beq	.L75
1197:..\FreeRTOS9/queue.c **** 							}
 1184              		.loc 1 1197 0
 1185 0038 0123     		movs	r3, #1
 1186 003a 3360     		str	r3, [r6]
1223:..\FreeRTOS9/queue.c **** 		}
 1187              		.loc 1 1223 0
 1188 003c 0124     		movs	r4, #1
 1189              	.LVL172:
 1190 003e 0CE0     		b	.L70
 1191              	.LVL173:
 1192              	.L71:
1220:..\FreeRTOS9/queue.c **** 			}
 1193              		.loc 1 1220 0
 1194 0040 0133     		adds	r3, r3, #1
 1195              	.LVL174:
 1196 0042 5BB2     		sxtb	r3, r3
 1197              	.LVL175:
 1198 0044 4522     		movs	r2, #69
 1199 0046 A354     		strb	r3, [r4, r2]
 1200              	.LVL176:
1223:..\FreeRTOS9/queue.c **** 		}
 1201              		.loc 1 1223 0
 1202 0048 0124     		movs	r4, #1
 1203              	.LVL177:
 1204 004a 06E0     		b	.L70
 1205              	.LVL178:
 1206              	.L72:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 60


 1207              	.LBE7:
1228:..\FreeRTOS9/queue.c **** 		}
 1208              		.loc 1 1228 0
 1209 004c 0024     		movs	r4, #0
 1210              	.LVL179:
 1211 004e 04E0     		b	.L70
 1212              	.LVL180:
 1213              	.L73:
 1214              	.LBB8:
1223:..\FreeRTOS9/queue.c **** 		}
 1215              		.loc 1 1223 0
 1216 0050 0124     		movs	r4, #1
 1217              	.LVL181:
 1218 0052 02E0     		b	.L70
 1219              	.LVL182:
 1220              	.L74:
 1221 0054 0124     		movs	r4, #1
 1222              	.LVL183:
 1223 0056 00E0     		b	.L70
 1224              	.LVL184:
 1225              	.L75:
 1226 0058 0124     		movs	r4, #1
 1227              	.LVL185:
 1228              	.L70:
 1229              	.LBE8:
 1230              	.LBE6:
1231:..\FreeRTOS9/queue.c **** 
 1231              		.loc 1 1231 0
 1232 005a 2800     		movs	r0, r5
 1233 005c FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1234              	.LVL186:
1234:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 1235              		.loc 1 1234 0
 1236 0060 2000     		movs	r0, r4
 1237              		@ sp needed
 1238              	.LVL187:
 1239              	.LVL188:
 1240              	.LVL189:
 1241 0062 70BD     		pop	{r4, r5, r6, pc}
 1242              		.cfi_endproc
 1243              	.LFE42:
 1244              		.size	xQueueGiveFromISR, .-xQueueGiveFromISR
 1245              		.section	.text.xQueueGenericReceive,"ax",%progbits
 1246              		.align	2
 1247              		.global	xQueueGenericReceive
 1248              		.code	16
 1249              		.thumb_func
 1250              		.type	xQueueGenericReceive, %function
 1251              	xQueueGenericReceive:
 1252              	.LFB43:
1238:..\FreeRTOS9/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1253              		.loc 1 1238 0
 1254              		.cfi_startproc
 1255              		@ args = 0, pretend = 0, frame = 16
 1256              		@ frame_needed = 0, uses_anonymous_args = 0
 1257              	.LVL190:
 1258 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 61


 1259              		.cfi_def_cfa_offset 20
 1260              		.cfi_offset 4, -20
 1261              		.cfi_offset 5, -16
 1262              		.cfi_offset 6, -12
 1263              		.cfi_offset 7, -8
 1264              		.cfi_offset 14, -4
 1265 0002 85B0     		sub	sp, sp, #20
 1266              		.cfi_def_cfa_offset 40
 1267 0004 0400     		movs	r4, r0
 1268 0006 0091     		str	r1, [sp]
 1269 0008 0192     		str	r2, [sp, #4]
 1270 000a 1D00     		movs	r5, r3
 1271              	.LVL191:
1239:..\FreeRTOS9/queue.c **** TimeOut_t xTimeOut;
 1272              		.loc 1 1239 0
 1273 000c 0027     		movs	r7, #0
 1274              	.LVL192:
 1275              	.L77:
1258:..\FreeRTOS9/queue.c **** 		{
 1276              		.loc 1 1258 0
 1277 000e FFF7FEFF 		bl	vPortEnterCritical
 1278              	.LVL193:
 1279              	.LBB9:
1260:..\FreeRTOS9/queue.c **** 
 1280              		.loc 1 1260 0
 1281 0012 A66B     		ldr	r6, [r4, #56]
 1282              	.LVL194:
1264:..\FreeRTOS9/queue.c **** 			{
 1283              		.loc 1 1264 0
 1284 0014 002E     		cmp	r6, #0
 1285 0016 2AD0     		beq	.L78
1268:..\FreeRTOS9/queue.c **** 
 1286              		.loc 1 1268 0
 1287 0018 E768     		ldr	r7, [r4, #12]
 1288              	.LVL195:
1270:..\FreeRTOS9/queue.c **** 
 1289              		.loc 1 1270 0
 1290 001a 0099     		ldr	r1, [sp]
 1291 001c 2000     		movs	r0, r4
 1292 001e FFF7FEFF 		bl	prvCopyDataFromQueue
 1293              	.LVL196:
1272:..\FreeRTOS9/queue.c **** 				{
 1294              		.loc 1 1272 0
 1295 0022 002D     		cmp	r5, #0
 1296 0024 13D1     		bne	.L79
1277:..\FreeRTOS9/queue.c **** 
 1297              		.loc 1 1277 0
 1298 0026 731E     		subs	r3, r6, #1
 1299 0028 A363     		str	r3, [r4, #56]
1281:..\FreeRTOS9/queue.c **** 						{
 1300              		.loc 1 1281 0
 1301 002a 2368     		ldr	r3, [r4]
 1302 002c 002B     		cmp	r3, #0
 1303 002e 02D1     		bne	.L80
1285:..\FreeRTOS9/queue.c **** 						}
 1304              		.loc 1 1285 0
 1305 0030 FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 62


 1306              	.LVL197:
 1307 0034 6060     		str	r0, [r4, #4]
 1308              	.L80:
1294:..\FreeRTOS9/queue.c **** 					{
 1309              		.loc 1 1294 0
 1310 0036 2369     		ldr	r3, [r4, #16]
 1311 0038 002B     		cmp	r3, #0
 1312 003a 14D0     		beq	.L81
1296:..\FreeRTOS9/queue.c **** 						{
 1313              		.loc 1 1296 0
 1314 003c 2000     		movs	r0, r4
 1315 003e 1030     		adds	r0, r0, #16
 1316 0040 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1317              	.LVL198:
 1318 0044 0028     		cmp	r0, #0
 1319 0046 0ED0     		beq	.L81
1298:..\FreeRTOS9/queue.c **** 						}
 1320              		.loc 1 1298 0
 1321 0048 FFF7FEFF 		bl	vPortYield
 1322              	.LVL199:
 1323 004c 0BE0     		b	.L81
 1324              	.L79:
1316:..\FreeRTOS9/queue.c **** 
 1325              		.loc 1 1316 0
 1326 004e E760     		str	r7, [r4, #12]
1320:..\FreeRTOS9/queue.c **** 					{
 1327              		.loc 1 1320 0
 1328 0050 636A     		ldr	r3, [r4, #36]
 1329 0052 002B     		cmp	r3, #0
 1330 0054 07D0     		beq	.L81
1322:..\FreeRTOS9/queue.c **** 						{
 1331              		.loc 1 1322 0
 1332 0056 2000     		movs	r0, r4
 1333 0058 2430     		adds	r0, r0, #36
 1334 005a FFF7FEFF 		bl	xTaskRemoveFromEventList
 1335              	.LVL200:
 1336 005e 0028     		cmp	r0, #0
 1337 0060 01D0     		beq	.L81
1325:..\FreeRTOS9/queue.c **** 						}
 1338              		.loc 1 1325 0
 1339 0062 FFF7FEFF 		bl	vPortYield
 1340              	.LVL201:
 1341              	.L81:
1338:..\FreeRTOS9/queue.c **** 				return pdPASS;
 1342              		.loc 1 1338 0
 1343 0066 FFF7FEFF 		bl	vPortExitCritical
 1344              	.LVL202:
1339:..\FreeRTOS9/queue.c **** 			}
 1345              		.loc 1 1339 0
 1346 006a 0120     		movs	r0, #1
 1347 006c 5AE0     		b	.L82
 1348              	.LVL203:
 1349              	.L78:
1343:..\FreeRTOS9/queue.c **** 				{
 1350              		.loc 1 1343 0
 1351 006e 019B     		ldr	r3, [sp, #4]
 1352 0070 002B     		cmp	r3, #0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 63


 1353 0072 03D1     		bne	.L83
1347:..\FreeRTOS9/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 1354              		.loc 1 1347 0
 1355 0074 FFF7FEFF 		bl	vPortExitCritical
 1356              	.LVL204:
1349:..\FreeRTOS9/queue.c **** 				}
 1357              		.loc 1 1349 0
 1358 0078 0020     		movs	r0, #0
 1359 007a 53E0     		b	.L82
 1360              	.L83:
1351:..\FreeRTOS9/queue.c **** 				{
 1361              		.loc 1 1351 0
 1362 007c 002F     		cmp	r7, #0
 1363 007e 03D1     		bne	.L84
1355:..\FreeRTOS9/queue.c **** 					xEntryTimeSet = pdTRUE;
 1364              		.loc 1 1355 0
 1365 0080 02A8     		add	r0, sp, #8
 1366 0082 FFF7FEFF 		bl	vTaskSetTimeOutState
 1367              	.LVL205:
1356:..\FreeRTOS9/queue.c **** 				}
 1368              		.loc 1 1356 0
 1369 0086 0137     		adds	r7, r7, #1
 1370              	.LVL206:
 1371              	.L84:
 1372              	.LBE9:
1365:..\FreeRTOS9/queue.c **** 
 1373              		.loc 1 1365 0
 1374 0088 FFF7FEFF 		bl	vPortExitCritical
 1375              	.LVL207:
1370:..\FreeRTOS9/queue.c **** 		prvLockQueue( pxQueue );
 1376              		.loc 1 1370 0
 1377 008c FFF7FEFF 		bl	vTaskSuspendAll
 1378              	.LVL208:
1371:..\FreeRTOS9/queue.c **** 
 1379              		.loc 1 1371 0
 1380 0090 FFF7FEFF 		bl	vPortEnterCritical
 1381              	.LVL209:
 1382 0094 4423     		movs	r3, #68
 1383 0096 E35C     		ldrb	r3, [r4, r3]
 1384 0098 5BB2     		sxtb	r3, r3
 1385 009a 0133     		adds	r3, r3, #1
 1386 009c 02D1     		bne	.L85
1371:..\FreeRTOS9/queue.c **** 
 1387              		.loc 1 1371 0 is_stmt 0 discriminator 1
 1388 009e 0022     		movs	r2, #0
 1389 00a0 4423     		movs	r3, #68
 1390 00a2 E254     		strb	r2, [r4, r3]
 1391              	.L85:
1371:..\FreeRTOS9/queue.c **** 
 1392              		.loc 1 1371 0 discriminator 3
 1393 00a4 4523     		movs	r3, #69
 1394 00a6 E35C     		ldrb	r3, [r4, r3]
 1395 00a8 5BB2     		sxtb	r3, r3
 1396 00aa 0133     		adds	r3, r3, #1
 1397 00ac 02D1     		bne	.L86
1371:..\FreeRTOS9/queue.c **** 
 1398              		.loc 1 1371 0 discriminator 4
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 64


 1399 00ae 0022     		movs	r2, #0
 1400 00b0 4523     		movs	r3, #69
 1401 00b2 E254     		strb	r2, [r4, r3]
 1402              	.L86:
1371:..\FreeRTOS9/queue.c **** 
 1403              		.loc 1 1371 0 discriminator 6
 1404 00b4 FFF7FEFF 		bl	vPortExitCritical
 1405              	.LVL210:
1374:..\FreeRTOS9/queue.c **** 		{
 1406              		.loc 1 1374 0 is_stmt 1 discriminator 6
 1407 00b8 01A9     		add	r1, sp, #4
 1408              	.LVL211:
 1409 00ba 02A8     		add	r0, sp, #8
 1410 00bc FFF7FEFF 		bl	xTaskCheckForTimeOut
 1411              	.LVL212:
 1412 00c0 0028     		cmp	r0, #0
 1413 00c2 23D1     		bne	.L87
1376:..\FreeRTOS9/queue.c **** 			{
 1414              		.loc 1 1376 0
 1415 00c4 2000     		movs	r0, r4
 1416 00c6 FFF7FEFF 		bl	prvIsQueueEmpty
 1417              	.LVL213:
 1418 00ca 0028     		cmp	r0, #0
 1419 00cc 18D0     		beq	.L88
1382:..\FreeRTOS9/queue.c **** 					{
 1420              		.loc 1 1382 0
 1421 00ce 2368     		ldr	r3, [r4]
 1422 00d0 002B     		cmp	r3, #0
 1423 00d2 06D1     		bne	.L89
1384:..\FreeRTOS9/queue.c **** 						{
 1424              		.loc 1 1384 0
 1425 00d4 FFF7FEFF 		bl	vPortEnterCritical
 1426              	.LVL214:
1386:..\FreeRTOS9/queue.c **** 						}
 1427              		.loc 1 1386 0
 1428 00d8 6068     		ldr	r0, [r4, #4]
 1429 00da FFF7FEFF 		bl	vTaskPriorityInherit
 1430              	.LVL215:
1388:..\FreeRTOS9/queue.c **** 					}
 1431              		.loc 1 1388 0
 1432 00de FFF7FEFF 		bl	vPortExitCritical
 1433              	.LVL216:
 1434              	.L89:
1397:..\FreeRTOS9/queue.c **** 				prvUnlockQueue( pxQueue );
 1435              		.loc 1 1397 0
 1436 00e2 2000     		movs	r0, r4
 1437 00e4 2430     		adds	r0, r0, #36
 1438 00e6 0199     		ldr	r1, [sp, #4]
 1439 00e8 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1440              	.LVL217:
1398:..\FreeRTOS9/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1441              		.loc 1 1398 0
 1442 00ec 2000     		movs	r0, r4
 1443 00ee FFF7FEFF 		bl	prvUnlockQueue
 1444              	.LVL218:
1399:..\FreeRTOS9/queue.c **** 				{
 1445              		.loc 1 1399 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 65


 1446 00f2 FFF7FEFF 		bl	xTaskResumeAll
 1447              	.LVL219:
 1448 00f6 0028     		cmp	r0, #0
 1449 00f8 89D1     		bne	.L77
1401:..\FreeRTOS9/queue.c **** 				}
 1450              		.loc 1 1401 0
 1451 00fa FFF7FEFF 		bl	vPortYield
 1452              	.LVL220:
 1453 00fe 86E7     		b	.L77
 1454              	.L88:
1411:..\FreeRTOS9/queue.c **** 				( void ) xTaskResumeAll();
 1455              		.loc 1 1411 0
 1456 0100 2000     		movs	r0, r4
 1457 0102 FFF7FEFF 		bl	prvUnlockQueue
 1458              	.LVL221:
1412:..\FreeRTOS9/queue.c **** 			}
 1459              		.loc 1 1412 0
 1460 0106 FFF7FEFF 		bl	xTaskResumeAll
 1461              	.LVL222:
 1462 010a 80E7     		b	.L77
 1463              	.L87:
1417:..\FreeRTOS9/queue.c **** 			( void ) xTaskResumeAll();
 1464              		.loc 1 1417 0
 1465 010c 2000     		movs	r0, r4
 1466 010e FFF7FEFF 		bl	prvUnlockQueue
 1467              	.LVL223:
1418:..\FreeRTOS9/queue.c **** 
 1468              		.loc 1 1418 0
 1469 0112 FFF7FEFF 		bl	xTaskResumeAll
 1470              	.LVL224:
1420:..\FreeRTOS9/queue.c **** 			{
 1471              		.loc 1 1420 0
 1472 0116 2000     		movs	r0, r4
 1473 0118 FFF7FEFF 		bl	prvIsQueueEmpty
 1474              	.LVL225:
 1475 011c 0028     		cmp	r0, #0
 1476 011e 00D1     		bne	.LCB1469
 1477 0120 75E7     		b	.L77	@long jump
 1478              	.LCB1469:
1423:..\FreeRTOS9/queue.c **** 			}
 1479              		.loc 1 1423 0
 1480 0122 0020     		movs	r0, #0
 1481              	.LVL226:
 1482              	.L82:
1431:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 1483              		.loc 1 1431 0
 1484 0124 05B0     		add	sp, sp, #20
 1485              	.LVL227:
 1486              		@ sp needed
 1487              	.LVL228:
 1488              	.LVL229:
 1489              	.LVL230:
 1490 0126 F0BD     		pop	{r4, r5, r6, r7, pc}
 1491              		.cfi_endproc
 1492              	.LFE43:
 1493              		.size	xQueueGenericReceive, .-xQueueGenericReceive
 1494              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 66


 1495              		.align	2
 1496              		.global	xQueueTakeMutexRecursive
 1497              		.code	16
 1498              		.thumb_func
 1499              		.type	xQueueTakeMutexRecursive, %function
 1500              	xQueueTakeMutexRecursive:
 1501              	.LFB38:
 628:..\FreeRTOS9/queue.c **** 	BaseType_t xReturn;
 1502              		.loc 1 628 0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 0
 1505              		@ frame_needed = 0, uses_anonymous_args = 0
 1506              	.LVL231:
 1507 0000 70B5     		push	{r4, r5, r6, lr}
 1508              		.cfi_def_cfa_offset 16
 1509              		.cfi_offset 4, -16
 1510              		.cfi_offset 5, -12
 1511              		.cfi_offset 6, -8
 1512              		.cfi_offset 14, -4
 1513 0002 0400     		movs	r4, r0
 1514 0004 0E00     		movs	r6, r1
 1515              	.LVL232:
 639:..\FreeRTOS9/queue.c **** 		{
 1516              		.loc 1 639 0
 1517 0006 4568     		ldr	r5, [r0, #4]
 1518 0008 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1519              	.LVL233:
 1520 000c 8542     		cmp	r5, r0
 1521 000e 04D1     		bne	.L92
 641:..\FreeRTOS9/queue.c **** 			xReturn = pdPASS;
 1522              		.loc 1 641 0
 1523 0010 E368     		ldr	r3, [r4, #12]
 1524 0012 0133     		adds	r3, r3, #1
 1525 0014 E360     		str	r3, [r4, #12]
 1526              	.LVL234:
 642:..\FreeRTOS9/queue.c **** 		}
 1527              		.loc 1 642 0
 1528 0016 0120     		movs	r0, #1
 1529 0018 0AE0     		b	.L93
 1530              	.LVL235:
 1531              	.L92:
 646:..\FreeRTOS9/queue.c **** 
 1532              		.loc 1 646 0
 1533 001a 0023     		movs	r3, #0
 1534 001c 3200     		movs	r2, r6
 1535 001e 0021     		movs	r1, #0
 1536 0020 2000     		movs	r0, r4
 1537 0022 FFF7FEFF 		bl	xQueueGenericReceive
 1538              	.LVL236:
 651:..\FreeRTOS9/queue.c **** 			{
 1539              		.loc 1 651 0
 1540 0026 0028     		cmp	r0, #0
 1541 0028 02D0     		beq	.L93
 653:..\FreeRTOS9/queue.c **** 			}
 1542              		.loc 1 653 0
 1543 002a E368     		ldr	r3, [r4, #12]
 1544 002c 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 67


 1545 002e E360     		str	r3, [r4, #12]
 1546              	.LVL237:
 1547              	.L93:
 662:..\FreeRTOS9/queue.c **** 
 1548              		.loc 1 662 0
 1549              		@ sp needed
 1550              	.LVL238:
 1551              	.LVL239:
 1552 0030 70BD     		pop	{r4, r5, r6, pc}
 1553              		.cfi_endproc
 1554              	.LFE38:
 1555              		.size	xQueueTakeMutexRecursive, .-xQueueTakeMutexRecursive
 1556 0032 C046     		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 1557              		.align	2
 1558              		.global	xQueueReceiveFromISR
 1559              		.code	16
 1560              		.thumb_func
 1561              		.type	xQueueReceiveFromISR, %function
 1562              	xQueueReceiveFromISR:
 1563              	.LFB44:
1435:..\FreeRTOS9/queue.c **** BaseType_t xReturn;
 1564              		.loc 1 1435 0
 1565              		.cfi_startproc
 1566              		@ args = 0, pretend = 0, frame = 8
 1567              		@ frame_needed = 0, uses_anonymous_args = 0
 1568              	.LVL240:
 1569 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1570              		.cfi_def_cfa_offset 20
 1571              		.cfi_offset 4, -20
 1572              		.cfi_offset 5, -16
 1573              		.cfi_offset 6, -12
 1574              		.cfi_offset 7, -8
 1575              		.cfi_offset 14, -4
 1576 0002 83B0     		sub	sp, sp, #12
 1577              		.cfi_def_cfa_offset 32
 1578 0004 0400     		movs	r4, r0
 1579 0006 0091     		str	r1, [sp]
 1580 0008 0192     		str	r2, [sp, #4]
 1581              	.LVL241:
1459:..\FreeRTOS9/queue.c **** 	{
 1582              		.loc 1 1459 0
 1583 000a FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1584              	.LVL242:
 1585 000e 0500     		movs	r5, r0
 1586              	.LVL243:
 1587              	.LBB10:
1461:..\FreeRTOS9/queue.c **** 
 1588              		.loc 1 1461 0
 1589 0010 A76B     		ldr	r7, [r4, #56]
 1590              	.LVL244:
1464:..\FreeRTOS9/queue.c **** 		{
 1591              		.loc 1 1464 0
 1592 0012 002F     		cmp	r7, #0
 1593 0014 20D0     		beq	.L97
 1594              	.LBB11:
1466:..\FreeRTOS9/queue.c **** 
 1595              		.loc 1 1466 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 68


 1596 0016 4423     		movs	r3, #68
 1597 0018 E35C     		ldrb	r3, [r4, r3]
 1598 001a 5EB2     		sxtb	r6, r3
 1599              	.LVL245:
1470:..\FreeRTOS9/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - 1;
 1600              		.loc 1 1470 0
 1601 001c 0099     		ldr	r1, [sp]
 1602 001e 2000     		movs	r0, r4
 1603              	.LVL246:
 1604 0020 FFF7FEFF 		bl	prvCopyDataFromQueue
 1605              	.LVL247:
1471:..\FreeRTOS9/queue.c **** 
 1606              		.loc 1 1471 0
 1607 0024 7B1E     		subs	r3, r7, #1
 1608 0026 A363     		str	r3, [r4, #56]
1477:..\FreeRTOS9/queue.c **** 			{
 1609              		.loc 1 1477 0
 1610 0028 731C     		adds	r3, r6, #1
 1611 002a 0FD1     		bne	.L96
1479:..\FreeRTOS9/queue.c **** 				{
 1612              		.loc 1 1479 0
 1613 002c 2369     		ldr	r3, [r4, #16]
 1614 002e 002B     		cmp	r3, #0
 1615 0030 14D0     		beq	.L98
1481:..\FreeRTOS9/queue.c **** 					{
 1616              		.loc 1 1481 0
 1617 0032 2000     		movs	r0, r4
 1618 0034 1030     		adds	r0, r0, #16
 1619 0036 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1620              	.LVL248:
 1621 003a 0028     		cmp	r0, #0
 1622 003c 10D0     		beq	.L99
1485:..\FreeRTOS9/queue.c **** 						{
 1623              		.loc 1 1485 0
 1624 003e 019A     		ldr	r2, [sp, #4]
 1625 0040 002A     		cmp	r2, #0
 1626 0042 0FD0     		beq	.L100
1487:..\FreeRTOS9/queue.c **** 						}
 1627              		.loc 1 1487 0
 1628 0044 0123     		movs	r3, #1
 1629 0046 1360     		str	r3, [r2]
1511:..\FreeRTOS9/queue.c **** 		}
 1630              		.loc 1 1511 0
 1631 0048 0124     		movs	r4, #1
 1632              	.LVL249:
 1633 004a 0CE0     		b	.L95
 1634              	.LVL250:
 1635              	.L96:
1508:..\FreeRTOS9/queue.c **** 			}
 1636              		.loc 1 1508 0
 1637 004c 731C     		adds	r3, r6, #1
 1638 004e 5BB2     		sxtb	r3, r3
 1639 0050 4422     		movs	r2, #68
 1640 0052 A354     		strb	r3, [r4, r2]
1511:..\FreeRTOS9/queue.c **** 		}
 1641              		.loc 1 1511 0
 1642 0054 0124     		movs	r4, #1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 69


 1643              	.LVL251:
 1644 0056 06E0     		b	.L95
 1645              	.LVL252:
 1646              	.L97:
 1647              	.LBE11:
1515:..\FreeRTOS9/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 1648              		.loc 1 1515 0
 1649 0058 0024     		movs	r4, #0
 1650              	.LVL253:
 1651 005a 04E0     		b	.L95
 1652              	.LVL254:
 1653              	.L98:
 1654              	.LBB12:
1511:..\FreeRTOS9/queue.c **** 		}
 1655              		.loc 1 1511 0
 1656 005c 0124     		movs	r4, #1
 1657              	.LVL255:
 1658 005e 02E0     		b	.L95
 1659              	.LVL256:
 1660              	.L99:
 1661 0060 0124     		movs	r4, #1
 1662              	.LVL257:
 1663 0062 00E0     		b	.L95
 1664              	.LVL258:
 1665              	.L100:
 1666 0064 0124     		movs	r4, #1
 1667              	.LVL259:
 1668              	.L95:
 1669              	.LBE12:
 1670              	.LBE10:
1519:..\FreeRTOS9/queue.c **** 
 1671              		.loc 1 1519 0
 1672 0066 2800     		movs	r0, r5
 1673 0068 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1674              	.LVL260:
1522:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 1675              		.loc 1 1522 0
 1676 006c 2000     		movs	r0, r4
 1677 006e 03B0     		add	sp, sp, #12
 1678              	.LVL261:
 1679              		@ sp needed
 1680              	.LVL262:
 1681              	.LVL263:
 1682              	.LVL264:
 1683 0070 F0BD     		pop	{r4, r5, r6, r7, pc}
 1684              		.cfi_endproc
 1685              	.LFE44:
 1686              		.size	xQueueReceiveFromISR, .-xQueueReceiveFromISR
 1687 0072 C046     		.section	.text.xQueuePeekFromISR,"ax",%progbits
 1688              		.align	2
 1689              		.global	xQueuePeekFromISR
 1690              		.code	16
 1691              		.thumb_func
 1692              		.type	xQueuePeekFromISR, %function
 1693              	xQueuePeekFromISR:
 1694              	.LFB45:
1526:..\FreeRTOS9/queue.c **** BaseType_t xReturn;
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 70


 1695              		.loc 1 1526 0
 1696              		.cfi_startproc
 1697              		@ args = 0, pretend = 0, frame = 0
 1698              		@ frame_needed = 0, uses_anonymous_args = 0
 1699              	.LVL265:
 1700 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1701              		.cfi_def_cfa_offset 24
 1702              		.cfi_offset 3, -24
 1703              		.cfi_offset 4, -20
 1704              		.cfi_offset 5, -16
 1705              		.cfi_offset 6, -12
 1706              		.cfi_offset 7, -8
 1707              		.cfi_offset 14, -4
 1708 0002 0400     		movs	r4, r0
 1709 0004 0E00     		movs	r6, r1
 1710              	.LVL266:
1552:..\FreeRTOS9/queue.c **** 	{
 1711              		.loc 1 1552 0
 1712 0006 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1713              	.LVL267:
 1714 000a 0500     		movs	r5, r0
 1715              	.LVL268:
1555:..\FreeRTOS9/queue.c **** 		{
 1716              		.loc 1 1555 0
 1717 000c A36B     		ldr	r3, [r4, #56]
 1718 000e 002B     		cmp	r3, #0
 1719 0010 07D0     		beq	.L103
1561:..\FreeRTOS9/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 1720              		.loc 1 1561 0
 1721 0012 E768     		ldr	r7, [r4, #12]
 1722              	.LVL269:
1562:..\FreeRTOS9/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 1723              		.loc 1 1562 0
 1724 0014 3100     		movs	r1, r6
 1725 0016 2000     		movs	r0, r4
 1726              	.LVL270:
 1727 0018 FFF7FEFF 		bl	prvCopyDataFromQueue
 1728              	.LVL271:
1563:..\FreeRTOS9/queue.c **** 
 1729              		.loc 1 1563 0
 1730 001c E760     		str	r7, [r4, #12]
 1731              	.LVL272:
1565:..\FreeRTOS9/queue.c **** 		}
 1732              		.loc 1 1565 0
 1733 001e 0124     		movs	r4, #1
 1734              	.LVL273:
 1735 0020 00E0     		b	.L102
 1736              	.LVL274:
 1737              	.L103:
1569:..\FreeRTOS9/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 1738              		.loc 1 1569 0
 1739 0022 0024     		movs	r4, #0
 1740              	.LVL275:
 1741              	.L102:
1573:..\FreeRTOS9/queue.c **** 
 1742              		.loc 1 1573 0
 1743 0024 2800     		movs	r0, r5
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 71


 1744 0026 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1745              	.LVL276:
1576:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 1746              		.loc 1 1576 0
 1747 002a 2000     		movs	r0, r4
 1748              		@ sp needed
 1749              	.LVL277:
 1750              	.LVL278:
 1751              	.LVL279:
 1752 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1753              		.cfi_endproc
 1754              	.LFE45:
 1755              		.size	xQueuePeekFromISR, .-xQueuePeekFromISR
 1756 002e C046     		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 1757              		.align	2
 1758              		.global	uxQueueMessagesWaiting
 1759              		.code	16
 1760              		.thumb_func
 1761              		.type	uxQueueMessagesWaiting, %function
 1762              	uxQueueMessagesWaiting:
 1763              	.LFB46:
1580:..\FreeRTOS9/queue.c **** UBaseType_t uxReturn;
 1764              		.loc 1 1580 0
 1765              		.cfi_startproc
 1766              		@ args = 0, pretend = 0, frame = 0
 1767              		@ frame_needed = 0, uses_anonymous_args = 0
 1768              	.LVL280:
 1769 0000 10B5     		push	{r4, lr}
 1770              		.cfi_def_cfa_offset 8
 1771              		.cfi_offset 4, -8
 1772              		.cfi_offset 14, -4
 1773 0002 0400     		movs	r4, r0
1585:..\FreeRTOS9/queue.c **** 	{
 1774              		.loc 1 1585 0
 1775 0004 FFF7FEFF 		bl	vPortEnterCritical
 1776              	.LVL281:
1587:..\FreeRTOS9/queue.c **** 	}
 1777              		.loc 1 1587 0
 1778 0008 A46B     		ldr	r4, [r4, #56]
 1779              	.LVL282:
1589:..\FreeRTOS9/queue.c **** 
 1780              		.loc 1 1589 0
 1781 000a FFF7FEFF 		bl	vPortExitCritical
 1782              	.LVL283:
1592:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 1783              		.loc 1 1592 0
 1784 000e 2000     		movs	r0, r4
 1785              		@ sp needed
 1786              	.LVL284:
 1787 0010 10BD     		pop	{r4, pc}
 1788              		.cfi_endproc
 1789              	.LFE46:
 1790              		.size	uxQueueMessagesWaiting, .-uxQueueMessagesWaiting
 1791 0012 C046     		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 1792              		.align	2
 1793              		.global	uxQueueSpacesAvailable
 1794              		.code	16
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 72


 1795              		.thumb_func
 1796              		.type	uxQueueSpacesAvailable, %function
 1797              	uxQueueSpacesAvailable:
 1798              	.LFB47:
1596:..\FreeRTOS9/queue.c **** UBaseType_t uxReturn;
 1799              		.loc 1 1596 0
 1800              		.cfi_startproc
 1801              		@ args = 0, pretend = 0, frame = 0
 1802              		@ frame_needed = 0, uses_anonymous_args = 0
 1803              	.LVL285:
 1804 0000 10B5     		push	{r4, lr}
 1805              		.cfi_def_cfa_offset 8
 1806              		.cfi_offset 4, -8
 1807              		.cfi_offset 14, -4
 1808 0002 0400     		movs	r4, r0
 1809              	.LVL286:
1603:..\FreeRTOS9/queue.c **** 	{
 1810              		.loc 1 1603 0
 1811 0004 FFF7FEFF 		bl	vPortEnterCritical
 1812              	.LVL287:
1605:..\FreeRTOS9/queue.c **** 	}
 1813              		.loc 1 1605 0
 1814 0008 E36B     		ldr	r3, [r4, #60]
 1815 000a A46B     		ldr	r4, [r4, #56]
 1816              	.LVL288:
 1817 000c 1C1B     		subs	r4, r3, r4
 1818              	.LVL289:
1607:..\FreeRTOS9/queue.c **** 
 1819              		.loc 1 1607 0
 1820 000e FFF7FEFF 		bl	vPortExitCritical
 1821              	.LVL290:
1610:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 1822              		.loc 1 1610 0
 1823 0012 2000     		movs	r0, r4
 1824              		@ sp needed
 1825              	.LVL291:
 1826 0014 10BD     		pop	{r4, pc}
 1827              		.cfi_endproc
 1828              	.LFE47:
 1829              		.size	uxQueueSpacesAvailable, .-uxQueueSpacesAvailable
 1830 0016 C046     		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 1831              		.align	2
 1832              		.global	uxQueueMessagesWaitingFromISR
 1833              		.code	16
 1834              		.thumb_func
 1835              		.type	uxQueueMessagesWaitingFromISR, %function
 1836              	uxQueueMessagesWaitingFromISR:
 1837              	.LFB48:
1614:..\FreeRTOS9/queue.c **** UBaseType_t uxReturn;
 1838              		.loc 1 1614 0
 1839              		.cfi_startproc
 1840              		@ args = 0, pretend = 0, frame = 0
 1841              		@ frame_needed = 0, uses_anonymous_args = 0
 1842              		@ link register save eliminated.
 1843              	.LVL292:
1619:..\FreeRTOS9/queue.c **** 
 1844              		.loc 1 1619 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 73


 1845 0000 806B     		ldr	r0, [r0, #56]
 1846              	.LVL293:
1622:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 1847              		.loc 1 1622 0
 1848              		@ sp needed
 1849 0002 7047     		bx	lr
 1850              		.cfi_endproc
 1851              	.LFE48:
 1852              		.size	uxQueueMessagesWaitingFromISR, .-uxQueueMessagesWaitingFromISR
 1853              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 1854              		.align	2
 1855              		.global	xQueueIsQueueEmptyFromISR
 1856              		.code	16
 1857              		.thumb_func
 1858              		.type	xQueueIsQueueEmptyFromISR, %function
 1859              	xQueueIsQueueEmptyFromISR:
 1860              	.LFB54:
1936:..\FreeRTOS9/queue.c **** BaseType_t xReturn;
 1861              		.loc 1 1936 0
 1862              		.cfi_startproc
 1863              		@ args = 0, pretend = 0, frame = 0
 1864              		@ frame_needed = 0, uses_anonymous_args = 0
 1865              		@ link register save eliminated.
 1866              	.LVL294:
1940:..\FreeRTOS9/queue.c **** 	{
 1867              		.loc 1 1940 0
 1868 0000 836B     		ldr	r3, [r0, #56]
 1869 0002 002B     		cmp	r3, #0
 1870 0004 01D1     		bne	.L109
1942:..\FreeRTOS9/queue.c **** 	}
 1871              		.loc 1 1942 0
 1872 0006 0120     		movs	r0, #1
 1873              	.LVL295:
 1874 0008 00E0     		b	.L108
 1875              	.LVL296:
 1876              	.L109:
1946:..\FreeRTOS9/queue.c **** 	}
 1877              		.loc 1 1946 0
 1878 000a 0020     		movs	r0, #0
 1879              	.LVL297:
 1880              	.L108:
1950:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 1881              		.loc 1 1950 0
 1882              		@ sp needed
 1883 000c 7047     		bx	lr
 1884              		.cfi_endproc
 1885              	.LFE54:
 1886              		.size	xQueueIsQueueEmptyFromISR, .-xQueueIsQueueEmptyFromISR
 1887 000e C046     		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 1888              		.align	2
 1889              		.global	xQueueIsQueueFullFromISR
 1890              		.code	16
 1891              		.thumb_func
 1892              		.type	xQueueIsQueueFullFromISR, %function
 1893              	xQueueIsQueueFullFromISR:
 1894              	.LFB56:
1972:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 74


1973:..\FreeRTOS9/queue.c **** 
1974:..\FreeRTOS9/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
1975:..\FreeRTOS9/queue.c **** {
 1895              		.loc 1 1975 0
 1896              		.cfi_startproc
 1897              		@ args = 0, pretend = 0, frame = 0
 1898              		@ frame_needed = 0, uses_anonymous_args = 0
 1899              		@ link register save eliminated.
 1900              	.LVL298:
1976:..\FreeRTOS9/queue.c **** BaseType_t xReturn;
1977:..\FreeRTOS9/queue.c **** 
1978:..\FreeRTOS9/queue.c **** 	configASSERT( xQueue );
1979:..\FreeRTOS9/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 1901              		.loc 1 1979 0
 1902 0000 826B     		ldr	r2, [r0, #56]
 1903 0002 C36B     		ldr	r3, [r0, #60]
 1904 0004 9A42     		cmp	r2, r3
 1905 0006 01D1     		bne	.L112
1980:..\FreeRTOS9/queue.c **** 	{
1981:..\FreeRTOS9/queue.c **** 		xReturn = pdTRUE;
 1906              		.loc 1 1981 0
 1907 0008 0120     		movs	r0, #1
 1908              	.LVL299:
 1909 000a 00E0     		b	.L111
 1910              	.LVL300:
 1911              	.L112:
1982:..\FreeRTOS9/queue.c **** 	}
1983:..\FreeRTOS9/queue.c **** 	else
1984:..\FreeRTOS9/queue.c **** 	{
1985:..\FreeRTOS9/queue.c **** 		xReturn = pdFALSE;
 1912              		.loc 1 1985 0
 1913 000c 0020     		movs	r0, #0
 1914              	.LVL301:
 1915              	.L111:
1986:..\FreeRTOS9/queue.c **** 	}
1987:..\FreeRTOS9/queue.c **** 
1988:..\FreeRTOS9/queue.c **** 	return xReturn;
1989:..\FreeRTOS9/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 1916              		.loc 1 1989 0
 1917              		@ sp needed
 1918 000e 7047     		bx	lr
 1919              		.cfi_endproc
 1920              	.LFE56:
 1921              		.size	xQueueIsQueueFullFromISR, .-xQueueIsQueueFullFromISR
 1922              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 1923              		.align	2
 1924              		.global	vQueueAddToRegistry
 1925              		.code	16
 1926              		.thumb_func
 1927              		.type	vQueueAddToRegistry, %function
 1928              	vQueueAddToRegistry:
 1929              	.LFB57:
1990:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
1991:..\FreeRTOS9/queue.c **** 
1992:..\FreeRTOS9/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
1993:..\FreeRTOS9/queue.c **** 
1994:..\FreeRTOS9/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 75


1995:..\FreeRTOS9/queue.c **** 	{
1996:..\FreeRTOS9/queue.c **** 	BaseType_t xReturn;
1997:..\FreeRTOS9/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1998:..\FreeRTOS9/queue.c **** 
1999:..\FreeRTOS9/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2000:..\FreeRTOS9/queue.c **** 		is required to prevent an interrupt removing something from the queue
2001:..\FreeRTOS9/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2002:..\FreeRTOS9/queue.c **** 		portDISABLE_INTERRUPTS();
2003:..\FreeRTOS9/queue.c **** 		{
2004:..\FreeRTOS9/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2005:..\FreeRTOS9/queue.c **** 			{
2006:..\FreeRTOS9/queue.c **** 				/* The queue is full - do we want to block or just leave without
2007:..\FreeRTOS9/queue.c **** 				posting? */
2008:..\FreeRTOS9/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2009:..\FreeRTOS9/queue.c **** 				{
2010:..\FreeRTOS9/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2011:..\FreeRTOS9/queue.c **** 					return indicating that we need to block. */
2012:..\FreeRTOS9/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2013:..\FreeRTOS9/queue.c **** 					portENABLE_INTERRUPTS();
2014:..\FreeRTOS9/queue.c **** 					return errQUEUE_BLOCKED;
2015:..\FreeRTOS9/queue.c **** 				}
2016:..\FreeRTOS9/queue.c **** 				else
2017:..\FreeRTOS9/queue.c **** 				{
2018:..\FreeRTOS9/queue.c **** 					portENABLE_INTERRUPTS();
2019:..\FreeRTOS9/queue.c **** 					return errQUEUE_FULL;
2020:..\FreeRTOS9/queue.c **** 				}
2021:..\FreeRTOS9/queue.c **** 			}
2022:..\FreeRTOS9/queue.c **** 		}
2023:..\FreeRTOS9/queue.c **** 		portENABLE_INTERRUPTS();
2024:..\FreeRTOS9/queue.c **** 
2025:..\FreeRTOS9/queue.c **** 		portDISABLE_INTERRUPTS();
2026:..\FreeRTOS9/queue.c **** 		{
2027:..\FreeRTOS9/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2028:..\FreeRTOS9/queue.c **** 			{
2029:..\FreeRTOS9/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2030:..\FreeRTOS9/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2031:..\FreeRTOS9/queue.c **** 				xReturn = pdPASS;
2032:..\FreeRTOS9/queue.c **** 
2033:..\FreeRTOS9/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2034:..\FreeRTOS9/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2035:..\FreeRTOS9/queue.c **** 				{
2036:..\FreeRTOS9/queue.c **** 					/* In this instance the co-routine could be placed directly
2037:..\FreeRTOS9/queue.c **** 					into the ready list as we are within a critical section.
2038:..\FreeRTOS9/queue.c **** 					Instead the same pending ready list mechanism is used as if
2039:..\FreeRTOS9/queue.c **** 					the event were caused from within an interrupt. */
2040:..\FreeRTOS9/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2041:..\FreeRTOS9/queue.c **** 					{
2042:..\FreeRTOS9/queue.c **** 						/* The co-routine waiting has a higher priority so record
2043:..\FreeRTOS9/queue.c **** 						that a yield might be appropriate. */
2044:..\FreeRTOS9/queue.c **** 						xReturn = errQUEUE_YIELD;
2045:..\FreeRTOS9/queue.c **** 					}
2046:..\FreeRTOS9/queue.c **** 					else
2047:..\FreeRTOS9/queue.c **** 					{
2048:..\FreeRTOS9/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2049:..\FreeRTOS9/queue.c **** 					}
2050:..\FreeRTOS9/queue.c **** 				}
2051:..\FreeRTOS9/queue.c **** 				else
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 76


2052:..\FreeRTOS9/queue.c **** 				{
2053:..\FreeRTOS9/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2054:..\FreeRTOS9/queue.c **** 				}
2055:..\FreeRTOS9/queue.c **** 			}
2056:..\FreeRTOS9/queue.c **** 			else
2057:..\FreeRTOS9/queue.c **** 			{
2058:..\FreeRTOS9/queue.c **** 				xReturn = errQUEUE_FULL;
2059:..\FreeRTOS9/queue.c **** 			}
2060:..\FreeRTOS9/queue.c **** 		}
2061:..\FreeRTOS9/queue.c **** 		portENABLE_INTERRUPTS();
2062:..\FreeRTOS9/queue.c **** 
2063:..\FreeRTOS9/queue.c **** 		return xReturn;
2064:..\FreeRTOS9/queue.c **** 	}
2065:..\FreeRTOS9/queue.c **** 
2066:..\FreeRTOS9/queue.c **** #endif /* configUSE_CO_ROUTINES */
2067:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
2068:..\FreeRTOS9/queue.c **** 
2069:..\FreeRTOS9/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2070:..\FreeRTOS9/queue.c **** 
2071:..\FreeRTOS9/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2072:..\FreeRTOS9/queue.c **** 	{
2073:..\FreeRTOS9/queue.c **** 	BaseType_t xReturn;
2074:..\FreeRTOS9/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2075:..\FreeRTOS9/queue.c **** 
2076:..\FreeRTOS9/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2077:..\FreeRTOS9/queue.c **** 		is required to prevent an interrupt adding something to the queue
2078:..\FreeRTOS9/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2079:..\FreeRTOS9/queue.c **** 		portDISABLE_INTERRUPTS();
2080:..\FreeRTOS9/queue.c **** 		{
2081:..\FreeRTOS9/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2082:..\FreeRTOS9/queue.c **** 			{
2083:..\FreeRTOS9/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2084:..\FreeRTOS9/queue.c **** 				leave with nothing? */
2085:..\FreeRTOS9/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2086:..\FreeRTOS9/queue.c **** 				{
2087:..\FreeRTOS9/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2088:..\FreeRTOS9/queue.c **** 					indicating that we need to block. */
2089:..\FreeRTOS9/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2090:..\FreeRTOS9/queue.c **** 					portENABLE_INTERRUPTS();
2091:..\FreeRTOS9/queue.c **** 					return errQUEUE_BLOCKED;
2092:..\FreeRTOS9/queue.c **** 				}
2093:..\FreeRTOS9/queue.c **** 				else
2094:..\FreeRTOS9/queue.c **** 				{
2095:..\FreeRTOS9/queue.c **** 					portENABLE_INTERRUPTS();
2096:..\FreeRTOS9/queue.c **** 					return errQUEUE_FULL;
2097:..\FreeRTOS9/queue.c **** 				}
2098:..\FreeRTOS9/queue.c **** 			}
2099:..\FreeRTOS9/queue.c **** 			else
2100:..\FreeRTOS9/queue.c **** 			{
2101:..\FreeRTOS9/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2102:..\FreeRTOS9/queue.c **** 			}
2103:..\FreeRTOS9/queue.c **** 		}
2104:..\FreeRTOS9/queue.c **** 		portENABLE_INTERRUPTS();
2105:..\FreeRTOS9/queue.c **** 
2106:..\FreeRTOS9/queue.c **** 		portDISABLE_INTERRUPTS();
2107:..\FreeRTOS9/queue.c **** 		{
2108:..\FreeRTOS9/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 77


2109:..\FreeRTOS9/queue.c **** 			{
2110:..\FreeRTOS9/queue.c **** 				/* Data is available from the queue. */
2111:..\FreeRTOS9/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2112:..\FreeRTOS9/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2113:..\FreeRTOS9/queue.c **** 				{
2114:..\FreeRTOS9/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2115:..\FreeRTOS9/queue.c **** 				}
2116:..\FreeRTOS9/queue.c **** 				else
2117:..\FreeRTOS9/queue.c **** 				{
2118:..\FreeRTOS9/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2119:..\FreeRTOS9/queue.c **** 				}
2120:..\FreeRTOS9/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2121:..\FreeRTOS9/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2122:..\FreeRTOS9/queue.c **** 
2123:..\FreeRTOS9/queue.c **** 				xReturn = pdPASS;
2124:..\FreeRTOS9/queue.c **** 
2125:..\FreeRTOS9/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2126:..\FreeRTOS9/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2127:..\FreeRTOS9/queue.c **** 				{
2128:..\FreeRTOS9/queue.c **** 					/* In this instance the co-routine could be placed directly
2129:..\FreeRTOS9/queue.c **** 					into the ready list as we are within a critical section.
2130:..\FreeRTOS9/queue.c **** 					Instead the same pending ready list mechanism is used as if
2131:..\FreeRTOS9/queue.c **** 					the event were caused from within an interrupt. */
2132:..\FreeRTOS9/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2133:..\FreeRTOS9/queue.c **** 					{
2134:..\FreeRTOS9/queue.c **** 						xReturn = errQUEUE_YIELD;
2135:..\FreeRTOS9/queue.c **** 					}
2136:..\FreeRTOS9/queue.c **** 					else
2137:..\FreeRTOS9/queue.c **** 					{
2138:..\FreeRTOS9/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2139:..\FreeRTOS9/queue.c **** 					}
2140:..\FreeRTOS9/queue.c **** 				}
2141:..\FreeRTOS9/queue.c **** 				else
2142:..\FreeRTOS9/queue.c **** 				{
2143:..\FreeRTOS9/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2144:..\FreeRTOS9/queue.c **** 				}
2145:..\FreeRTOS9/queue.c **** 			}
2146:..\FreeRTOS9/queue.c **** 			else
2147:..\FreeRTOS9/queue.c **** 			{
2148:..\FreeRTOS9/queue.c **** 				xReturn = pdFAIL;
2149:..\FreeRTOS9/queue.c **** 			}
2150:..\FreeRTOS9/queue.c **** 		}
2151:..\FreeRTOS9/queue.c **** 		portENABLE_INTERRUPTS();
2152:..\FreeRTOS9/queue.c **** 
2153:..\FreeRTOS9/queue.c **** 		return xReturn;
2154:..\FreeRTOS9/queue.c **** 	}
2155:..\FreeRTOS9/queue.c **** 
2156:..\FreeRTOS9/queue.c **** #endif /* configUSE_CO_ROUTINES */
2157:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
2158:..\FreeRTOS9/queue.c **** 
2159:..\FreeRTOS9/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2160:..\FreeRTOS9/queue.c **** 
2161:..\FreeRTOS9/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2162:..\FreeRTOS9/queue.c **** 	{
2163:..\FreeRTOS9/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2164:..\FreeRTOS9/queue.c **** 
2165:..\FreeRTOS9/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 78


2166:..\FreeRTOS9/queue.c **** 		exit without doing anything. */
2167:..\FreeRTOS9/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2168:..\FreeRTOS9/queue.c **** 		{
2169:..\FreeRTOS9/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2170:..\FreeRTOS9/queue.c **** 
2171:..\FreeRTOS9/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2172:..\FreeRTOS9/queue.c **** 			co-routine has not already been woken. */
2173:..\FreeRTOS9/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
2174:..\FreeRTOS9/queue.c **** 			{
2175:..\FreeRTOS9/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2176:..\FreeRTOS9/queue.c **** 				{
2177:..\FreeRTOS9/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2178:..\FreeRTOS9/queue.c **** 					{
2179:..\FreeRTOS9/queue.c **** 						return pdTRUE;
2180:..\FreeRTOS9/queue.c **** 					}
2181:..\FreeRTOS9/queue.c **** 					else
2182:..\FreeRTOS9/queue.c **** 					{
2183:..\FreeRTOS9/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2184:..\FreeRTOS9/queue.c **** 					}
2185:..\FreeRTOS9/queue.c **** 				}
2186:..\FreeRTOS9/queue.c **** 				else
2187:..\FreeRTOS9/queue.c **** 				{
2188:..\FreeRTOS9/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2189:..\FreeRTOS9/queue.c **** 				}
2190:..\FreeRTOS9/queue.c **** 			}
2191:..\FreeRTOS9/queue.c **** 			else
2192:..\FreeRTOS9/queue.c **** 			{
2193:..\FreeRTOS9/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2194:..\FreeRTOS9/queue.c **** 			}
2195:..\FreeRTOS9/queue.c **** 		}
2196:..\FreeRTOS9/queue.c **** 		else
2197:..\FreeRTOS9/queue.c **** 		{
2198:..\FreeRTOS9/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2199:..\FreeRTOS9/queue.c **** 		}
2200:..\FreeRTOS9/queue.c **** 
2201:..\FreeRTOS9/queue.c **** 		return xCoRoutinePreviouslyWoken;
2202:..\FreeRTOS9/queue.c **** 	}
2203:..\FreeRTOS9/queue.c **** 
2204:..\FreeRTOS9/queue.c **** #endif /* configUSE_CO_ROUTINES */
2205:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
2206:..\FreeRTOS9/queue.c **** 
2207:..\FreeRTOS9/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2208:..\FreeRTOS9/queue.c **** 
2209:..\FreeRTOS9/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2210:..\FreeRTOS9/queue.c **** 	{
2211:..\FreeRTOS9/queue.c **** 	BaseType_t xReturn;
2212:..\FreeRTOS9/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2213:..\FreeRTOS9/queue.c **** 
2214:..\FreeRTOS9/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2215:..\FreeRTOS9/queue.c **** 		not then just leave without doing anything. */
2216:..\FreeRTOS9/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2217:..\FreeRTOS9/queue.c **** 		{
2218:..\FreeRTOS9/queue.c **** 			/* Copy the data from the queue. */
2219:..\FreeRTOS9/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2220:..\FreeRTOS9/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2221:..\FreeRTOS9/queue.c **** 			{
2222:..\FreeRTOS9/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 79


2223:..\FreeRTOS9/queue.c **** 			}
2224:..\FreeRTOS9/queue.c **** 			else
2225:..\FreeRTOS9/queue.c **** 			{
2226:..\FreeRTOS9/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2227:..\FreeRTOS9/queue.c **** 			}
2228:..\FreeRTOS9/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2229:..\FreeRTOS9/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2230:..\FreeRTOS9/queue.c **** 
2231:..\FreeRTOS9/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2232:..\FreeRTOS9/queue.c **** 			{
2233:..\FreeRTOS9/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2234:..\FreeRTOS9/queue.c **** 				{
2235:..\FreeRTOS9/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2236:..\FreeRTOS9/queue.c **** 					{
2237:..\FreeRTOS9/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2238:..\FreeRTOS9/queue.c **** 					}
2239:..\FreeRTOS9/queue.c **** 					else
2240:..\FreeRTOS9/queue.c **** 					{
2241:..\FreeRTOS9/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2242:..\FreeRTOS9/queue.c **** 					}
2243:..\FreeRTOS9/queue.c **** 				}
2244:..\FreeRTOS9/queue.c **** 				else
2245:..\FreeRTOS9/queue.c **** 				{
2246:..\FreeRTOS9/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2247:..\FreeRTOS9/queue.c **** 				}
2248:..\FreeRTOS9/queue.c **** 			}
2249:..\FreeRTOS9/queue.c **** 			else
2250:..\FreeRTOS9/queue.c **** 			{
2251:..\FreeRTOS9/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2252:..\FreeRTOS9/queue.c **** 			}
2253:..\FreeRTOS9/queue.c **** 
2254:..\FreeRTOS9/queue.c **** 			xReturn = pdPASS;
2255:..\FreeRTOS9/queue.c **** 		}
2256:..\FreeRTOS9/queue.c **** 		else
2257:..\FreeRTOS9/queue.c **** 		{
2258:..\FreeRTOS9/queue.c **** 			xReturn = pdFAIL;
2259:..\FreeRTOS9/queue.c **** 		}
2260:..\FreeRTOS9/queue.c **** 
2261:..\FreeRTOS9/queue.c **** 		return xReturn;
2262:..\FreeRTOS9/queue.c **** 	}
2263:..\FreeRTOS9/queue.c **** 
2264:..\FreeRTOS9/queue.c **** #endif /* configUSE_CO_ROUTINES */
2265:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
2266:..\FreeRTOS9/queue.c **** 
2267:..\FreeRTOS9/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2268:..\FreeRTOS9/queue.c **** 
2269:..\FreeRTOS9/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2270:..\FreeRTOS9/queue.c **** 	{
 1930              		.loc 1 2270 0
 1931              		.cfi_startproc
 1932              		@ args = 0, pretend = 0, frame = 0
 1933              		@ frame_needed = 0, uses_anonymous_args = 0
 1934              	.LVL302:
 1935 0000 10B5     		push	{r4, lr}
 1936              		.cfi_def_cfa_offset 8
 1937              		.cfi_offset 4, -8
 1938              		.cfi_offset 14, -4
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 80


 1939              	.LVL303:
2271:..\FreeRTOS9/queue.c **** 	UBaseType_t ux;
2272:..\FreeRTOS9/queue.c **** 
2273:..\FreeRTOS9/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2274:..\FreeRTOS9/queue.c **** 		a free slot. */
2275:..\FreeRTOS9/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 1940              		.loc 1 2275 0
 1941 0002 0023     		movs	r3, #0
 1942 0004 0AE0     		b	.L114
 1943              	.LVL304:
 1944              	.L117:
2276:..\FreeRTOS9/queue.c **** 		{
2277:..\FreeRTOS9/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 1945              		.loc 1 2277 0
 1946 0006 DA00     		lsls	r2, r3, #3
 1947 0008 064C     		ldr	r4, .L118
 1948 000a 1259     		ldr	r2, [r2, r4]
 1949 000c 002A     		cmp	r2, #0
 1950 000e 04D1     		bne	.L115
2278:..\FreeRTOS9/queue.c **** 			{
2279:..\FreeRTOS9/queue.c **** 				/* Store the information on this queue. */
2280:..\FreeRTOS9/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 1951              		.loc 1 2280 0
 1952 0010 DB00     		lsls	r3, r3, #3
 1953              	.LVL305:
 1954 0012 1951     		str	r1, [r3, r4]
2281:..\FreeRTOS9/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 1955              		.loc 1 2281 0
 1956 0014 E318     		adds	r3, r4, r3
 1957 0016 5860     		str	r0, [r3, #4]
2282:..\FreeRTOS9/queue.c **** 
2283:..\FreeRTOS9/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2284:..\FreeRTOS9/queue.c **** 				break;
 1958              		.loc 1 2284 0
 1959 0018 02E0     		b	.L113
 1960              	.LVL306:
 1961              	.L115:
2275:..\FreeRTOS9/queue.c **** 		{
 1962              		.loc 1 2275 0 discriminator 2
 1963 001a 0133     		adds	r3, r3, #1
 1964              	.LVL307:
 1965              	.L114:
2275:..\FreeRTOS9/queue.c **** 		{
 1966              		.loc 1 2275 0 is_stmt 0 discriminator 1
 1967 001c 092B     		cmp	r3, #9
 1968 001e F2D9     		bls	.L117
 1969              	.LVL308:
 1970              	.L113:
2285:..\FreeRTOS9/queue.c **** 			}
2286:..\FreeRTOS9/queue.c **** 			else
2287:..\FreeRTOS9/queue.c **** 			{
2288:..\FreeRTOS9/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2289:..\FreeRTOS9/queue.c **** 			}
2290:..\FreeRTOS9/queue.c **** 		}
2291:..\FreeRTOS9/queue.c **** 	}
 1971              		.loc 1 2291 0 is_stmt 1
 1972              		@ sp needed
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 81


 1973 0020 10BD     		pop	{r4, pc}
 1974              	.L119:
 1975 0022 C046     		.align	2
 1976              	.L118:
 1977 0024 00000000 		.word	xQueueRegistry
 1978              		.cfi_endproc
 1979              	.LFE57:
 1980              		.size	vQueueAddToRegistry, .-vQueueAddToRegistry
 1981              		.section	.text.pcQueueGetName,"ax",%progbits
 1982              		.align	2
 1983              		.global	pcQueueGetName
 1984              		.code	16
 1985              		.thumb_func
 1986              		.type	pcQueueGetName, %function
 1987              	pcQueueGetName:
 1988              	.LFB58:
2292:..\FreeRTOS9/queue.c **** 
2293:..\FreeRTOS9/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2294:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
2295:..\FreeRTOS9/queue.c **** 
2296:..\FreeRTOS9/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2297:..\FreeRTOS9/queue.c **** 
2298:..\FreeRTOS9/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2299:..\FreeRTOS9/queue.c **** 	{
 1989              		.loc 1 2299 0
 1990              		.cfi_startproc
 1991              		@ args = 0, pretend = 0, frame = 0
 1992              		@ frame_needed = 0, uses_anonymous_args = 0
 1993              		@ link register save eliminated.
 1994              	.LVL309:
2300:..\FreeRTOS9/queue.c **** 	UBaseType_t ux;
2301:..\FreeRTOS9/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2302:..\FreeRTOS9/queue.c **** 
2303:..\FreeRTOS9/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2304:..\FreeRTOS9/queue.c **** 		removing entries from the registry while it is being searched. */
2305:..\FreeRTOS9/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 1995              		.loc 1 2305 0
 1996 0000 0022     		movs	r2, #0
 1997 0002 09E0     		b	.L121
 1998              	.LVL310:
 1999              	.L124:
2306:..\FreeRTOS9/queue.c **** 		{
2307:..\FreeRTOS9/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2000              		.loc 1 2307 0
 2001 0004 D300     		lsls	r3, r2, #3
 2002 0006 0649     		ldr	r1, .L125
 2003 0008 CB18     		adds	r3, r1, r3
 2004 000a 5B68     		ldr	r3, [r3, #4]
 2005 000c 8342     		cmp	r3, r0
 2006 000e 02D1     		bne	.L122
2308:..\FreeRTOS9/queue.c **** 			{
2309:..\FreeRTOS9/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 2007              		.loc 1 2309 0
 2008 0010 D200     		lsls	r2, r2, #3
 2009              	.LVL311:
 2010 0012 5058     		ldr	r0, [r2, r1]
 2011              	.LVL312:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 82


2310:..\FreeRTOS9/queue.c **** 				break;
 2012              		.loc 1 2310 0
 2013 0014 03E0     		b	.L123
 2014              	.LVL313:
 2015              	.L122:
2305:..\FreeRTOS9/queue.c **** 		{
 2016              		.loc 1 2305 0 discriminator 2
 2017 0016 0132     		adds	r2, r2, #1
 2018              	.LVL314:
 2019              	.L121:
2305:..\FreeRTOS9/queue.c **** 		{
 2020              		.loc 1 2305 0 is_stmt 0 discriminator 1
 2021 0018 092A     		cmp	r2, #9
 2022 001a F3D9     		bls	.L124
2301:..\FreeRTOS9/queue.c **** 
 2023              		.loc 1 2301 0 is_stmt 1
 2024 001c 0020     		movs	r0, #0
 2025              	.LVL315:
 2026              	.L123:
2311:..\FreeRTOS9/queue.c **** 			}
2312:..\FreeRTOS9/queue.c **** 			else
2313:..\FreeRTOS9/queue.c **** 			{
2314:..\FreeRTOS9/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2315:..\FreeRTOS9/queue.c **** 			}
2316:..\FreeRTOS9/queue.c **** 		}
2317:..\FreeRTOS9/queue.c **** 
2318:..\FreeRTOS9/queue.c **** 		return pcReturn;
2319:..\FreeRTOS9/queue.c **** 	}
 2027              		.loc 1 2319 0
 2028              		@ sp needed
 2029 001e 7047     		bx	lr
 2030              	.L126:
 2031              		.align	2
 2032              	.L125:
 2033 0020 00000000 		.word	xQueueRegistry
 2034              		.cfi_endproc
 2035              	.LFE58:
 2036              		.size	pcQueueGetName, .-pcQueueGetName
 2037              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 2038              		.align	2
 2039              		.global	vQueueUnregisterQueue
 2040              		.code	16
 2041              		.thumb_func
 2042              		.type	vQueueUnregisterQueue, %function
 2043              	vQueueUnregisterQueue:
 2044              	.LFB59:
2320:..\FreeRTOS9/queue.c **** 
2321:..\FreeRTOS9/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2322:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
2323:..\FreeRTOS9/queue.c **** 
2324:..\FreeRTOS9/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2325:..\FreeRTOS9/queue.c **** 
2326:..\FreeRTOS9/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2327:..\FreeRTOS9/queue.c **** 	{
 2045              		.loc 1 2327 0
 2046              		.cfi_startproc
 2047              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 83


 2048              		@ frame_needed = 0, uses_anonymous_args = 0
 2049              		@ link register save eliminated.
 2050              	.LVL316:
2328:..\FreeRTOS9/queue.c **** 	UBaseType_t ux;
2329:..\FreeRTOS9/queue.c **** 
2330:..\FreeRTOS9/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2331:..\FreeRTOS9/queue.c **** 		registry. */
2332:..\FreeRTOS9/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2051              		.loc 1 2332 0
 2052 0000 0022     		movs	r2, #0
 2053 0002 0CE0     		b	.L128
 2054              	.LVL317:
 2055              	.L131:
2333:..\FreeRTOS9/queue.c **** 		{
2334:..\FreeRTOS9/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2056              		.loc 1 2334 0
 2057 0004 D300     		lsls	r3, r2, #3
 2058 0006 0749     		ldr	r1, .L132
 2059 0008 CB18     		adds	r3, r1, r3
 2060 000a 5B68     		ldr	r3, [r3, #4]
 2061 000c 8342     		cmp	r3, r0
 2062 000e 05D1     		bne	.L129
2335:..\FreeRTOS9/queue.c **** 			{
2336:..\FreeRTOS9/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2337:..\FreeRTOS9/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 2063              		.loc 1 2337 0
 2064 0010 D200     		lsls	r2, r2, #3
 2065              	.LVL318:
 2066 0012 0023     		movs	r3, #0
 2067 0014 5350     		str	r3, [r2, r1]
2338:..\FreeRTOS9/queue.c **** 
2339:..\FreeRTOS9/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2340:..\FreeRTOS9/queue.c **** 				appear in the registry twice if it is added, removed, then
2341:..\FreeRTOS9/queue.c **** 				added again. */
2342:..\FreeRTOS9/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 2068              		.loc 1 2342 0
 2069 0016 8A18     		adds	r2, r1, r2
 2070 0018 5360     		str	r3, [r2, #4]
2343:..\FreeRTOS9/queue.c **** 				break;
 2071              		.loc 1 2343 0
 2072 001a 02E0     		b	.L127
 2073              	.LVL319:
 2074              	.L129:
2332:..\FreeRTOS9/queue.c **** 		{
 2075              		.loc 1 2332 0 discriminator 2
 2076 001c 0132     		adds	r2, r2, #1
 2077              	.LVL320:
 2078              	.L128:
2332:..\FreeRTOS9/queue.c **** 		{
 2079              		.loc 1 2332 0 is_stmt 0 discriminator 1
 2080 001e 092A     		cmp	r2, #9
 2081 0020 F0D9     		bls	.L131
 2082              	.LVL321:
 2083              	.L127:
2344:..\FreeRTOS9/queue.c **** 			}
2345:..\FreeRTOS9/queue.c **** 			else
2346:..\FreeRTOS9/queue.c **** 			{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 84


2347:..\FreeRTOS9/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2348:..\FreeRTOS9/queue.c **** 			}
2349:..\FreeRTOS9/queue.c **** 		}
2350:..\FreeRTOS9/queue.c **** 
2351:..\FreeRTOS9/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2084              		.loc 1 2351 0 is_stmt 1
 2085              		@ sp needed
 2086 0022 7047     		bx	lr
 2087              	.L133:
 2088              		.align	2
 2089              	.L132:
 2090 0024 00000000 		.word	xQueueRegistry
 2091              		.cfi_endproc
 2092              	.LFE59:
 2093              		.size	vQueueUnregisterQueue, .-vQueueUnregisterQueue
 2094              		.section	.text.vQueueDelete,"ax",%progbits
 2095              		.align	2
 2096              		.global	vQueueDelete
 2097              		.code	16
 2098              		.thumb_func
 2099              		.type	vQueueDelete, %function
 2100              	vQueueDelete:
 2101              	.LFB49:
1626:..\FreeRTOS9/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 2102              		.loc 1 1626 0
 2103              		.cfi_startproc
 2104              		@ args = 0, pretend = 0, frame = 0
 2105              		@ frame_needed = 0, uses_anonymous_args = 0
 2106              	.LVL322:
 2107 0000 10B5     		push	{r4, lr}
 2108              		.cfi_def_cfa_offset 8
 2109              		.cfi_offset 4, -8
 2110              		.cfi_offset 14, -4
 2111 0002 0400     		movs	r4, r0
 2112              	.LVL323:
1634:..\FreeRTOS9/queue.c **** 	}
 2113              		.loc 1 1634 0
 2114 0004 FFF7FEFF 		bl	vQueueUnregisterQueue
 2115              	.LVL324:
1642:..\FreeRTOS9/queue.c **** 	}
 2116              		.loc 1 1642 0
 2117 0008 2000     		movs	r0, r4
 2118 000a FFF7FEFF 		bl	vPortFree
 2119              	.LVL325:
1664:..\FreeRTOS9/queue.c **** /*-----------------------------------------------------------*/
 2120              		.loc 1 1664 0
 2121              		@ sp needed
 2122              	.LVL326:
 2123 000e 10BD     		pop	{r4, pc}
 2124              		.cfi_endproc
 2125              	.LFE49:
 2126              		.size	vQueueDelete, .-vQueueDelete
 2127              		.comm	xQueueRegistry,80,4
 2128              		.text
 2129              	.Letext0:
 2130              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2131              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 85


 2132              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2133              		.file 5 "..\\FreeRTOS9\\portable\\GCC\\ARM_CM0/portmacro.h"
 2134              		.file 6 "..\\FreeRTOS9\\include/list.h"
 2135              		.file 7 "..\\FreeRTOS9\\include/task.h"
 2136              		.file 8 "..\\FreeRTOS9\\include/queue.h"
 2137              		.file 9 "..\\FreeRTOS9\\include/portable.h"
 2138              		.section	.debug_info,"",%progbits
 2139              	.Ldebug_info0:
 2140 0000 59140000 		.4byte	0x1459
 2141 0004 0400     		.2byte	0x4
 2142 0006 00000000 		.4byte	.Ldebug_abbrev0
 2143 000a 04       		.byte	0x4
 2144 000b 01       		.uleb128 0x1
 2145 000c F4020000 		.4byte	.LASF139
 2146 0010 0C       		.byte	0xc
 2147 0011 56080000 		.4byte	.LASF140
 2148 0015 1C020000 		.4byte	.LASF141
 2149 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 2150 001d 00000000 		.4byte	0
 2151 0021 00000000 		.4byte	.Ldebug_line0
 2152 0025 02       		.uleb128 0x2
 2153 0026 90030000 		.4byte	.LASF3
 2154 002a 02       		.byte	0x2
 2155 002b D8       		.byte	0xd8
 2156 002c 30000000 		.4byte	0x30
 2157 0030 03       		.uleb128 0x3
 2158 0031 04       		.byte	0x4
 2159 0032 07       		.byte	0x7
 2160 0033 8E000000 		.4byte	.LASF0
 2161 0037 04       		.uleb128 0x4
 2162 0038 04       		.byte	0x4
 2163 0039 05       		.byte	0x5
 2164 003a 696E7400 		.ascii	"int\000"
 2165 003e 03       		.uleb128 0x3
 2166 003f 08       		.byte	0x8
 2167 0040 05       		.byte	0x5
 2168 0041 4D050000 		.4byte	.LASF1
 2169 0045 03       		.uleb128 0x3
 2170 0046 08       		.byte	0x8
 2171 0047 04       		.byte	0x4
 2172 0048 3D060000 		.4byte	.LASF2
 2173 004c 02       		.uleb128 0x2
 2174 004d 26060000 		.4byte	.LASF4
 2175 0051 03       		.byte	0x3
 2176 0052 1B       		.byte	0x1b
 2177 0053 57000000 		.4byte	0x57
 2178 0057 03       		.uleb128 0x3
 2179 0058 01       		.byte	0x1
 2180 0059 06       		.byte	0x6
 2181 005a 85080000 		.4byte	.LASF5
 2182 005e 02       		.uleb128 0x2
 2183 005f 32070000 		.4byte	.LASF6
 2184 0063 03       		.byte	0x3
 2185 0064 1D       		.byte	0x1d
 2186 0065 69000000 		.4byte	0x69
 2187 0069 03       		.uleb128 0x3
 2188 006a 01       		.byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 86


 2189 006b 08       		.byte	0x8
 2190 006c 9F070000 		.4byte	.LASF7
 2191 0070 03       		.uleb128 0x3
 2192 0071 02       		.byte	0x2
 2193 0072 05       		.byte	0x5
 2194 0073 8F060000 		.4byte	.LASF8
 2195 0077 03       		.uleb128 0x3
 2196 0078 02       		.byte	0x2
 2197 0079 07       		.byte	0x7
 2198 007a 91080000 		.4byte	.LASF9
 2199 007e 03       		.uleb128 0x3
 2200 007f 04       		.byte	0x4
 2201 0080 05       		.byte	0x5
 2202 0081 A4060000 		.4byte	.LASF10
 2203 0085 02       		.uleb128 0x2
 2204 0086 AD070000 		.4byte	.LASF11
 2205 008a 03       		.byte	0x3
 2206 008b 41       		.byte	0x41
 2207 008c 90000000 		.4byte	0x90
 2208 0090 03       		.uleb128 0x3
 2209 0091 04       		.byte	0x4
 2210 0092 07       		.byte	0x7
 2211 0093 66070000 		.4byte	.LASF12
 2212 0097 03       		.uleb128 0x3
 2213 0098 08       		.byte	0x8
 2214 0099 07       		.byte	0x7
 2215 009a 8A020000 		.4byte	.LASF13
 2216 009e 03       		.uleb128 0x3
 2217 009f 04       		.byte	0x4
 2218 00a0 07       		.byte	0x7
 2219 00a1 4C070000 		.4byte	.LASF14
 2220 00a5 05       		.uleb128 0x5
 2221 00a6 04       		.byte	0x4
 2222 00a7 03       		.uleb128 0x3
 2223 00a8 01       		.byte	0x1
 2224 00a9 08       		.byte	0x8
 2225 00aa 7C040000 		.4byte	.LASF15
 2226 00ae 06       		.uleb128 0x6
 2227 00af 04       		.byte	0x4
 2228 00b0 B4000000 		.4byte	0xb4
 2229 00b4 07       		.uleb128 0x7
 2230 00b5 A7000000 		.4byte	0xa7
 2231 00b9 06       		.uleb128 0x6
 2232 00ba 04       		.byte	0x4
 2233 00bb BF000000 		.4byte	0xbf
 2234 00bf 08       		.uleb128 0x8
 2235 00c0 02       		.uleb128 0x2
 2236 00c1 ED010000 		.4byte	.LASF16
 2237 00c5 04       		.byte	0x4
 2238 00c6 14       		.byte	0x14
 2239 00c7 4C000000 		.4byte	0x4c
 2240 00cb 02       		.uleb128 0x2
 2241 00cc 0C050000 		.4byte	.LASF17
 2242 00d0 04       		.byte	0x4
 2243 00d1 18       		.byte	0x18
 2244 00d2 5E000000 		.4byte	0x5e
 2245 00d6 02       		.uleb128 0x2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 87


 2246 00d7 E4010000 		.4byte	.LASF18
 2247 00db 04       		.byte	0x4
 2248 00dc 30       		.byte	0x30
 2249 00dd 85000000 		.4byte	0x85
 2250 00e1 03       		.uleb128 0x3
 2251 00e2 04       		.byte	0x4
 2252 00e3 04       		.byte	0x4
 2253 00e4 16020000 		.4byte	.LASF19
 2254 00e8 03       		.uleb128 0x3
 2255 00e9 08       		.byte	0x8
 2256 00ea 04       		.byte	0x4
 2257 00eb B2080000 		.4byte	.LASF20
 2258 00ef 02       		.uleb128 0x2
 2259 00f0 6E050000 		.4byte	.LASF21
 2260 00f4 05       		.byte	0x5
 2261 00f5 62       		.byte	0x62
 2262 00f6 7E000000 		.4byte	0x7e
 2263 00fa 02       		.uleb128 0x2
 2264 00fb 9B040000 		.4byte	.LASF22
 2265 00ff 05       		.byte	0x5
 2266 0100 63       		.byte	0x63
 2267 0101 90000000 		.4byte	0x90
 2268 0105 02       		.uleb128 0x2
 2269 0106 1B060000 		.4byte	.LASF23
 2270 010a 05       		.byte	0x5
 2271 010b 69       		.byte	0x69
 2272 010c D6000000 		.4byte	0xd6
 2273 0110 06       		.uleb128 0x6
 2274 0111 04       		.byte	0x4
 2275 0112 CB000000 		.4byte	0xcb
 2276 0116 09       		.uleb128 0x9
 2277 0117 CD000000 		.4byte	.LASF30
 2278 011b 14       		.byte	0x14
 2279 011c 06       		.byte	0x6
 2280 011d B5       		.byte	0xb5
 2281 011e 5F010000 		.4byte	0x15f
 2282 0122 0A       		.uleb128 0xa
 2283 0123 99060000 		.4byte	.LASF24
 2284 0127 06       		.byte	0x6
 2285 0128 B8       		.byte	0xb8
 2286 0129 05010000 		.4byte	0x105
 2287 012d 00       		.byte	0
 2288 012e 0A       		.uleb128 0xa
 2289 012f B4050000 		.4byte	.LASF25
 2290 0133 06       		.byte	0x6
 2291 0134 B9       		.byte	0xb9
 2292 0135 5F010000 		.4byte	0x15f
 2293 0139 04       		.byte	0x4
 2294 013a 0A       		.uleb128 0xa
 2295 013b BA020000 		.4byte	.LASF26
 2296 013f 06       		.byte	0x6
 2297 0140 BA       		.byte	0xba
 2298 0141 5F010000 		.4byte	0x15f
 2299 0145 08       		.byte	0x8
 2300 0146 0A       		.uleb128 0xa
 2301 0147 EA070000 		.4byte	.LASF27
 2302 014b 06       		.byte	0x6
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 88


 2303 014c BB       		.byte	0xbb
 2304 014d A5000000 		.4byte	0xa5
 2305 0151 0C       		.byte	0xc
 2306 0152 0A       		.uleb128 0xa
 2307 0153 62060000 		.4byte	.LASF28
 2308 0157 06       		.byte	0x6
 2309 0158 BC       		.byte	0xbc
 2310 0159 A5000000 		.4byte	0xa5
 2311 015d 10       		.byte	0x10
 2312 015e 00       		.byte	0
 2313 015f 06       		.uleb128 0x6
 2314 0160 04       		.byte	0x4
 2315 0161 16010000 		.4byte	0x116
 2316 0165 02       		.uleb128 0x2
 2317 0166 81040000 		.4byte	.LASF29
 2318 016a 06       		.byte	0x6
 2319 016b BF       		.byte	0xbf
 2320 016c 16010000 		.4byte	0x116
 2321 0170 09       		.uleb128 0x9
 2322 0171 B4030000 		.4byte	.LASF31
 2323 0175 0C       		.byte	0xc
 2324 0176 06       		.byte	0x6
 2325 0177 C1       		.byte	0xc1
 2326 0178 A1010000 		.4byte	0x1a1
 2327 017c 0A       		.uleb128 0xa
 2328 017d 99060000 		.4byte	.LASF24
 2329 0181 06       		.byte	0x6
 2330 0182 C4       		.byte	0xc4
 2331 0183 05010000 		.4byte	0x105
 2332 0187 00       		.byte	0
 2333 0188 0A       		.uleb128 0xa
 2334 0189 B4050000 		.4byte	.LASF25
 2335 018d 06       		.byte	0x6
 2336 018e C5       		.byte	0xc5
 2337 018f 5F010000 		.4byte	0x15f
 2338 0193 04       		.byte	0x4
 2339 0194 0A       		.uleb128 0xa
 2340 0195 BA020000 		.4byte	.LASF26
 2341 0199 06       		.byte	0x6
 2342 019a C6       		.byte	0xc6
 2343 019b 5F010000 		.4byte	0x15f
 2344 019f 08       		.byte	0x8
 2345 01a0 00       		.byte	0
 2346 01a1 02       		.uleb128 0x2
 2347 01a2 FD040000 		.4byte	.LASF32
 2348 01a6 06       		.byte	0x6
 2349 01a7 C8       		.byte	0xc8
 2350 01a8 70010000 		.4byte	0x170
 2351 01ac 09       		.uleb128 0x9
 2352 01ad C4030000 		.4byte	.LASF33
 2353 01b1 14       		.byte	0x14
 2354 01b2 06       		.byte	0x6
 2355 01b3 CD       		.byte	0xcd
 2356 01b4 DD010000 		.4byte	0x1dd
 2357 01b8 0A       		.uleb128 0xa
 2358 01b9 00000000 		.4byte	.LASF34
 2359 01bd 06       		.byte	0x6
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 89


 2360 01be D0       		.byte	0xd0
 2361 01bf FA000000 		.4byte	0xfa
 2362 01c3 00       		.byte	0
 2363 01c4 0A       		.uleb128 0xa
 2364 01c5 9B000000 		.4byte	.LASF35
 2365 01c9 06       		.byte	0x6
 2366 01ca D1       		.byte	0xd1
 2367 01cb DD010000 		.4byte	0x1dd
 2368 01cf 04       		.byte	0x4
 2369 01d0 0A       		.uleb128 0xa
 2370 01d1 D6040000 		.4byte	.LASF36
 2371 01d5 06       		.byte	0x6
 2372 01d6 D2       		.byte	0xd2
 2373 01d7 A1010000 		.4byte	0x1a1
 2374 01db 08       		.byte	0x8
 2375 01dc 00       		.byte	0
 2376 01dd 06       		.uleb128 0x6
 2377 01de 04       		.byte	0x4
 2378 01df 65010000 		.4byte	0x165
 2379 01e3 02       		.uleb128 0x2
 2380 01e4 0A060000 		.4byte	.LASF37
 2381 01e8 06       		.byte	0x6
 2382 01e9 D4       		.byte	0xd4
 2383 01ea AC010000 		.4byte	0x1ac
 2384 01ee 09       		.uleb128 0x9
 2385 01ef B8000000 		.4byte	.LASF38
 2386 01f3 08       		.byte	0x8
 2387 01f4 07       		.byte	0x7
 2388 01f5 87       		.byte	0x87
 2389 01f6 13020000 		.4byte	0x213
 2390 01fa 0A       		.uleb128 0xa
 2391 01fb 34010000 		.4byte	.LASF39
 2392 01ff 07       		.byte	0x7
 2393 0200 89       		.byte	0x89
 2394 0201 EF000000 		.4byte	0xef
 2395 0205 00       		.byte	0
 2396 0206 0A       		.uleb128 0xa
 2397 0207 90050000 		.4byte	.LASF40
 2398 020b 07       		.byte	0x7
 2399 020c 8A       		.byte	0x8a
 2400 020d 05010000 		.4byte	0x105
 2401 0211 04       		.byte	0x4
 2402 0212 00       		.byte	0
 2403 0213 02       		.uleb128 0x2
 2404 0214 D0050000 		.4byte	.LASF41
 2405 0218 07       		.byte	0x7
 2406 0219 8B       		.byte	0x8b
 2407 021a EE010000 		.4byte	0x1ee
 2408 021e 02       		.uleb128 0x2
 2409 021f C8040000 		.4byte	.LASF42
 2410 0223 08       		.byte	0x8
 2411 0224 58       		.byte	0x58
 2412 0225 A5000000 		.4byte	0xa5
 2413 0229 0B       		.uleb128 0xb
 2414 022a 04       		.byte	0x4
 2415 022b 01       		.byte	0x1
 2416 022c 88       		.byte	0x88
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 90


 2417 022d 48020000 		.4byte	0x248
 2418 0231 0C       		.uleb128 0xc
 2419 0232 96010000 		.4byte	.LASF43
 2420 0236 01       		.byte	0x1
 2421 0237 8A       		.byte	0x8a
 2422 0238 48020000 		.4byte	0x248
 2423 023c 0C       		.uleb128 0xc
 2424 023d 78070000 		.4byte	.LASF44
 2425 0241 01       		.byte	0x1
 2426 0242 8B       		.byte	0x8b
 2427 0243 FA000000 		.4byte	0xfa
 2428 0247 00       		.byte	0
 2429 0248 06       		.uleb128 0x6
 2430 0249 04       		.byte	0x4
 2431 024a C0000000 		.4byte	0xc0
 2432 024e 09       		.uleb128 0x9
 2433 024f 65020000 		.4byte	.LASF45
 2434 0253 48       		.byte	0x48
 2435 0254 01       		.byte	0x1
 2436 0255 82       		.byte	0x82
 2437 0256 DD020000 		.4byte	0x2dd
 2438 025a 0A       		.uleb128 0xa
 2439 025b 27080000 		.4byte	.LASF46
 2440 025f 01       		.byte	0x1
 2441 0260 84       		.byte	0x84
 2442 0261 48020000 		.4byte	0x248
 2443 0265 00       		.byte	0
 2444 0266 0A       		.uleb128 0xa
 2445 0267 2B070000 		.4byte	.LASF47
 2446 026b 01       		.byte	0x1
 2447 026c 85       		.byte	0x85
 2448 026d 48020000 		.4byte	0x248
 2449 0271 04       		.byte	0x4
 2450 0272 0A       		.uleb128 0xa
 2451 0273 11060000 		.4byte	.LASF48
 2452 0277 01       		.byte	0x1
 2453 0278 86       		.byte	0x86
 2454 0279 48020000 		.4byte	0x248
 2455 027d 08       		.byte	0x8
 2456 027e 0D       		.uleb128 0xd
 2457 027f 7500     		.ascii	"u\000"
 2458 0281 01       		.byte	0x1
 2459 0282 8C       		.byte	0x8c
 2460 0283 29020000 		.4byte	0x229
 2461 0287 0C       		.byte	0xc
 2462 0288 0A       		.uleb128 0xa
 2463 0289 01010000 		.4byte	.LASF49
 2464 028d 01       		.byte	0x1
 2465 028e 8E       		.byte	0x8e
 2466 028f E3010000 		.4byte	0x1e3
 2467 0293 10       		.byte	0x10
 2468 0294 0A       		.uleb128 0xa
 2469 0295 55000000 		.4byte	.LASF50
 2470 0299 01       		.byte	0x1
 2471 029a 8F       		.byte	0x8f
 2472 029b E3010000 		.4byte	0x1e3
 2473 029f 24       		.byte	0x24
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 91


 2474 02a0 0A       		.uleb128 0xa
 2475 02a1 C5020000 		.4byte	.LASF51
 2476 02a5 01       		.byte	0x1
 2477 02a6 91       		.byte	0x91
 2478 02a7 DD020000 		.4byte	0x2dd
 2479 02ab 38       		.byte	0x38
 2480 02ac 0A       		.uleb128 0xa
 2481 02ad 86060000 		.4byte	.LASF52
 2482 02b1 01       		.byte	0x1
 2483 02b2 92       		.byte	0x92
 2484 02b3 FA000000 		.4byte	0xfa
 2485 02b7 3C       		.byte	0x3c
 2486 02b8 0A       		.uleb128 0xa
 2487 02b9 3C040000 		.4byte	.LASF53
 2488 02bd 01       		.byte	0x1
 2489 02be 93       		.byte	0x93
 2490 02bf FA000000 		.4byte	0xfa
 2491 02c3 40       		.byte	0x40
 2492 02c4 0A       		.uleb128 0xa
 2493 02c5 C3080000 		.4byte	.LASF54
 2494 02c9 01       		.byte	0x1
 2495 02ca 95       		.byte	0x95
 2496 02cb E2020000 		.4byte	0x2e2
 2497 02cf 44       		.byte	0x44
 2498 02d0 0A       		.uleb128 0xa
 2499 02d1 2C010000 		.4byte	.LASF55
 2500 02d5 01       		.byte	0x1
 2501 02d6 96       		.byte	0x96
 2502 02d7 E2020000 		.4byte	0x2e2
 2503 02db 45       		.byte	0x45
 2504 02dc 00       		.byte	0
 2505 02dd 0E       		.uleb128 0xe
 2506 02de FA000000 		.4byte	0xfa
 2507 02e2 0E       		.uleb128 0xe
 2508 02e3 C0000000 		.4byte	0xc0
 2509 02e7 02       		.uleb128 0x2
 2510 02e8 AB080000 		.4byte	.LASF56
 2511 02ec 01       		.byte	0x1
 2512 02ed A5       		.byte	0xa5
 2513 02ee 4E020000 		.4byte	0x24e
 2514 02f2 02       		.uleb128 0x2
 2515 02f3 56010000 		.4byte	.LASF57
 2516 02f7 01       		.byte	0x1
 2517 02f8 A9       		.byte	0xa9
 2518 02f9 E7020000 		.4byte	0x2e7
 2519 02fd 09       		.uleb128 0x9
 2520 02fe D8000000 		.4byte	.LASF58
 2521 0302 08       		.byte	0x8
 2522 0303 01       		.byte	0x1
 2523 0304 B6       		.byte	0xb6
 2524 0305 22030000 		.4byte	0x322
 2525 0309 0A       		.uleb128 0xa
 2526 030a A8030000 		.4byte	.LASF59
 2527 030e 01       		.byte	0x1
 2528 030f B8       		.byte	0xb8
 2529 0310 AE000000 		.4byte	0xae
 2530 0314 00       		.byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 92


 2531 0315 0A       		.uleb128 0xa
 2532 0316 A0030000 		.4byte	.LASF60
 2533 031a 01       		.byte	0x1
 2534 031b B9       		.byte	0xb9
 2535 031c 1E020000 		.4byte	0x21e
 2536 0320 04       		.byte	0x4
 2537 0321 00       		.byte	0
 2538 0322 02       		.uleb128 0x2
 2539 0323 14050000 		.4byte	.LASF61
 2540 0327 01       		.byte	0x1
 2541 0328 BA       		.byte	0xba
 2542 0329 FD020000 		.4byte	0x2fd
 2543 032d 02       		.uleb128 0x2
 2544 032e 75010000 		.4byte	.LASF62
 2545 0332 01       		.byte	0x1
 2546 0333 BF       		.byte	0xbf
 2547 0334 22030000 		.4byte	0x322
 2548 0338 0F       		.uleb128 0xf
 2549 0339 8C040000 		.4byte	.LASF63
 2550 033d 01       		.byte	0x1
 2551 033e A107     		.2byte	0x7a1
 2552 0340 EF000000 		.4byte	0xef
 2553 0344 00000000 		.4byte	.LFB55
 2554 0348 1E000000 		.4byte	.LFE55-.LFB55
 2555 034c 01       		.uleb128 0x1
 2556 034d 9C       		.byte	0x9c
 2557 034e 85030000 		.4byte	0x385
 2558 0352 10       		.uleb128 0x10
 2559 0353 3C070000 		.4byte	.LASF65
 2560 0357 01       		.byte	0x1
 2561 0358 A107     		.2byte	0x7a1
 2562 035a 85030000 		.4byte	0x385
 2563 035e 00000000 		.4byte	.LLST0
 2564 0362 11       		.uleb128 0x11
 2565 0363 44070000 		.4byte	.LASF66
 2566 0367 01       		.byte	0x1
 2567 0368 A307     		.2byte	0x7a3
 2568 036a EF000000 		.4byte	0xef
 2569 036e 45000000 		.4byte	.LLST1
 2570 0372 12       		.uleb128 0x12
 2571 0373 08000000 		.4byte	.LVL1
 2572 0377 76130000 		.4byte	0x1376
 2573 037b 12       		.uleb128 0x12
 2574 037c 1A000000 		.4byte	.LVL5
 2575 0380 81130000 		.4byte	0x1381
 2576 0384 00       		.byte	0
 2577 0385 06       		.uleb128 0x6
 2578 0386 04       		.byte	0x4
 2579 0387 8B030000 		.4byte	0x38b
 2580 038b 07       		.uleb128 0x7
 2581 038c F2020000 		.4byte	0x2f2
 2582 0390 0F       		.uleb128 0xf
 2583 0391 A1020000 		.4byte	.LASF64
 2584 0395 01       		.byte	0x1
 2585 0396 7A07     		.2byte	0x77a
 2586 0398 EF000000 		.4byte	0xef
 2587 039c 00000000 		.4byte	.LFB53
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 93


 2588 03a0 1C000000 		.4byte	.LFE53-.LFB53
 2589 03a4 01       		.uleb128 0x1
 2590 03a5 9C       		.byte	0x9c
 2591 03a6 DD030000 		.4byte	0x3dd
 2592 03aa 10       		.uleb128 0x10
 2593 03ab 3C070000 		.4byte	.LASF65
 2594 03af 01       		.byte	0x1
 2595 03b0 7A07     		.2byte	0x77a
 2596 03b2 85030000 		.4byte	0x385
 2597 03b6 63000000 		.4byte	.LLST2
 2598 03ba 11       		.uleb128 0x11
 2599 03bb 44070000 		.4byte	.LASF66
 2600 03bf 01       		.byte	0x1
 2601 03c0 7C07     		.2byte	0x77c
 2602 03c2 EF000000 		.4byte	0xef
 2603 03c6 A8000000 		.4byte	.LLST3
 2604 03ca 12       		.uleb128 0x12
 2605 03cb 08000000 		.4byte	.LVL8
 2606 03cf 76130000 		.4byte	0x1376
 2607 03d3 12       		.uleb128 0x12
 2608 03d4 18000000 		.4byte	.LVL12
 2609 03d8 81130000 		.4byte	0x1381
 2610 03dc 00       		.byte	0
 2611 03dd 0F       		.uleb128 0xf
 2612 03de E3030000 		.4byte	.LASF67
 2613 03e2 01       		.byte	0x1
 2614 03e3 A106     		.2byte	0x6a1
 2615 03e5 EF000000 		.4byte	0xef
 2616 03e9 00000000 		.4byte	.LFB50
 2617 03ed 82000000 		.4byte	.LFE50-.LFB50
 2618 03f1 01       		.uleb128 0x1
 2619 03f2 9C       		.byte	0x9c
 2620 03f3 63040000 		.4byte	0x463
 2621 03f7 10       		.uleb128 0x10
 2622 03f8 3C070000 		.4byte	.LASF65
 2623 03fc 01       		.byte	0x1
 2624 03fd A106     		.2byte	0x6a1
 2625 03ff 69040000 		.4byte	0x469
 2626 0403 C6000000 		.4byte	.LLST4
 2627 0407 10       		.uleb128 0x10
 2628 0408 CE060000 		.4byte	.LASF68
 2629 040c 01       		.byte	0x1
 2630 040d A106     		.2byte	0x6a1
 2631 040f B9000000 		.4byte	0xb9
 2632 0413 34010000 		.4byte	.LLST5
 2633 0417 10       		.uleb128 0x10
 2634 0418 B9080000 		.4byte	.LASF69
 2635 041c 01       		.byte	0x1
 2636 041d A106     		.2byte	0x6a1
 2637 041f 6E040000 		.4byte	0x46e
 2638 0423 A0010000 		.4byte	.LLST6
 2639 0427 11       		.uleb128 0x11
 2640 0428 44070000 		.4byte	.LASF66
 2641 042c 01       		.byte	0x1
 2642 042d A306     		.2byte	0x6a3
 2643 042f EF000000 		.4byte	0xef
 2644 0433 CC010000 		.4byte	.LLST7
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 94


 2645 0437 11       		.uleb128 0x11
 2646 0438 C5020000 		.4byte	.LASF51
 2647 043c 01       		.byte	0x1
 2648 043d A406     		.2byte	0x6a4
 2649 043f FA000000 		.4byte	0xfa
 2650 0443 02020000 		.4byte	.LLST8
 2651 0447 12       		.uleb128 0x12
 2652 0448 1A000000 		.4byte	.LVL19
 2653 044c 8C130000 		.4byte	0x138c
 2654 0450 12       		.uleb128 0x12
 2655 0451 2A000000 		.4byte	.LVL22
 2656 0455 98130000 		.4byte	0x1398
 2657 0459 12       		.uleb128 0x12
 2658 045a 48000000 		.4byte	.LVL25
 2659 045e 98130000 		.4byte	0x1398
 2660 0462 00       		.byte	0
 2661 0463 06       		.uleb128 0x6
 2662 0464 04       		.byte	0x4
 2663 0465 F2020000 		.4byte	0x2f2
 2664 0469 07       		.uleb128 0x7
 2665 046a 63040000 		.4byte	0x463
 2666 046e 07       		.uleb128 0x7
 2667 046f EF000000 		.4byte	0xef
 2668 0473 13       		.uleb128 0x13
 2669 0474 C8070000 		.4byte	.LASF71
 2670 0478 01       		.byte	0x1
 2671 0479 F006     		.2byte	0x6f0
 2672 047b 00000000 		.4byte	.LFB51
 2673 047f 24000000 		.4byte	.LFE51-.LFB51
 2674 0483 01       		.uleb128 0x1
 2675 0484 9C       		.byte	0x9c
 2676 0485 BA040000 		.4byte	0x4ba
 2677 0489 10       		.uleb128 0x10
 2678 048a 3C070000 		.4byte	.LASF65
 2679 048e 01       		.byte	0x1
 2680 048f F006     		.2byte	0x6f0
 2681 0491 69040000 		.4byte	0x469
 2682 0495 35020000 		.4byte	.LLST9
 2683 0499 10       		.uleb128 0x10
 2684 049a B1020000 		.4byte	.LASF70
 2685 049e 01       		.byte	0x1
 2686 049f F006     		.2byte	0x6f0
 2687 04a1 BA040000 		.4byte	0x4ba
 2688 04a5 56020000 		.4byte	.LLST10
 2689 04a9 14       		.uleb128 0x14
 2690 04aa 22000000 		.4byte	.LVL38
 2691 04ae 98130000 		.4byte	0x1398
 2692 04b2 15       		.uleb128 0x15
 2693 04b3 01       		.uleb128 0x1
 2694 04b4 50       		.byte	0x50
 2695 04b5 02       		.uleb128 0x2
 2696 04b6 74       		.byte	0x74
 2697 04b7 00       		.sleb128 0
 2698 04b8 00       		.byte	0
 2699 04b9 00       		.byte	0
 2700 04ba 07       		.uleb128 0x7
 2701 04bb A5000000 		.4byte	0xa5
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 95


 2702 04bf 13       		.uleb128 0x13
 2703 04c0 47080000 		.4byte	.LASF72
 2704 04c4 01       		.byte	0x1
 2705 04c5 0207     		.2byte	0x702
 2706 04c7 00000000 		.4byte	.LFB52
 2707 04cb 6E000000 		.4byte	.LFE52-.LFB52
 2708 04cf 01       		.uleb128 0x1
 2709 04d0 9C       		.byte	0x9c
 2710 04d1 80050000 		.4byte	0x580
 2711 04d5 10       		.uleb128 0x10
 2712 04d6 3C070000 		.4byte	.LASF65
 2713 04da 01       		.byte	0x1
 2714 04db 0207     		.2byte	0x702
 2715 04dd 69040000 		.4byte	0x469
 2716 04e1 82020000 		.4byte	.LLST11
 2717 04e5 16       		.uleb128 0x16
 2718 04e6 08000000 		.4byte	.LBB2
 2719 04ea 2C000000 		.4byte	.LBE2-.LBB2
 2720 04ee 20050000 		.4byte	0x520
 2721 04f2 11       		.uleb128 0x11
 2722 04f3 2C010000 		.4byte	.LASF55
 2723 04f7 01       		.byte	0x1
 2724 04f8 0C07     		.2byte	0x70c
 2725 04fa C0000000 		.4byte	0xc0
 2726 04fe AE020000 		.4byte	.LLST12
 2727 0502 17       		.uleb128 0x17
 2728 0503 1E000000 		.4byte	.LVL43
 2729 0507 A1130000 		.4byte	0x13a1
 2730 050b 16050000 		.4byte	0x516
 2731 050f 15       		.uleb128 0x15
 2732 0510 01       		.uleb128 0x1
 2733 0511 50       		.byte	0x50
 2734 0512 02       		.uleb128 0x2
 2735 0513 75       		.byte	0x75
 2736 0514 24       		.sleb128 36
 2737 0515 00       		.byte	0
 2738 0516 12       		.uleb128 0x12
 2739 0517 26000000 		.4byte	.LVL44
 2740 051b AD130000 		.4byte	0x13ad
 2741 051f 00       		.byte	0
 2742 0520 16       		.uleb128 0x16
 2743 0521 3C000000 		.4byte	.LBB3
 2744 0525 2C000000 		.4byte	.LBE3-.LBB3
 2745 0529 5B050000 		.4byte	0x55b
 2746 052d 11       		.uleb128 0x11
 2747 052e C3080000 		.4byte	.LASF54
 2748 0532 01       		.byte	0x1
 2749 0533 5D07     		.2byte	0x75d
 2750 0535 C0000000 		.4byte	0xc0
 2751 0539 CC020000 		.4byte	.LLST13
 2752 053d 17       		.uleb128 0x17
 2753 053e 52000000 		.4byte	.LVL51
 2754 0542 A1130000 		.4byte	0x13a1
 2755 0546 51050000 		.4byte	0x551
 2756 054a 15       		.uleb128 0x15
 2757 054b 01       		.uleb128 0x1
 2758 054c 50       		.byte	0x50
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 96


 2759 054d 02       		.uleb128 0x2
 2760 054e 75       		.byte	0x75
 2761 054f 10       		.sleb128 16
 2762 0550 00       		.byte	0
 2763 0551 12       		.uleb128 0x12
 2764 0552 5A000000 		.4byte	.LVL52
 2765 0556 AD130000 		.4byte	0x13ad
 2766 055a 00       		.byte	0
 2767 055b 12       		.uleb128 0x12
 2768 055c 08000000 		.4byte	.LVL41
 2769 0560 76130000 		.4byte	0x1376
 2770 0564 12       		.uleb128 0x12
 2771 0565 38000000 		.4byte	.LVL47
 2772 0569 81130000 		.4byte	0x1381
 2773 056d 12       		.uleb128 0x12
 2774 056e 3C000000 		.4byte	.LVL48
 2775 0572 76130000 		.4byte	0x1376
 2776 0576 12       		.uleb128 0x12
 2777 0577 6C000000 		.4byte	.LVL55
 2778 057b 81130000 		.4byte	0x1381
 2779 057f 00       		.byte	0
 2780 0580 18       		.uleb128 0x18
 2781 0581 22000000 		.4byte	.LASF80
 2782 0585 01       		.byte	0x1
 2783 0586 1701     		.2byte	0x117
 2784 0588 EF000000 		.4byte	0xef
 2785 058c 00000000 		.4byte	.LFB32
 2786 0590 64000000 		.4byte	.LFE32-.LFB32
 2787 0594 01       		.uleb128 0x1
 2788 0595 9C       		.byte	0x9c
 2789 0596 22060000 		.4byte	0x622
 2790 059a 10       		.uleb128 0x10
 2791 059b 0F020000 		.4byte	.LASF73
 2792 059f 01       		.byte	0x1
 2793 05a0 1701     		.2byte	0x117
 2794 05a2 1E020000 		.4byte	0x21e
 2795 05a6 EA020000 		.4byte	.LLST14
 2796 05aa 10       		.uleb128 0x10
 2797 05ab BB050000 		.4byte	.LASF74
 2798 05af 01       		.byte	0x1
 2799 05b0 1701     		.2byte	0x117
 2800 05b2 EF000000 		.4byte	0xef
 2801 05b6 16030000 		.4byte	.LLST15
 2802 05ba 11       		.uleb128 0x11
 2803 05bb 3C070000 		.4byte	.LASF65
 2804 05bf 01       		.byte	0x1
 2805 05c0 1901     		.2byte	0x119
 2806 05c2 69040000 		.4byte	0x469
 2807 05c6 42030000 		.4byte	.LLST16
 2808 05ca 12       		.uleb128 0x12
 2809 05cb 0A000000 		.4byte	.LVL60
 2810 05cf 76130000 		.4byte	0x1376
 2811 05d3 17       		.uleb128 0x17
 2812 05d4 42000000 		.4byte	.LVL61
 2813 05d8 A1130000 		.4byte	0x13a1
 2814 05dc E7050000 		.4byte	0x5e7
 2815 05e0 15       		.uleb128 0x15
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 97


 2816 05e1 01       		.uleb128 0x1
 2817 05e2 50       		.byte	0x50
 2818 05e3 02       		.uleb128 0x2
 2819 05e4 74       		.byte	0x74
 2820 05e5 10       		.sleb128 16
 2821 05e6 00       		.byte	0
 2822 05e7 12       		.uleb128 0x12
 2823 05e8 4A000000 		.4byte	.LVL62
 2824 05ec B9130000 		.4byte	0x13b9
 2825 05f0 17       		.uleb128 0x17
 2826 05f1 54000000 		.4byte	.LVL63
 2827 05f5 C4130000 		.4byte	0x13c4
 2828 05f9 04060000 		.4byte	0x604
 2829 05fd 15       		.uleb128 0x15
 2830 05fe 01       		.uleb128 0x1
 2831 05ff 50       		.byte	0x50
 2832 0600 02       		.uleb128 0x2
 2833 0601 74       		.byte	0x74
 2834 0602 10       		.sleb128 16
 2835 0603 00       		.byte	0
 2836 0604 17       		.uleb128 0x17
 2837 0605 5C000000 		.4byte	.LVL64
 2838 0609 C4130000 		.4byte	0x13c4
 2839 060d 18060000 		.4byte	0x618
 2840 0611 15       		.uleb128 0x15
 2841 0612 01       		.uleb128 0x1
 2842 0613 50       		.byte	0x50
 2843 0614 02       		.uleb128 0x2
 2844 0615 74       		.byte	0x74
 2845 0616 24       		.sleb128 36
 2846 0617 00       		.byte	0
 2847 0618 12       		.uleb128 0x12
 2848 0619 60000000 		.4byte	.LVL65
 2849 061d 81130000 		.4byte	0x1381
 2850 0621 00       		.byte	0
 2851 0622 13       		.uleb128 0x13
 2852 0623 CE010000 		.4byte	.LASF75
 2853 0627 01       		.byte	0x1
 2854 0628 B001     		.2byte	0x1b0
 2855 062a 00000000 		.4byte	.LFB34
 2856 062e 1C000000 		.4byte	.LFE34-.LFB34
 2857 0632 01       		.uleb128 0x1
 2858 0633 9C       		.byte	0x9c
 2859 0634 9E060000 		.4byte	0x69e
 2860 0638 10       		.uleb128 0x10
 2861 0639 2F060000 		.4byte	.LASF76
 2862 063d 01       		.byte	0x1
 2863 063e B001     		.2byte	0x1b0
 2864 0640 9E060000 		.4byte	0x69e
 2865 0644 6E030000 		.4byte	.LLST17
 2866 0648 10       		.uleb128 0x10
 2867 0649 3C040000 		.4byte	.LASF53
 2868 064d 01       		.byte	0x1
 2869 064e B001     		.2byte	0x1b0
 2870 0650 9E060000 		.4byte	0x69e
 2871 0654 9B030000 		.4byte	.LLST18
 2872 0658 10       		.uleb128 0x10
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 98


 2873 0659 79050000 		.4byte	.LASF77
 2874 065d 01       		.byte	0x1
 2875 065e B001     		.2byte	0x1b0
 2876 0660 10010000 		.4byte	0x110
 2877 0664 C9030000 		.4byte	.LLST19
 2878 0668 10       		.uleb128 0x10
 2879 0669 F1050000 		.4byte	.LASF78
 2880 066d 01       		.byte	0x1
 2881 066e B001     		.2byte	0x1b0
 2882 0670 A3060000 		.4byte	0x6a3
 2883 0674 EA030000 		.4byte	.LLST20
 2884 0678 19       		.uleb128 0x19
 2885 0679 C2000000 		.4byte	.LASF79
 2886 067d 01       		.byte	0x1
 2887 067e B001     		.2byte	0x1b0
 2888 0680 63040000 		.4byte	0x463
 2889 0684 02       		.uleb128 0x2
 2890 0685 91       		.byte	0x91
 2891 0686 00       		.sleb128 0
 2892 0687 14       		.uleb128 0x14
 2893 0688 1A000000 		.4byte	.LVL72
 2894 068c 80050000 		.4byte	0x580
 2895 0690 15       		.uleb128 0x15
 2896 0691 01       		.uleb128 0x1
 2897 0692 50       		.byte	0x50
 2898 0693 03       		.uleb128 0x3
 2899 0694 91       		.byte	0x91
 2900 0695 00       		.sleb128 0
 2901 0696 06       		.byte	0x6
 2902 0697 15       		.uleb128 0x15
 2903 0698 01       		.uleb128 0x1
 2904 0699 51       		.byte	0x51
 2905 069a 01       		.uleb128 0x1
 2906 069b 31       		.byte	0x31
 2907 069c 00       		.byte	0
 2908 069d 00       		.byte	0
 2909 069e 07       		.uleb128 0x7
 2910 069f FA000000 		.4byte	0xfa
 2911 06a3 07       		.uleb128 0x7
 2912 06a4 CB000000 		.4byte	0xcb
 2913 06a8 18       		.uleb128 0x18
 2914 06a9 27050000 		.4byte	.LASF81
 2915 06ad 01       		.byte	0x1
 2916 06ae 8201     		.2byte	0x182
 2917 06b0 1E020000 		.4byte	0x21e
 2918 06b4 00000000 		.4byte	.LFB33
 2919 06b8 34000000 		.4byte	.LFE33-.LFB33
 2920 06bc 01       		.uleb128 0x1
 2921 06bd 9C       		.byte	0x9c
 2922 06be 54070000 		.4byte	0x754
 2923 06c2 10       		.uleb128 0x10
 2924 06c3 2F060000 		.4byte	.LASF76
 2925 06c7 01       		.byte	0x1
 2926 06c8 8201     		.2byte	0x182
 2927 06ca 9E060000 		.4byte	0x69e
 2928 06ce 0B040000 		.4byte	.LLST21
 2929 06d2 10       		.uleb128 0x10
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 99


 2930 06d3 3C040000 		.4byte	.LASF53
 2931 06d7 01       		.byte	0x1
 2932 06d8 8201     		.2byte	0x182
 2933 06da 9E060000 		.4byte	0x69e
 2934 06de 4D040000 		.4byte	.LLST22
 2935 06e2 10       		.uleb128 0x10
 2936 06e3 F1050000 		.4byte	.LASF78
 2937 06e7 01       		.byte	0x1
 2938 06e8 8201     		.2byte	0x182
 2939 06ea A3060000 		.4byte	0x6a3
 2940 06ee 79040000 		.4byte	.LLST23
 2941 06f2 11       		.uleb128 0x11
 2942 06f3 C2000000 		.4byte	.LASF79
 2943 06f7 01       		.byte	0x1
 2944 06f8 8401     		.2byte	0x184
 2945 06fa 63040000 		.4byte	0x463
 2946 06fe 9A040000 		.4byte	.LLST24
 2947 0702 11       		.uleb128 0x11
 2948 0703 AD060000 		.4byte	.LASF82
 2949 0707 01       		.byte	0x1
 2950 0708 8501     		.2byte	0x185
 2951 070a 25000000 		.4byte	0x25
 2952 070e C3040000 		.4byte	.LLST25
 2953 0712 1A       		.uleb128 0x1a
 2954 0713 79050000 		.4byte	.LASF77
 2955 0717 01       		.byte	0x1
 2956 0718 8601     		.2byte	0x186
 2957 071a 10010000 		.4byte	0x110
 2958 071e 01       		.uleb128 0x1
 2959 071f 52       		.byte	0x52
 2960 0720 12       		.uleb128 0x12
 2961 0721 1A000000 		.4byte	.LVL78
 2962 0725 D0130000 		.4byte	0x13d0
 2963 0729 14       		.uleb128 0x14
 2964 072a 2E000000 		.4byte	.LVL81
 2965 072e 22060000 		.4byte	0x622
 2966 0732 15       		.uleb128 0x15
 2967 0733 01       		.uleb128 0x1
 2968 0734 50       		.byte	0x50
 2969 0735 02       		.uleb128 0x2
 2970 0736 75       		.byte	0x75
 2971 0737 00       		.sleb128 0
 2972 0738 15       		.uleb128 0x15
 2973 0739 01       		.uleb128 0x1
 2974 073a 51       		.byte	0x51
 2975 073b 02       		.uleb128 0x2
 2976 073c 77       		.byte	0x77
 2977 073d 00       		.sleb128 0
 2978 073e 15       		.uleb128 0x15
 2979 073f 01       		.uleb128 0x1
 2980 0740 52       		.byte	0x52
 2981 0741 03       		.uleb128 0x3
 2982 0742 74       		.byte	0x74
 2983 0743 C800     		.sleb128 72
 2984 0745 15       		.uleb128 0x15
 2985 0746 01       		.uleb128 0x1
 2986 0747 53       		.byte	0x53
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 100


 2987 0748 02       		.uleb128 0x2
 2988 0749 76       		.byte	0x76
 2989 074a 00       		.sleb128 0
 2990 074b 15       		.uleb128 0x15
 2991 074c 02       		.uleb128 0x2
 2992 074d 7D       		.byte	0x7d
 2993 074e 00       		.sleb128 0
 2994 074f 02       		.uleb128 0x2
 2995 0750 74       		.byte	0x74
 2996 0751 00       		.sleb128 0
 2997 0752 00       		.byte	0
 2998 0753 00       		.byte	0
 2999 0754 18       		.uleb128 0x18
 3000 0755 FE080000 		.4byte	.LASF83
 3001 0759 01       		.byte	0x1
 3002 075a B902     		.2byte	0x2b9
 3003 075c 1E020000 		.4byte	0x21e
 3004 0760 00000000 		.4byte	.LFB39
 3005 0764 14000000 		.4byte	.LFE39-.LFB39
 3006 0768 01       		.uleb128 0x1
 3007 0769 9C       		.byte	0x9c
 3008 076a B8070000 		.4byte	0x7b8
 3009 076e 10       		.uleb128 0x10
 3010 076f C5050000 		.4byte	.LASF84
 3011 0773 01       		.byte	0x1
 3012 0774 B902     		.2byte	0x2b9
 3013 0776 9E060000 		.4byte	0x69e
 3014 077a EF040000 		.4byte	.LLST26
 3015 077e 10       		.uleb128 0x10
 3016 077f 47040000 		.4byte	.LASF85
 3017 0783 01       		.byte	0x1
 3018 0784 B902     		.2byte	0x2b9
 3019 0786 9E060000 		.4byte	0x69e
 3020 078a 10050000 		.4byte	.LLST27
 3021 078e 1A       		.uleb128 0x1a
 3022 078f A0030000 		.4byte	.LASF60
 3023 0793 01       		.byte	0x1
 3024 0794 BB02     		.2byte	0x2bb
 3025 0796 1E020000 		.4byte	0x21e
 3026 079a 01       		.uleb128 0x1
 3027 079b 50       		.byte	0x50
 3028 079c 14       		.uleb128 0x14
 3029 079d 0C000000 		.4byte	.LVL87
 3030 07a1 A8060000 		.4byte	0x6a8
 3031 07a5 15       		.uleb128 0x15
 3032 07a6 01       		.uleb128 0x1
 3033 07a7 50       		.byte	0x50
 3034 07a8 03       		.uleb128 0x3
 3035 07a9 F3       		.byte	0xf3
 3036 07aa 01       		.uleb128 0x1
 3037 07ab 50       		.byte	0x50
 3038 07ac 15       		.uleb128 0x15
 3039 07ad 01       		.uleb128 0x1
 3040 07ae 51       		.byte	0x51
 3041 07af 01       		.uleb128 0x1
 3042 07b0 30       		.byte	0x30
 3043 07b1 15       		.uleb128 0x15
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 101


 3044 07b2 01       		.uleb128 0x1
 3045 07b3 52       		.byte	0x52
 3046 07b4 01       		.uleb128 0x1
 3047 07b5 32       		.byte	0x32
 3048 07b6 00       		.byte	0
 3049 07b7 00       		.byte	0
 3050 07b8 18       		.uleb128 0x18
 3051 07b9 F6030000 		.4byte	.LASF86
 3052 07bd 01       		.byte	0x1
 3053 07be D302     		.2byte	0x2d3
 3054 07c0 EF000000 		.4byte	0xef
 3055 07c4 00000000 		.4byte	.LFB40
 3056 07c8 EA000000 		.4byte	.LFE40-.LFB40
 3057 07cc 01       		.uleb128 0x1
 3058 07cd 9C       		.byte	0x9c
 3059 07ce 8D090000 		.4byte	0x98d
 3060 07d2 10       		.uleb128 0x10
 3061 07d3 0F020000 		.4byte	.LASF73
 3062 07d7 01       		.byte	0x1
 3063 07d8 D302     		.2byte	0x2d3
 3064 07da 1E020000 		.4byte	0x21e
 3065 07de 3C050000 		.4byte	.LLST28
 3066 07e2 10       		.uleb128 0x10
 3067 07e3 CE060000 		.4byte	.LASF68
 3068 07e7 01       		.byte	0x1
 3069 07e8 D302     		.2byte	0x2d3
 3070 07ea 8D090000 		.4byte	0x98d
 3071 07ee 68050000 		.4byte	.LLST29
 3072 07f2 10       		.uleb128 0x10
 3073 07f3 DD070000 		.4byte	.LASF87
 3074 07f7 01       		.byte	0x1
 3075 07f8 D302     		.2byte	0x2d3
 3076 07fa 05010000 		.4byte	0x105
 3077 07fe 94050000 		.4byte	.LLST30
 3078 0802 10       		.uleb128 0x10
 3079 0803 5E010000 		.4byte	.LASF88
 3080 0807 01       		.byte	0x1
 3081 0808 D302     		.2byte	0x2d3
 3082 080a 6E040000 		.4byte	0x46e
 3083 080e CB050000 		.4byte	.LLST31
 3084 0812 11       		.uleb128 0x11
 3085 0813 82030000 		.4byte	.LASF89
 3086 0817 01       		.byte	0x1
 3087 0818 D502     		.2byte	0x2d5
 3088 081a EF000000 		.4byte	0xef
 3089 081e F7050000 		.4byte	.LLST32
 3090 0822 11       		.uleb128 0x11
 3091 0823 00020000 		.4byte	.LASF90
 3092 0827 01       		.byte	0x1
 3093 0828 D502     		.2byte	0x2d5
 3094 082a EF000000 		.4byte	0xef
 3095 082e 2D060000 		.4byte	.LLST33
 3096 0832 1A       		.uleb128 0x1a
 3097 0833 97030000 		.4byte	.LASF91
 3098 0837 01       		.byte	0x1
 3099 0838 D602     		.2byte	0x2d6
 3100 083a 13020000 		.4byte	0x213
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 102


 3101 083e 02       		.uleb128 0x2
 3102 083f 91       		.byte	0x91
 3103 0840 60       		.sleb128 -32
 3104 0841 11       		.uleb128 0x11
 3105 0842 3C070000 		.4byte	.LASF65
 3106 0846 01       		.byte	0x1
 3107 0847 D702     		.2byte	0x2d7
 3108 0849 69040000 		.4byte	0x469
 3109 084d 4B060000 		.4byte	.LLST34
 3110 0851 12       		.uleb128 0x12
 3111 0852 12000000 		.4byte	.LVL92
 3112 0856 76130000 		.4byte	0x1376
 3113 085a 17       		.uleb128 0x17
 3114 085b 28000000 		.4byte	.LVL93
 3115 085f DD030000 		.4byte	0x3dd
 3116 0863 7A080000 		.4byte	0x87a
 3117 0867 15       		.uleb128 0x15
 3118 0868 01       		.uleb128 0x1
 3119 0869 50       		.byte	0x50
 3120 086a 02       		.uleb128 0x2
 3121 086b 74       		.byte	0x74
 3122 086c 00       		.sleb128 0
 3123 086d 15       		.uleb128 0x15
 3124 086e 01       		.uleb128 0x1
 3125 086f 51       		.byte	0x51
 3126 0870 02       		.uleb128 0x2
 3127 0871 75       		.byte	0x75
 3128 0872 00       		.sleb128 0
 3129 0873 15       		.uleb128 0x15
 3130 0874 01       		.uleb128 0x1
 3131 0875 52       		.byte	0x52
 3132 0876 02       		.uleb128 0x2
 3133 0877 77       		.byte	0x77
 3134 0878 00       		.sleb128 0
 3135 0879 00       		.byte	0
 3136 087a 17       		.uleb128 0x17
 3137 087b 36000000 		.4byte	.LVL95
 3138 087f A1130000 		.4byte	0x13a1
 3139 0883 8E080000 		.4byte	0x88e
 3140 0887 15       		.uleb128 0x15
 3141 0888 01       		.uleb128 0x1
 3142 0889 50       		.byte	0x50
 3143 088a 02       		.uleb128 0x2
 3144 088b 74       		.byte	0x74
 3145 088c 24       		.sleb128 36
 3146 088d 00       		.byte	0
 3147 088e 12       		.uleb128 0x12
 3148 088f 3E000000 		.4byte	.LVL96
 3149 0893 B9130000 		.4byte	0x13b9
 3150 0897 12       		.uleb128 0x12
 3151 0898 48000000 		.4byte	.LVL98
 3152 089c B9130000 		.4byte	0x13b9
 3153 08a0 12       		.uleb128 0x12
 3154 08a1 4C000000 		.4byte	.LVL99
 3155 08a5 81130000 		.4byte	0x1381
 3156 08a9 12       		.uleb128 0x12
 3157 08aa 5A000000 		.4byte	.LVL100
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 103


 3158 08ae 81130000 		.4byte	0x1381
 3159 08b2 17       		.uleb128 0x17
 3160 08b3 68000000 		.4byte	.LVL101
 3161 08b7 DB130000 		.4byte	0x13db
 3162 08bb C6080000 		.4byte	0x8c6
 3163 08bf 15       		.uleb128 0x15
 3164 08c0 01       		.uleb128 0x1
 3165 08c1 50       		.byte	0x50
 3166 08c2 02       		.uleb128 0x2
 3167 08c3 91       		.byte	0x91
 3168 08c4 60       		.sleb128 -32
 3169 08c5 00       		.byte	0
 3170 08c6 12       		.uleb128 0x12
 3171 08c7 6E000000 		.4byte	.LVL103
 3172 08cb 81130000 		.4byte	0x1381
 3173 08cf 12       		.uleb128 0x12
 3174 08d0 72000000 		.4byte	.LVL104
 3175 08d4 E7130000 		.4byte	0x13e7
 3176 08d8 12       		.uleb128 0x12
 3177 08d9 76000000 		.4byte	.LVL105
 3178 08dd 76130000 		.4byte	0x1376
 3179 08e1 12       		.uleb128 0x12
 3180 08e2 9A000000 		.4byte	.LVL106
 3181 08e6 81130000 		.4byte	0x1381
 3182 08ea 17       		.uleb128 0x17
 3183 08eb A2000000 		.4byte	.LVL108
 3184 08ef F3130000 		.4byte	0x13f3
 3185 08f3 04090000 		.4byte	0x904
 3186 08f7 15       		.uleb128 0x15
 3187 08f8 01       		.uleb128 0x1
 3188 08f9 50       		.byte	0x50
 3189 08fa 02       		.uleb128 0x2
 3190 08fb 91       		.byte	0x91
 3191 08fc 60       		.sleb128 -32
 3192 08fd 15       		.uleb128 0x15
 3193 08fe 01       		.uleb128 0x1
 3194 08ff 51       		.byte	0x51
 3195 0900 02       		.uleb128 0x2
 3196 0901 91       		.byte	0x91
 3197 0902 5C       		.sleb128 -36
 3198 0903 00       		.byte	0
 3199 0904 17       		.uleb128 0x17
 3200 0905 AC000000 		.4byte	.LVL109
 3201 0909 38030000 		.4byte	0x338
 3202 090d 18090000 		.4byte	0x918
 3203 0911 15       		.uleb128 0x15
 3204 0912 01       		.uleb128 0x1
 3205 0913 50       		.byte	0x50
 3206 0914 02       		.uleb128 0x2
 3207 0915 74       		.byte	0x74
 3208 0916 00       		.sleb128 0
 3209 0917 00       		.byte	0
 3210 0918 17       		.uleb128 0x17
 3211 0919 BA000000 		.4byte	.LVL110
 3212 091d FF130000 		.4byte	0x13ff
 3213 0921 2C090000 		.4byte	0x92c
 3214 0925 15       		.uleb128 0x15
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 104


 3215 0926 01       		.uleb128 0x1
 3216 0927 50       		.byte	0x50
 3217 0928 02       		.uleb128 0x2
 3218 0929 74       		.byte	0x74
 3219 092a 10       		.sleb128 16
 3220 092b 00       		.byte	0
 3221 092c 17       		.uleb128 0x17
 3222 092d C0000000 		.4byte	.LVL111
 3223 0931 BF040000 		.4byte	0x4bf
 3224 0935 40090000 		.4byte	0x940
 3225 0939 15       		.uleb128 0x15
 3226 093a 01       		.uleb128 0x1
 3227 093b 50       		.byte	0x50
 3228 093c 02       		.uleb128 0x2
 3229 093d 74       		.byte	0x74
 3230 093e 00       		.sleb128 0
 3231 093f 00       		.byte	0
 3232 0940 12       		.uleb128 0x12
 3233 0941 C4000000 		.4byte	.LVL112
 3234 0945 0B140000 		.4byte	0x140b
 3235 0949 12       		.uleb128 0x12
 3236 094a CC000000 		.4byte	.LVL113
 3237 094e B9130000 		.4byte	0x13b9
 3238 0952 17       		.uleb128 0x17
 3239 0953 D4000000 		.4byte	.LVL114
 3240 0957 BF040000 		.4byte	0x4bf
 3241 095b 66090000 		.4byte	0x966
 3242 095f 15       		.uleb128 0x15
 3243 0960 01       		.uleb128 0x1
 3244 0961 50       		.byte	0x50
 3245 0962 02       		.uleb128 0x2
 3246 0963 74       		.byte	0x74
 3247 0964 00       		.sleb128 0
 3248 0965 00       		.byte	0
 3249 0966 12       		.uleb128 0x12
 3250 0967 D8000000 		.4byte	.LVL115
 3251 096b 0B140000 		.4byte	0x140b
 3252 096f 17       		.uleb128 0x17
 3253 0970 E0000000 		.4byte	.LVL116
 3254 0974 BF040000 		.4byte	0x4bf
 3255 0978 83090000 		.4byte	0x983
 3256 097c 15       		.uleb128 0x15
 3257 097d 01       		.uleb128 0x1
 3258 097e 50       		.byte	0x50
 3259 097f 02       		.uleb128 0x2
 3260 0980 74       		.byte	0x74
 3261 0981 00       		.sleb128 0
 3262 0982 00       		.byte	0
 3263 0983 12       		.uleb128 0x12
 3264 0984 E4000000 		.4byte	.LVL117
 3265 0988 0B140000 		.4byte	0x140b
 3266 098c 00       		.byte	0
 3267 098d 07       		.uleb128 0x7
 3268 098e B9000000 		.4byte	0xb9
 3269 0992 13       		.uleb128 0x13
 3270 0993 5B050000 		.4byte	.LASF92
 3271 0997 01       		.byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 105


 3272 0998 DC01     		.2byte	0x1dc
 3273 099a 00000000 		.4byte	.LFB35
 3274 099e 18000000 		.4byte	.LFE35-.LFB35
 3275 09a2 01       		.uleb128 0x1
 3276 09a3 9C       		.byte	0x9c
 3277 09a4 D9090000 		.4byte	0x9d9
 3278 09a8 10       		.uleb128 0x10
 3279 09a9 C2000000 		.4byte	.LASF79
 3280 09ad 01       		.byte	0x1
 3281 09ae DC01     		.2byte	0x1dc
 3282 09b0 63040000 		.4byte	0x463
 3283 09b4 77060000 		.4byte	.LLST35
 3284 09b8 14       		.uleb128 0x14
 3285 09b9 16000000 		.4byte	.LVL123
 3286 09bd B8070000 		.4byte	0x7b8
 3287 09c1 15       		.uleb128 0x15
 3288 09c2 01       		.uleb128 0x1
 3289 09c3 50       		.byte	0x50
 3290 09c4 03       		.uleb128 0x3
 3291 09c5 F3       		.byte	0xf3
 3292 09c6 01       		.uleb128 0x1
 3293 09c7 50       		.byte	0x50
 3294 09c8 15       		.uleb128 0x15
 3295 09c9 01       		.uleb128 0x1
 3296 09ca 51       		.byte	0x51
 3297 09cb 01       		.uleb128 0x1
 3298 09cc 30       		.byte	0x30
 3299 09cd 15       		.uleb128 0x15
 3300 09ce 01       		.uleb128 0x1
 3301 09cf 52       		.byte	0x52
 3302 09d0 01       		.uleb128 0x1
 3303 09d1 30       		.byte	0x30
 3304 09d2 15       		.uleb128 0x15
 3305 09d3 01       		.uleb128 0x1
 3306 09d4 53       		.byte	0x53
 3307 09d5 01       		.uleb128 0x1
 3308 09d6 30       		.byte	0x30
 3309 09d7 00       		.byte	0
 3310 09d8 00       		.byte	0
 3311 09d9 18       		.uleb128 0x18
 3312 09da 3B050000 		.4byte	.LASF93
 3313 09de 01       		.byte	0x1
 3314 09df FA01     		.2byte	0x1fa
 3315 09e1 1E020000 		.4byte	0x21e
 3316 09e5 00000000 		.4byte	.LFB36
 3317 09e9 16000000 		.4byte	.LFE36-.LFB36
 3318 09ed 01       		.uleb128 0x1
 3319 09ee 9C       		.byte	0x9c
 3320 09ef 560A0000 		.4byte	0xa56
 3321 09f3 10       		.uleb128 0x10
 3322 09f4 F1050000 		.4byte	.LASF78
 3323 09f8 01       		.byte	0x1
 3324 09f9 FA01     		.2byte	0x1fa
 3325 09fb A3060000 		.4byte	0x6a3
 3326 09ff 98060000 		.4byte	.LLST36
 3327 0a03 11       		.uleb128 0x11
 3328 0a04 C2000000 		.4byte	.LASF79
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 106


 3329 0a08 01       		.byte	0x1
 3330 0a09 FC01     		.2byte	0x1fc
 3331 0a0b 63040000 		.4byte	0x463
 3332 0a0f B9060000 		.4byte	.LLST37
 3333 0a13 1B       		.uleb128 0x1b
 3334 0a14 6E040000 		.4byte	.LASF94
 3335 0a18 01       		.byte	0x1
 3336 0a19 FD01     		.2byte	0x1fd
 3337 0a1b 9E060000 		.4byte	0x69e
 3338 0a1f 01       		.byte	0x1
 3339 0a20 1B       		.uleb128 0x1b
 3340 0a21 F4010000 		.4byte	.LASF95
 3341 0a25 01       		.byte	0x1
 3342 0a26 FD01     		.2byte	0x1fd
 3343 0a28 9E060000 		.4byte	0x69e
 3344 0a2c 00       		.byte	0
 3345 0a2d 17       		.uleb128 0x17
 3346 0a2e 0C000000 		.4byte	.LVL127
 3347 0a32 A8060000 		.4byte	0x6a8
 3348 0a36 450A0000 		.4byte	0xa45
 3349 0a3a 15       		.uleb128 0x15
 3350 0a3b 01       		.uleb128 0x1
 3351 0a3c 50       		.byte	0x50
 3352 0a3d 01       		.uleb128 0x1
 3353 0a3e 31       		.byte	0x31
 3354 0a3f 15       		.uleb128 0x15
 3355 0a40 01       		.uleb128 0x1
 3356 0a41 51       		.byte	0x51
 3357 0a42 01       		.uleb128 0x1
 3358 0a43 30       		.byte	0x30
 3359 0a44 00       		.byte	0
 3360 0a45 14       		.uleb128 0x14
 3361 0a46 12000000 		.4byte	.LVL129
 3362 0a4a 92090000 		.4byte	0x992
 3363 0a4e 15       		.uleb128 0x15
 3364 0a4f 01       		.uleb128 0x1
 3365 0a50 50       		.byte	0x50
 3366 0a51 02       		.uleb128 0x2
 3367 0a52 74       		.byte	0x74
 3368 0a53 00       		.sleb128 0
 3369 0a54 00       		.byte	0
 3370 0a55 00       		.byte	0
 3371 0a56 18       		.uleb128 0x18
 3372 0a57 2E080000 		.4byte	.LASF96
 3373 0a5b 01       		.byte	0x1
 3374 0a5c 3C02     		.2byte	0x23c
 3375 0a5e EF000000 		.4byte	0xef
 3376 0a62 00000000 		.4byte	.LFB37
 3377 0a66 2E000000 		.4byte	.LFE37-.LFB37
 3378 0a6a 01       		.uleb128 0x1
 3379 0a6b 9C       		.byte	0x9c
 3380 0a6c C20A0000 		.4byte	0xac2
 3381 0a70 10       		.uleb128 0x10
 3382 0a71 89050000 		.4byte	.LASF97
 3383 0a75 01       		.byte	0x1
 3384 0a76 3C02     		.2byte	0x23c
 3385 0a78 1E020000 		.4byte	0x21e
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 107


 3386 0a7c E2060000 		.4byte	.LLST38
 3387 0a80 1A       		.uleb128 0x1a
 3388 0a81 44070000 		.4byte	.LASF66
 3389 0a85 01       		.byte	0x1
 3390 0a86 3E02     		.2byte	0x23e
 3391 0a88 EF000000 		.4byte	0xef
 3392 0a8c 01       		.uleb128 0x1
 3393 0a8d 50       		.byte	0x50
 3394 0a8e 11       		.uleb128 0x11
 3395 0a8f 86000000 		.4byte	.LASF98
 3396 0a93 01       		.byte	0x1
 3397 0a94 3F02     		.2byte	0x23f
 3398 0a96 69040000 		.4byte	0x469
 3399 0a9a 0E070000 		.4byte	.LLST39
 3400 0a9e 12       		.uleb128 0x12
 3401 0a9f 0A000000 		.4byte	.LVL133
 3402 0aa3 17140000 		.4byte	0x1417
 3403 0aa7 14       		.uleb128 0x14
 3404 0aa8 22000000 		.4byte	.LVL134
 3405 0aac B8070000 		.4byte	0x7b8
 3406 0ab0 15       		.uleb128 0x15
 3407 0ab1 01       		.uleb128 0x1
 3408 0ab2 50       		.byte	0x50
 3409 0ab3 02       		.uleb128 0x2
 3410 0ab4 74       		.byte	0x74
 3411 0ab5 00       		.sleb128 0
 3412 0ab6 15       		.uleb128 0x15
 3413 0ab7 01       		.uleb128 0x1
 3414 0ab8 51       		.byte	0x51
 3415 0ab9 01       		.uleb128 0x1
 3416 0aba 30       		.byte	0x30
 3417 0abb 15       		.uleb128 0x15
 3418 0abc 01       		.uleb128 0x1
 3419 0abd 52       		.byte	0x52
 3420 0abe 01       		.uleb128 0x1
 3421 0abf 30       		.byte	0x30
 3422 0ac0 00       		.byte	0
 3423 0ac1 00       		.byte	0
 3424 0ac2 18       		.uleb128 0x18
 3425 0ac3 CA030000 		.4byte	.LASF99
 3426 0ac7 01       		.byte	0x1
 3427 0ac8 9903     		.2byte	0x399
 3428 0aca EF000000 		.4byte	0xef
 3429 0ace 00000000 		.4byte	.LFB41
 3430 0ad2 78000000 		.4byte	.LFE41-.LFB41
 3431 0ad6 01       		.uleb128 0x1
 3432 0ad7 9C       		.byte	0x9c
 3433 0ad8 B10B0000 		.4byte	0xbb1
 3434 0adc 10       		.uleb128 0x10
 3435 0add 0F020000 		.4byte	.LASF73
 3436 0ae1 01       		.byte	0x1
 3437 0ae2 9903     		.2byte	0x399
 3438 0ae4 1E020000 		.4byte	0x21e
 3439 0ae8 3A070000 		.4byte	.LLST40
 3440 0aec 10       		.uleb128 0x10
 3441 0aed CE060000 		.4byte	.LASF68
 3442 0af1 01       		.byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 108


 3443 0af2 9903     		.2byte	0x399
 3444 0af4 8D090000 		.4byte	0x98d
 3445 0af8 66070000 		.4byte	.LLST41
 3446 0afc 10       		.uleb128 0x10
 3447 0afd 6C000000 		.4byte	.LASF100
 3448 0b01 01       		.byte	0x1
 3449 0b02 9903     		.2byte	0x399
 3450 0b04 B70B0000 		.4byte	0xbb7
 3451 0b08 91070000 		.4byte	.LLST42
 3452 0b0c 10       		.uleb128 0x10
 3453 0b0d 5E010000 		.4byte	.LASF88
 3454 0b11 01       		.byte	0x1
 3455 0b12 9903     		.2byte	0x399
 3456 0b14 6E040000 		.4byte	0x46e
 3457 0b18 B0070000 		.4byte	.LLST43
 3458 0b1c 11       		.uleb128 0x11
 3459 0b1d 44070000 		.4byte	.LASF66
 3460 0b21 01       		.byte	0x1
 3461 0b22 9B03     		.2byte	0x39b
 3462 0b24 EF000000 		.4byte	0xef
 3463 0b28 59080000 		.4byte	.LLST44
 3464 0b2c 11       		.uleb128 0x11
 3465 0b2d B7010000 		.4byte	.LASF101
 3466 0b31 01       		.byte	0x1
 3467 0b32 9C03     		.2byte	0x39c
 3468 0b34 FA000000 		.4byte	0xfa
 3469 0b38 77080000 		.4byte	.LLST45
 3470 0b3c 11       		.uleb128 0x11
 3471 0b3d 3C070000 		.4byte	.LASF65
 3472 0b41 01       		.byte	0x1
 3473 0b42 9D03     		.2byte	0x39d
 3474 0b44 69040000 		.4byte	0x469
 3475 0b48 AB080000 		.4byte	.LLST46
 3476 0b4c 1C       		.uleb128 0x1c
 3477 0b4d 00000000 		.4byte	.Ldebug_ranges0+0
 3478 0b51 970B0000 		.4byte	0xb97
 3479 0b55 11       		.uleb128 0x11
 3480 0b56 2C010000 		.4byte	.LASF55
 3481 0b5a 01       		.byte	0x1
 3482 0b5b BC03     		.2byte	0x3bc
 3483 0b5d BC0B0000 		.4byte	0xbbc
 3484 0b61 D7080000 		.4byte	.LLST47
 3485 0b65 17       		.uleb128 0x17
 3486 0b66 2E000000 		.4byte	.LVL143
 3487 0b6a DD030000 		.4byte	0x3dd
 3488 0b6e 860B0000 		.4byte	0xb86
 3489 0b72 15       		.uleb128 0x15
 3490 0b73 01       		.uleb128 0x1
 3491 0b74 50       		.byte	0x50
 3492 0b75 02       		.uleb128 0x2
 3493 0b76 76       		.byte	0x76
 3494 0b77 00       		.sleb128 0
 3495 0b78 15       		.uleb128 0x15
 3496 0b79 01       		.uleb128 0x1
 3497 0b7a 51       		.byte	0x51
 3498 0b7b 03       		.uleb128 0x3
 3499 0b7c 7D       		.byte	0x7d
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 109


 3500 0b7d 00       		.sleb128 0
 3501 0b7e 06       		.byte	0x6
 3502 0b7f 15       		.uleb128 0x15
 3503 0b80 01       		.uleb128 0x1
 3504 0b81 52       		.byte	0x52
 3505 0b82 02       		.uleb128 0x2
 3506 0b83 74       		.byte	0x74
 3507 0b84 00       		.sleb128 0
 3508 0b85 00       		.byte	0
 3509 0b86 14       		.uleb128 0x14
 3510 0b87 40000000 		.4byte	.LVL144
 3511 0b8b A1130000 		.4byte	0x13a1
 3512 0b8f 15       		.uleb128 0x15
 3513 0b90 01       		.uleb128 0x1
 3514 0b91 50       		.byte	0x50
 3515 0b92 02       		.uleb128 0x2
 3516 0b93 76       		.byte	0x76
 3517 0b94 24       		.sleb128 36
 3518 0b95 00       		.byte	0
 3519 0b96 00       		.byte	0
 3520 0b97 12       		.uleb128 0x12
 3521 0b98 10000000 		.4byte	.LVL139
 3522 0b9c 23140000 		.4byte	0x1423
 3523 0ba0 14       		.uleb128 0x14
 3524 0ba1 72000000 		.4byte	.LVL156
 3525 0ba5 2E140000 		.4byte	0x142e
 3526 0ba9 15       		.uleb128 0x15
 3527 0baa 01       		.uleb128 0x1
 3528 0bab 50       		.byte	0x50
 3529 0bac 02       		.uleb128 0x2
 3530 0bad 75       		.byte	0x75
 3531 0bae 00       		.sleb128 0
 3532 0baf 00       		.byte	0
 3533 0bb0 00       		.byte	0
 3534 0bb1 06       		.uleb128 0x6
 3535 0bb2 04       		.byte	0x4
 3536 0bb3 EF000000 		.4byte	0xef
 3537 0bb7 07       		.uleb128 0x7
 3538 0bb8 B10B0000 		.4byte	0xbb1
 3539 0bbc 07       		.uleb128 0x7
 3540 0bbd C0000000 		.4byte	0xc0
 3541 0bc1 18       		.uleb128 0x18
 3542 0bc2 A7040000 		.4byte	.LASF102
 3543 0bc6 01       		.byte	0x1
 3544 0bc7 3004     		.2byte	0x430
 3545 0bc9 EF000000 		.4byte	0xef
 3546 0bcd 00000000 		.4byte	.LFB42
 3547 0bd1 64000000 		.4byte	.LFE42-.LFB42
 3548 0bd5 01       		.uleb128 0x1
 3549 0bd6 9C       		.byte	0x9c
 3550 0bd7 890C0000 		.4byte	0xc89
 3551 0bdb 10       		.uleb128 0x10
 3552 0bdc 0F020000 		.4byte	.LASF73
 3553 0be0 01       		.byte	0x1
 3554 0be1 3004     		.2byte	0x430
 3555 0be3 1E020000 		.4byte	0x21e
 3556 0be7 F5080000 		.4byte	.LLST48
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 110


 3557 0beb 10       		.uleb128 0x10
 3558 0bec 6C000000 		.4byte	.LASF100
 3559 0bf0 01       		.byte	0x1
 3560 0bf1 3004     		.2byte	0x430
 3561 0bf3 B70B0000 		.4byte	0xbb7
 3562 0bf7 9E090000 		.4byte	.LLST49
 3563 0bfb 11       		.uleb128 0x11
 3564 0bfc 44070000 		.4byte	.LASF66
 3565 0c00 01       		.byte	0x1
 3566 0c01 3204     		.2byte	0x432
 3567 0c03 EF000000 		.4byte	0xef
 3568 0c07 CA090000 		.4byte	.LLST50
 3569 0c0b 11       		.uleb128 0x11
 3570 0c0c B7010000 		.4byte	.LASF101
 3571 0c10 01       		.byte	0x1
 3572 0c11 3304     		.2byte	0x433
 3573 0c13 FA000000 		.4byte	0xfa
 3574 0c17 E8090000 		.4byte	.LLST51
 3575 0c1b 11       		.uleb128 0x11
 3576 0c1c 3C070000 		.4byte	.LASF65
 3577 0c20 01       		.byte	0x1
 3578 0c21 3404     		.2byte	0x434
 3579 0c23 69040000 		.4byte	0x469
 3580 0c27 1C0A0000 		.4byte	.LLST52
 3581 0c2b 16       		.uleb128 0x16
 3582 0c2c 0C000000 		.4byte	.LBB6
 3583 0c30 4E000000 		.4byte	.LBE6-.LBB6
 3584 0c34 6F0C0000 		.4byte	0xc6f
 3585 0c38 11       		.uleb128 0x11
 3586 0c39 C5020000 		.4byte	.LASF51
 3587 0c3d 01       		.byte	0x1
 3588 0c3e 5904     		.2byte	0x459
 3589 0c40 9E060000 		.4byte	0x69e
 3590 0c44 C50A0000 		.4byte	.LLST53
 3591 0c48 1D       		.uleb128 0x1d
 3592 0c49 18000000 		.4byte	.Ldebug_ranges0+0x18
 3593 0c4d 11       		.uleb128 0x11
 3594 0c4e 2C010000 		.4byte	.LASF55
 3595 0c52 01       		.byte	0x1
 3596 0c53 6004     		.2byte	0x460
 3597 0c55 BC0B0000 		.4byte	0xbbc
 3598 0c59 330B0000 		.4byte	.LLST54
 3599 0c5d 14       		.uleb128 0x14
 3600 0c5e 30000000 		.4byte	.LVL171
 3601 0c62 A1130000 		.4byte	0x13a1
 3602 0c66 15       		.uleb128 0x15
 3603 0c67 01       		.uleb128 0x1
 3604 0c68 50       		.byte	0x50
 3605 0c69 02       		.uleb128 0x2
 3606 0c6a 74       		.byte	0x74
 3607 0c6b 24       		.sleb128 36
 3608 0c6c 00       		.byte	0
 3609 0c6d 00       		.byte	0
 3610 0c6e 00       		.byte	0
 3611 0c6f 12       		.uleb128 0x12
 3612 0c70 0A000000 		.4byte	.LVL163
 3613 0c74 23140000 		.4byte	0x1423
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 111


 3614 0c78 14       		.uleb128 0x14
 3615 0c79 60000000 		.4byte	.LVL186
 3616 0c7d 2E140000 		.4byte	0x142e
 3617 0c81 15       		.uleb128 0x15
 3618 0c82 01       		.uleb128 0x1
 3619 0c83 50       		.byte	0x50
 3620 0c84 02       		.uleb128 0x2
 3621 0c85 75       		.byte	0x75
 3622 0c86 00       		.sleb128 0
 3623 0c87 00       		.byte	0
 3624 0c88 00       		.byte	0
 3625 0c89 18       		.uleb128 0x18
 3626 0c8a 75020000 		.4byte	.LASF103
 3627 0c8e 01       		.byte	0x1
 3628 0c8f D504     		.2byte	0x4d5
 3629 0c91 EF000000 		.4byte	0xef
 3630 0c95 00000000 		.4byte	.LFB43
 3631 0c99 28010000 		.4byte	.LFE43-.LFB43
 3632 0c9d 01       		.uleb128 0x1
 3633 0c9e 9C       		.byte	0x9c
 3634 0c9f BB0E0000 		.4byte	0xebb
 3635 0ca3 10       		.uleb128 0x10
 3636 0ca4 0F020000 		.4byte	.LASF73
 3637 0ca8 01       		.byte	0x1
 3638 0ca9 D504     		.2byte	0x4d5
 3639 0cab 1E020000 		.4byte	0x21e
 3640 0caf 5E0B0000 		.4byte	.LLST55
 3641 0cb3 10       		.uleb128 0x10
 3642 0cb4 B1020000 		.4byte	.LASF70
 3643 0cb8 01       		.byte	0x1
 3644 0cb9 D504     		.2byte	0x4d5
 3645 0cbb BA040000 		.4byte	0x4ba
 3646 0cbf 8A0B0000 		.4byte	.LLST56
 3647 0cc3 10       		.uleb128 0x10
 3648 0cc4 DD070000 		.4byte	.LASF87
 3649 0cc8 01       		.byte	0x1
 3650 0cc9 D504     		.2byte	0x4d5
 3651 0ccb 05010000 		.4byte	0x105
 3652 0ccf B50B0000 		.4byte	.LLST57
 3653 0cd3 10       		.uleb128 0x10
 3654 0cd4 FD050000 		.4byte	.LASF104
 3655 0cd8 01       		.byte	0x1
 3656 0cd9 D504     		.2byte	0x4d5
 3657 0cdb 6E040000 		.4byte	0x46e
 3658 0cdf EC0B0000 		.4byte	.LLST58
 3659 0ce3 11       		.uleb128 0x11
 3660 0ce4 82030000 		.4byte	.LASF89
 3661 0ce8 01       		.byte	0x1
 3662 0ce9 D704     		.2byte	0x4d7
 3663 0ceb EF000000 		.4byte	0xef
 3664 0cef 180C0000 		.4byte	.LLST59
 3665 0cf3 1A       		.uleb128 0x1a
 3666 0cf4 97030000 		.4byte	.LASF91
 3667 0cf8 01       		.byte	0x1
 3668 0cf9 D804     		.2byte	0x4d8
 3669 0cfb 13020000 		.4byte	0x213
 3670 0cff 02       		.uleb128 0x2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 112


 3671 0d00 91       		.byte	0x91
 3672 0d01 60       		.sleb128 -32
 3673 0d02 11       		.uleb128 0x11
 3674 0d03 DA050000 		.4byte	.LASF105
 3675 0d07 01       		.byte	0x1
 3676 0d08 D904     		.2byte	0x4d9
 3677 0d0a 48020000 		.4byte	0x248
 3678 0d0e 590C0000 		.4byte	.LLST60
 3679 0d12 11       		.uleb128 0x11
 3680 0d13 3C070000 		.4byte	.LASF65
 3681 0d17 01       		.byte	0x1
 3682 0d18 DA04     		.2byte	0x4da
 3683 0d1a 69040000 		.4byte	0x469
 3684 0d1e 6C0C0000 		.4byte	.LLST61
 3685 0d22 16       		.uleb128 0x16
 3686 0d23 12000000 		.4byte	.LBB9
 3687 0d27 76000000 		.4byte	.LBE9-.LBB9
 3688 0d2b C00D0000 		.4byte	0xdc0
 3689 0d2f 11       		.uleb128 0x11
 3690 0d30 C5020000 		.4byte	.LASF51
 3691 0d34 01       		.byte	0x1
 3692 0d35 EC04     		.2byte	0x4ec
 3693 0d37 9E060000 		.4byte	0x69e
 3694 0d3b 980C0000 		.4byte	.LLST62
 3695 0d3f 17       		.uleb128 0x17
 3696 0d40 22000000 		.4byte	.LVL196
 3697 0d44 73040000 		.4byte	0x473
 3698 0d48 5A0D0000 		.4byte	0xd5a
 3699 0d4c 15       		.uleb128 0x15
 3700 0d4d 01       		.uleb128 0x1
 3701 0d4e 50       		.byte	0x50
 3702 0d4f 02       		.uleb128 0x2
 3703 0d50 74       		.byte	0x74
 3704 0d51 00       		.sleb128 0
 3705 0d52 15       		.uleb128 0x15
 3706 0d53 01       		.uleb128 0x1
 3707 0d54 51       		.byte	0x51
 3708 0d55 03       		.uleb128 0x3
 3709 0d56 7D       		.byte	0x7d
 3710 0d57 00       		.sleb128 0
 3711 0d58 06       		.byte	0x6
 3712 0d59 00       		.byte	0
 3713 0d5a 12       		.uleb128 0x12
 3714 0d5b 34000000 		.4byte	.LVL197
 3715 0d5f 39140000 		.4byte	0x1439
 3716 0d63 17       		.uleb128 0x17
 3717 0d64 44000000 		.4byte	.LVL198
 3718 0d68 A1130000 		.4byte	0x13a1
 3719 0d6c 770D0000 		.4byte	0xd77
 3720 0d70 15       		.uleb128 0x15
 3721 0d71 01       		.uleb128 0x1
 3722 0d72 50       		.byte	0x50
 3723 0d73 02       		.uleb128 0x2
 3724 0d74 74       		.byte	0x74
 3725 0d75 10       		.sleb128 16
 3726 0d76 00       		.byte	0
 3727 0d77 12       		.uleb128 0x12
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 113


 3728 0d78 4C000000 		.4byte	.LVL199
 3729 0d7c B9130000 		.4byte	0x13b9
 3730 0d80 17       		.uleb128 0x17
 3731 0d81 5E000000 		.4byte	.LVL200
 3732 0d85 A1130000 		.4byte	0x13a1
 3733 0d89 940D0000 		.4byte	0xd94
 3734 0d8d 15       		.uleb128 0x15
 3735 0d8e 01       		.uleb128 0x1
 3736 0d8f 50       		.byte	0x50
 3737 0d90 02       		.uleb128 0x2
 3738 0d91 74       		.byte	0x74
 3739 0d92 24       		.sleb128 36
 3740 0d93 00       		.byte	0
 3741 0d94 12       		.uleb128 0x12
 3742 0d95 66000000 		.4byte	.LVL201
 3743 0d99 B9130000 		.4byte	0x13b9
 3744 0d9d 12       		.uleb128 0x12
 3745 0d9e 6A000000 		.4byte	.LVL202
 3746 0da2 81130000 		.4byte	0x1381
 3747 0da6 12       		.uleb128 0x12
 3748 0da7 78000000 		.4byte	.LVL204
 3749 0dab 81130000 		.4byte	0x1381
 3750 0daf 14       		.uleb128 0x14
 3751 0db0 86000000 		.4byte	.LVL205
 3752 0db4 DB130000 		.4byte	0x13db
 3753 0db8 15       		.uleb128 0x15
 3754 0db9 01       		.uleb128 0x1
 3755 0dba 50       		.byte	0x50
 3756 0dbb 02       		.uleb128 0x2
 3757 0dbc 91       		.byte	0x91
 3758 0dbd 60       		.sleb128 -32
 3759 0dbe 00       		.byte	0
 3760 0dbf 00       		.byte	0
 3761 0dc0 12       		.uleb128 0x12
 3762 0dc1 12000000 		.4byte	.LVL193
 3763 0dc5 76130000 		.4byte	0x1376
 3764 0dc9 12       		.uleb128 0x12
 3765 0dca 8C000000 		.4byte	.LVL207
 3766 0dce 81130000 		.4byte	0x1381
 3767 0dd2 12       		.uleb128 0x12
 3768 0dd3 90000000 		.4byte	.LVL208
 3769 0dd7 E7130000 		.4byte	0x13e7
 3770 0ddb 12       		.uleb128 0x12
 3771 0ddc 94000000 		.4byte	.LVL209
 3772 0de0 76130000 		.4byte	0x1376
 3773 0de4 12       		.uleb128 0x12
 3774 0de5 B8000000 		.4byte	.LVL210
 3775 0de9 81130000 		.4byte	0x1381
 3776 0ded 17       		.uleb128 0x17
 3777 0dee C0000000 		.4byte	.LVL212
 3778 0df2 F3130000 		.4byte	0x13f3
 3779 0df6 070E0000 		.4byte	0xe07
 3780 0dfa 15       		.uleb128 0x15
 3781 0dfb 01       		.uleb128 0x1
 3782 0dfc 50       		.byte	0x50
 3783 0dfd 02       		.uleb128 0x2
 3784 0dfe 91       		.byte	0x91
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 114


 3785 0dff 60       		.sleb128 -32
 3786 0e00 15       		.uleb128 0x15
 3787 0e01 01       		.uleb128 0x1
 3788 0e02 51       		.byte	0x51
 3789 0e03 02       		.uleb128 0x2
 3790 0e04 91       		.byte	0x91
 3791 0e05 5C       		.sleb128 -36
 3792 0e06 00       		.byte	0
 3793 0e07 17       		.uleb128 0x17
 3794 0e08 CA000000 		.4byte	.LVL213
 3795 0e0c 90030000 		.4byte	0x390
 3796 0e10 1B0E0000 		.4byte	0xe1b
 3797 0e14 15       		.uleb128 0x15
 3798 0e15 01       		.uleb128 0x1
 3799 0e16 50       		.byte	0x50
 3800 0e17 02       		.uleb128 0x2
 3801 0e18 74       		.byte	0x74
 3802 0e19 00       		.sleb128 0
 3803 0e1a 00       		.byte	0
 3804 0e1b 12       		.uleb128 0x12
 3805 0e1c D8000000 		.4byte	.LVL214
 3806 0e20 76130000 		.4byte	0x1376
 3807 0e24 12       		.uleb128 0x12
 3808 0e25 DE000000 		.4byte	.LVL215
 3809 0e29 45140000 		.4byte	0x1445
 3810 0e2d 12       		.uleb128 0x12
 3811 0e2e E2000000 		.4byte	.LVL216
 3812 0e32 81130000 		.4byte	0x1381
 3813 0e36 17       		.uleb128 0x17
 3814 0e37 EC000000 		.4byte	.LVL217
 3815 0e3b FF130000 		.4byte	0x13ff
 3816 0e3f 4A0E0000 		.4byte	0xe4a
 3817 0e43 15       		.uleb128 0x15
 3818 0e44 01       		.uleb128 0x1
 3819 0e45 50       		.byte	0x50
 3820 0e46 02       		.uleb128 0x2
 3821 0e47 74       		.byte	0x74
 3822 0e48 24       		.sleb128 36
 3823 0e49 00       		.byte	0
 3824 0e4a 17       		.uleb128 0x17
 3825 0e4b F2000000 		.4byte	.LVL218
 3826 0e4f BF040000 		.4byte	0x4bf
 3827 0e53 5E0E0000 		.4byte	0xe5e
 3828 0e57 15       		.uleb128 0x15
 3829 0e58 01       		.uleb128 0x1
 3830 0e59 50       		.byte	0x50
 3831 0e5a 02       		.uleb128 0x2
 3832 0e5b 74       		.byte	0x74
 3833 0e5c 00       		.sleb128 0
 3834 0e5d 00       		.byte	0
 3835 0e5e 12       		.uleb128 0x12
 3836 0e5f F6000000 		.4byte	.LVL219
 3837 0e63 0B140000 		.4byte	0x140b
 3838 0e67 12       		.uleb128 0x12
 3839 0e68 FE000000 		.4byte	.LVL220
 3840 0e6c B9130000 		.4byte	0x13b9
 3841 0e70 17       		.uleb128 0x17
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 115


 3842 0e71 06010000 		.4byte	.LVL221
 3843 0e75 BF040000 		.4byte	0x4bf
 3844 0e79 840E0000 		.4byte	0xe84
 3845 0e7d 15       		.uleb128 0x15
 3846 0e7e 01       		.uleb128 0x1
 3847 0e7f 50       		.byte	0x50
 3848 0e80 02       		.uleb128 0x2
 3849 0e81 74       		.byte	0x74
 3850 0e82 00       		.sleb128 0
 3851 0e83 00       		.byte	0
 3852 0e84 12       		.uleb128 0x12
 3853 0e85 0A010000 		.4byte	.LVL222
 3854 0e89 0B140000 		.4byte	0x140b
 3855 0e8d 17       		.uleb128 0x17
 3856 0e8e 12010000 		.4byte	.LVL223
 3857 0e92 BF040000 		.4byte	0x4bf
 3858 0e96 A10E0000 		.4byte	0xea1
 3859 0e9a 15       		.uleb128 0x15
 3860 0e9b 01       		.uleb128 0x1
 3861 0e9c 50       		.byte	0x50
 3862 0e9d 02       		.uleb128 0x2
 3863 0e9e 74       		.byte	0x74
 3864 0e9f 00       		.sleb128 0
 3865 0ea0 00       		.byte	0
 3866 0ea1 12       		.uleb128 0x12
 3867 0ea2 16010000 		.4byte	.LVL224
 3868 0ea6 0B140000 		.4byte	0x140b
 3869 0eaa 14       		.uleb128 0x14
 3870 0eab 1C010000 		.4byte	.LVL225
 3871 0eaf 90030000 		.4byte	0x390
 3872 0eb3 15       		.uleb128 0x15
 3873 0eb4 01       		.uleb128 0x1
 3874 0eb5 50       		.byte	0x50
 3875 0eb6 02       		.uleb128 0x2
 3876 0eb7 74       		.byte	0x74
 3877 0eb8 00       		.sleb128 0
 3878 0eb9 00       		.byte	0
 3879 0eba 00       		.byte	0
 3880 0ebb 18       		.uleb128 0x18
 3881 0ebc 49060000 		.4byte	.LASF106
 3882 0ec0 01       		.byte	0x1
 3883 0ec1 7302     		.2byte	0x273
 3884 0ec3 EF000000 		.4byte	0xef
 3885 0ec7 00000000 		.4byte	.LFB38
 3886 0ecb 32000000 		.4byte	.LFE38-.LFB38
 3887 0ecf 01       		.uleb128 0x1
 3888 0ed0 9C       		.byte	0x9c
 3889 0ed1 3F0F0000 		.4byte	0xf3f
 3890 0ed5 10       		.uleb128 0x10
 3891 0ed6 89050000 		.4byte	.LASF97
 3892 0eda 01       		.byte	0x1
 3893 0edb 7302     		.2byte	0x273
 3894 0edd 1E020000 		.4byte	0x21e
 3895 0ee1 AB0C0000 		.4byte	.LLST63
 3896 0ee5 10       		.uleb128 0x10
 3897 0ee6 DD070000 		.4byte	.LASF87
 3898 0eea 01       		.byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 116


 3899 0eeb 7302     		.2byte	0x273
 3900 0eed 05010000 		.4byte	0x105
 3901 0ef1 D70C0000 		.4byte	.LLST64
 3902 0ef5 11       		.uleb128 0x11
 3903 0ef6 44070000 		.4byte	.LASF66
 3904 0efa 01       		.byte	0x1
 3905 0efb 7502     		.2byte	0x275
 3906 0efd EF000000 		.4byte	0xef
 3907 0f01 030D0000 		.4byte	.LLST65
 3908 0f05 11       		.uleb128 0x11
 3909 0f06 86000000 		.4byte	.LASF98
 3910 0f0a 01       		.byte	0x1
 3911 0f0b 7602     		.2byte	0x276
 3912 0f0d 69040000 		.4byte	0x469
 3913 0f11 220D0000 		.4byte	.LLST66
 3914 0f15 12       		.uleb128 0x12
 3915 0f16 0C000000 		.4byte	.LVL233
 3916 0f1a 17140000 		.4byte	0x1417
 3917 0f1e 14       		.uleb128 0x14
 3918 0f1f 26000000 		.4byte	.LVL236
 3919 0f23 890C0000 		.4byte	0xc89
 3920 0f27 15       		.uleb128 0x15
 3921 0f28 01       		.uleb128 0x1
 3922 0f29 50       		.byte	0x50
 3923 0f2a 02       		.uleb128 0x2
 3924 0f2b 74       		.byte	0x74
 3925 0f2c 00       		.sleb128 0
 3926 0f2d 15       		.uleb128 0x15
 3927 0f2e 01       		.uleb128 0x1
 3928 0f2f 51       		.byte	0x51
 3929 0f30 01       		.uleb128 0x1
 3930 0f31 30       		.byte	0x30
 3931 0f32 15       		.uleb128 0x15
 3932 0f33 01       		.uleb128 0x1
 3933 0f34 52       		.byte	0x52
 3934 0f35 02       		.uleb128 0x2
 3935 0f36 76       		.byte	0x76
 3936 0f37 00       		.sleb128 0
 3937 0f38 15       		.uleb128 0x15
 3938 0f39 01       		.uleb128 0x1
 3939 0f3a 53       		.byte	0x53
 3940 0f3b 01       		.uleb128 0x1
 3941 0f3c 30       		.byte	0x30
 3942 0f3d 00       		.byte	0
 3943 0f3e 00       		.byte	0
 3944 0f3f 18       		.uleb128 0x18
 3945 0f40 40000000 		.4byte	.LASF107
 3946 0f44 01       		.byte	0x1
 3947 0f45 9A05     		.2byte	0x59a
 3948 0f47 EF000000 		.4byte	0xef
 3949 0f4b 00000000 		.4byte	.LFB44
 3950 0f4f 72000000 		.4byte	.LFE44-.LFB44
 3951 0f53 01       		.uleb128 0x1
 3952 0f54 9C       		.byte	0x9c
 3953 0f55 32100000 		.4byte	0x1032
 3954 0f59 10       		.uleb128 0x10
 3955 0f5a 0F020000 		.4byte	.LASF73
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 117


 3956 0f5e 01       		.byte	0x1
 3957 0f5f 9A05     		.2byte	0x59a
 3958 0f61 1E020000 		.4byte	0x21e
 3959 0f65 4E0D0000 		.4byte	.LLST67
 3960 0f69 10       		.uleb128 0x10
 3961 0f6a B1020000 		.4byte	.LASF70
 3962 0f6e 01       		.byte	0x1
 3963 0f6f 9A05     		.2byte	0x59a
 3964 0f71 BA040000 		.4byte	0x4ba
 3965 0f75 F70D0000 		.4byte	.LLST68
 3966 0f79 10       		.uleb128 0x10
 3967 0f7a 6C000000 		.4byte	.LASF100
 3968 0f7e 01       		.byte	0x1
 3969 0f7f 9A05     		.2byte	0x59a
 3970 0f81 B70B0000 		.4byte	0xbb7
 3971 0f85 220E0000 		.4byte	.LLST69
 3972 0f89 11       		.uleb128 0x11
 3973 0f8a 44070000 		.4byte	.LASF66
 3974 0f8e 01       		.byte	0x1
 3975 0f8f 9C05     		.2byte	0x59c
 3976 0f91 EF000000 		.4byte	0xef
 3977 0f95 410E0000 		.4byte	.LLST70
 3978 0f99 11       		.uleb128 0x11
 3979 0f9a B7010000 		.4byte	.LASF101
 3980 0f9e 01       		.byte	0x1
 3981 0f9f 9D05     		.2byte	0x59d
 3982 0fa1 FA000000 		.4byte	0xfa
 3983 0fa5 5F0E0000 		.4byte	.LLST71
 3984 0fa9 11       		.uleb128 0x11
 3985 0faa 3C070000 		.4byte	.LASF65
 3986 0fae 01       		.byte	0x1
 3987 0faf 9E05     		.2byte	0x59e
 3988 0fb1 69040000 		.4byte	0x469
 3989 0fb5 930E0000 		.4byte	.LLST72
 3990 0fb9 16       		.uleb128 0x16
 3991 0fba 10000000 		.4byte	.LBB10
 3992 0fbe 56000000 		.4byte	.LBE10-.LBB10
 3993 0fc2 18100000 		.4byte	0x1018
 3994 0fc6 11       		.uleb128 0x11
 3995 0fc7 C5020000 		.4byte	.LASF51
 3996 0fcb 01       		.byte	0x1
 3997 0fcc B505     		.2byte	0x5b5
 3998 0fce 9E060000 		.4byte	0x69e
 3999 0fd2 3C0F0000 		.4byte	.LLST73
 4000 0fd6 1D       		.uleb128 0x1d
 4001 0fd7 30000000 		.4byte	.Ldebug_ranges0+0x30
 4002 0fdb 11       		.uleb128 0x11
 4003 0fdc C3080000 		.4byte	.LASF54
 4004 0fe0 01       		.byte	0x1
 4005 0fe1 BA05     		.2byte	0x5ba
 4006 0fe3 BC0B0000 		.4byte	0xbbc
 4007 0fe7 4F0F0000 		.4byte	.LLST74
 4008 0feb 17       		.uleb128 0x17
 4009 0fec 24000000 		.4byte	.LVL247
 4010 0ff0 73040000 		.4byte	0x473
 4011 0ff4 06100000 		.4byte	0x1006
 4012 0ff8 15       		.uleb128 0x15
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 118


 4013 0ff9 01       		.uleb128 0x1
 4014 0ffa 50       		.byte	0x50
 4015 0ffb 02       		.uleb128 0x2
 4016 0ffc 74       		.byte	0x74
 4017 0ffd 00       		.sleb128 0
 4018 0ffe 15       		.uleb128 0x15
 4019 0fff 01       		.uleb128 0x1
 4020 1000 51       		.byte	0x51
 4021 1001 03       		.uleb128 0x3
 4022 1002 7D       		.byte	0x7d
 4023 1003 00       		.sleb128 0
 4024 1004 06       		.byte	0x6
 4025 1005 00       		.byte	0
 4026 1006 14       		.uleb128 0x14
 4027 1007 3A000000 		.4byte	.LVL248
 4028 100b A1130000 		.4byte	0x13a1
 4029 100f 15       		.uleb128 0x15
 4030 1010 01       		.uleb128 0x1
 4031 1011 50       		.byte	0x50
 4032 1012 02       		.uleb128 0x2
 4033 1013 74       		.byte	0x74
 4034 1014 10       		.sleb128 16
 4035 1015 00       		.byte	0
 4036 1016 00       		.byte	0
 4037 1017 00       		.byte	0
 4038 1018 12       		.uleb128 0x12
 4039 1019 0E000000 		.4byte	.LVL242
 4040 101d 23140000 		.4byte	0x1423
 4041 1021 14       		.uleb128 0x14
 4042 1022 6C000000 		.4byte	.LVL260
 4043 1026 2E140000 		.4byte	0x142e
 4044 102a 15       		.uleb128 0x15
 4045 102b 01       		.uleb128 0x1
 4046 102c 50       		.byte	0x50
 4047 102d 02       		.uleb128 0x2
 4048 102e 75       		.byte	0x75
 4049 102f 00       		.sleb128 0
 4050 1030 00       		.byte	0
 4051 1031 00       		.byte	0
 4052 1032 18       		.uleb128 0x18
 4053 1033 8D070000 		.4byte	.LASF108
 4054 1037 01       		.byte	0x1
 4055 1038 F505     		.2byte	0x5f5
 4056 103a EF000000 		.4byte	0xef
 4057 103e 00000000 		.4byte	.LFB45
 4058 1042 2E000000 		.4byte	.LFE45-.LFB45
 4059 1046 01       		.uleb128 0x1
 4060 1047 9C       		.byte	0x9c
 4061 1048 E0100000 		.4byte	0x10e0
 4062 104c 10       		.uleb128 0x10
 4063 104d 0F020000 		.4byte	.LASF73
 4064 1051 01       		.byte	0x1
 4065 1052 F505     		.2byte	0x5f5
 4066 1054 1E020000 		.4byte	0x21e
 4067 1058 6D0F0000 		.4byte	.LLST75
 4068 105c 10       		.uleb128 0x10
 4069 105d B1020000 		.4byte	.LASF70
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 119


 4070 1061 01       		.byte	0x1
 4071 1062 F505     		.2byte	0x5f5
 4072 1064 BA040000 		.4byte	0x4ba
 4073 1068 B20F0000 		.4byte	.LLST76
 4074 106c 11       		.uleb128 0x11
 4075 106d 44070000 		.4byte	.LASF66
 4076 1071 01       		.byte	0x1
 4077 1072 F705     		.2byte	0x5f7
 4078 1074 EF000000 		.4byte	0xef
 4079 1078 DE0F0000 		.4byte	.LLST77
 4080 107c 11       		.uleb128 0x11
 4081 107d B7010000 		.4byte	.LASF101
 4082 1081 01       		.byte	0x1
 4083 1082 F805     		.2byte	0x5f8
 4084 1084 FA000000 		.4byte	0xfa
 4085 1088 08100000 		.4byte	.LLST78
 4086 108c 11       		.uleb128 0x11
 4087 108d DA050000 		.4byte	.LASF105
 4088 1091 01       		.byte	0x1
 4089 1092 F905     		.2byte	0x5f9
 4090 1094 48020000 		.4byte	0x248
 4091 1098 3C100000 		.4byte	.LLST79
 4092 109c 11       		.uleb128 0x11
 4093 109d 3C070000 		.4byte	.LASF65
 4094 10a1 01       		.byte	0x1
 4095 10a2 FA05     		.2byte	0x5fa
 4096 10a4 69040000 		.4byte	0x469
 4097 10a8 4F100000 		.4byte	.LLST80
 4098 10ac 12       		.uleb128 0x12
 4099 10ad 0A000000 		.4byte	.LVL267
 4100 10b1 23140000 		.4byte	0x1423
 4101 10b5 17       		.uleb128 0x17
 4102 10b6 1C000000 		.4byte	.LVL271
 4103 10ba 73040000 		.4byte	0x473
 4104 10be CF100000 		.4byte	0x10cf
 4105 10c2 15       		.uleb128 0x15
 4106 10c3 01       		.uleb128 0x1
 4107 10c4 50       		.byte	0x50
 4108 10c5 02       		.uleb128 0x2
 4109 10c6 74       		.byte	0x74
 4110 10c7 00       		.sleb128 0
 4111 10c8 15       		.uleb128 0x15
 4112 10c9 01       		.uleb128 0x1
 4113 10ca 51       		.byte	0x51
 4114 10cb 02       		.uleb128 0x2
 4115 10cc 76       		.byte	0x76
 4116 10cd 00       		.sleb128 0
 4117 10ce 00       		.byte	0
 4118 10cf 14       		.uleb128 0x14
 4119 10d0 2A000000 		.4byte	.LVL276
 4120 10d4 2E140000 		.4byte	0x142e
 4121 10d8 15       		.uleb128 0x15
 4122 10d9 01       		.uleb128 0x1
 4123 10da 50       		.byte	0x50
 4124 10db 02       		.uleb128 0x2
 4125 10dc 75       		.byte	0x75
 4126 10dd 00       		.sleb128 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 120


 4127 10de 00       		.byte	0
 4128 10df 00       		.byte	0
 4129 10e0 18       		.uleb128 0x18
 4130 10e1 14070000 		.4byte	.LASF109
 4131 10e5 01       		.byte	0x1
 4132 10e6 2B06     		.2byte	0x62b
 4133 10e8 FA000000 		.4byte	0xfa
 4134 10ec 00000000 		.4byte	.LFB46
 4135 10f0 12000000 		.4byte	.LFE46-.LFB46
 4136 10f4 01       		.uleb128 0x1
 4137 10f5 9C       		.byte	0x9c
 4138 10f6 2D110000 		.4byte	0x112d
 4139 10fa 10       		.uleb128 0x10
 4140 10fb 0F020000 		.4byte	.LASF73
 4141 10ff 01       		.byte	0x1
 4142 1100 2B06     		.2byte	0x62b
 4143 1102 2D110000 		.4byte	0x112d
 4144 1106 94100000 		.4byte	.LLST81
 4145 110a 11       		.uleb128 0x11
 4146 110b 6C010000 		.4byte	.LASF110
 4147 110f 01       		.byte	0x1
 4148 1110 2D06     		.2byte	0x62d
 4149 1112 FA000000 		.4byte	0xfa
 4150 1116 C0100000 		.4byte	.LLST82
 4151 111a 12       		.uleb128 0x12
 4152 111b 08000000 		.4byte	.LVL281
 4153 111f 76130000 		.4byte	0x1376
 4154 1123 12       		.uleb128 0x12
 4155 1124 0E000000 		.4byte	.LVL283
 4156 1128 81130000 		.4byte	0x1381
 4157 112c 00       		.byte	0
 4158 112d 07       		.uleb128 0x7
 4159 112e 1E020000 		.4byte	0x21e
 4160 1132 18       		.uleb128 0x18
 4161 1133 15010000 		.4byte	.LASF111
 4162 1137 01       		.byte	0x1
 4163 1138 3B06     		.2byte	0x63b
 4164 113a FA000000 		.4byte	0xfa
 4165 113e 00000000 		.4byte	.LFB47
 4166 1142 16000000 		.4byte	.LFE47-.LFB47
 4167 1146 01       		.uleb128 0x1
 4168 1147 9C       		.byte	0x9c
 4169 1148 8F110000 		.4byte	0x118f
 4170 114c 10       		.uleb128 0x10
 4171 114d 0F020000 		.4byte	.LASF73
 4172 1151 01       		.byte	0x1
 4173 1152 3B06     		.2byte	0x63b
 4174 1154 2D110000 		.4byte	0x112d
 4175 1158 DE100000 		.4byte	.LLST83
 4176 115c 11       		.uleb128 0x11
 4177 115d 6C010000 		.4byte	.LASF110
 4178 1161 01       		.byte	0x1
 4179 1162 3D06     		.2byte	0x63d
 4180 1164 FA000000 		.4byte	0xfa
 4181 1168 0A110000 		.4byte	.LLST84
 4182 116c 11       		.uleb128 0x11
 4183 116d 3C070000 		.4byte	.LASF65
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 121


 4184 1171 01       		.byte	0x1
 4185 1172 3E06     		.2byte	0x63e
 4186 1174 63040000 		.4byte	0x463
 4187 1178 28110000 		.4byte	.LLST85
 4188 117c 12       		.uleb128 0x12
 4189 117d 08000000 		.4byte	.LVL287
 4190 1181 76130000 		.4byte	0x1376
 4191 1185 12       		.uleb128 0x12
 4192 1186 12000000 		.4byte	.LVL290
 4193 118a 81130000 		.4byte	0x1381
 4194 118e 00       		.byte	0
 4195 118f 18       		.uleb128 0x18
 4196 1190 DF040000 		.4byte	.LASF112
 4197 1194 01       		.byte	0x1
 4198 1195 4D06     		.2byte	0x64d
 4199 1197 FA000000 		.4byte	0xfa
 4200 119b 00000000 		.4byte	.LFB48
 4201 119f 04000000 		.4byte	.LFE48-.LFB48
 4202 11a3 01       		.uleb128 0x1
 4203 11a4 9C       		.byte	0x9c
 4204 11a5 C8110000 		.4byte	0x11c8
 4205 11a9 10       		.uleb128 0x10
 4206 11aa 0F020000 		.4byte	.LASF73
 4207 11ae 01       		.byte	0x1
 4208 11af 4D06     		.2byte	0x64d
 4209 11b1 2D110000 		.4byte	0x112d
 4210 11b5 54110000 		.4byte	.LLST86
 4211 11b9 1A       		.uleb128 0x1a
 4212 11ba 6C010000 		.4byte	.LASF110
 4213 11be 01       		.byte	0x1
 4214 11bf 4F06     		.2byte	0x64f
 4215 11c1 FA000000 		.4byte	0xfa
 4216 11c5 01       		.uleb128 0x1
 4217 11c6 50       		.byte	0x50
 4218 11c7 00       		.byte	0
 4219 11c8 18       		.uleb128 0x18
 4220 11c9 6B080000 		.4byte	.LASF113
 4221 11cd 01       		.byte	0x1
 4222 11ce 8F07     		.2byte	0x78f
 4223 11d0 EF000000 		.4byte	0xef
 4224 11d4 00000000 		.4byte	.LFB54
 4225 11d8 0E000000 		.4byte	.LFE54-.LFB54
 4226 11dc 01       		.uleb128 0x1
 4227 11dd 9C       		.byte	0x9c
 4228 11de 01120000 		.4byte	0x1201
 4229 11e2 10       		.uleb128 0x10
 4230 11e3 0F020000 		.4byte	.LASF73
 4231 11e7 01       		.byte	0x1
 4232 11e8 8F07     		.2byte	0x78f
 4233 11ea 2D110000 		.4byte	0x112d
 4234 11ee 75110000 		.4byte	.LLST87
 4235 11f2 1A       		.uleb128 0x1a
 4236 11f3 44070000 		.4byte	.LASF66
 4237 11f7 01       		.byte	0x1
 4238 11f8 9107     		.2byte	0x791
 4239 11fa EF000000 		.4byte	0xef
 4240 11fe 01       		.uleb128 0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 122


 4241 11ff 50       		.byte	0x50
 4242 1200 00       		.byte	0
 4243 1201 18       		.uleb128 0x18
 4244 1202 FB060000 		.4byte	.LASF114
 4245 1206 01       		.byte	0x1
 4246 1207 B607     		.2byte	0x7b6
 4247 1209 EF000000 		.4byte	0xef
 4248 120d 00000000 		.4byte	.LFB56
 4249 1211 10000000 		.4byte	.LFE56-.LFB56
 4250 1215 01       		.uleb128 0x1
 4251 1216 9C       		.byte	0x9c
 4252 1217 3A120000 		.4byte	0x123a
 4253 121b 10       		.uleb128 0x10
 4254 121c 0F020000 		.4byte	.LASF73
 4255 1220 01       		.byte	0x1
 4256 1221 B607     		.2byte	0x7b6
 4257 1223 2D110000 		.4byte	0x112d
 4258 1227 AF110000 		.4byte	.LLST88
 4259 122b 1A       		.uleb128 0x1a
 4260 122c 44070000 		.4byte	.LASF66
 4261 1230 01       		.byte	0x1
 4262 1231 B807     		.2byte	0x7b8
 4263 1233 EF000000 		.4byte	0xef
 4264 1237 01       		.uleb128 0x1
 4265 1238 50       		.byte	0x50
 4266 1239 00       		.byte	0
 4267 123a 1E       		.uleb128 0x1e
 4268 123b A0050000 		.4byte	.LASF117
 4269 123f 01       		.byte	0x1
 4270 1240 DD08     		.2byte	0x8dd
 4271 1242 00000000 		.4byte	.LFB57
 4272 1246 28000000 		.4byte	.LFE57-.LFB57
 4273 124a 01       		.uleb128 0x1
 4274 124b 9C       		.byte	0x9c
 4275 124c 7C120000 		.4byte	0x127c
 4276 1250 19       		.uleb128 0x19
 4277 1251 0F020000 		.4byte	.LASF73
 4278 1255 01       		.byte	0x1
 4279 1256 DD08     		.2byte	0x8dd
 4280 1258 1E020000 		.4byte	0x21e
 4281 125c 01       		.uleb128 0x1
 4282 125d 50       		.byte	0x50
 4283 125e 19       		.uleb128 0x19
 4284 125f A8030000 		.4byte	.LASF59
 4285 1263 01       		.byte	0x1
 4286 1264 DD08     		.2byte	0x8dd
 4287 1266 AE000000 		.4byte	0xae
 4288 126a 01       		.uleb128 0x1
 4289 126b 51       		.byte	0x51
 4290 126c 1F       		.uleb128 0x1f
 4291 126d 757800   		.ascii	"ux\000"
 4292 1270 01       		.byte	0x1
 4293 1271 DF08     		.2byte	0x8df
 4294 1273 FA000000 		.4byte	0xfa
 4295 1277 E9110000 		.4byte	.LLST89
 4296 127b 00       		.byte	0
 4297 127c 18       		.uleb128 0x18
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 123


 4298 127d 6E060000 		.4byte	.LASF115
 4299 1281 01       		.byte	0x1
 4300 1282 FA08     		.2byte	0x8fa
 4301 1284 AE000000 		.4byte	0xae
 4302 1288 00000000 		.4byte	.LFB58
 4303 128c 24000000 		.4byte	.LFE58-.LFB58
 4304 1290 01       		.uleb128 0x1
 4305 1291 9C       		.byte	0x9c
 4306 1292 C6120000 		.4byte	0x12c6
 4307 1296 10       		.uleb128 0x10
 4308 1297 0F020000 		.4byte	.LASF73
 4309 129b 01       		.byte	0x1
 4310 129c FA08     		.2byte	0x8fa
 4311 129e 1E020000 		.4byte	0x21e
 4312 12a2 13120000 		.4byte	.LLST90
 4313 12a6 1F       		.uleb128 0x1f
 4314 12a7 757800   		.ascii	"ux\000"
 4315 12aa 01       		.byte	0x1
 4316 12ab FC08     		.2byte	0x8fc
 4317 12ad FA000000 		.4byte	0xfa
 4318 12b1 4D120000 		.4byte	.LLST91
 4319 12b5 11       		.uleb128 0x11
 4320 12b6 7D060000 		.4byte	.LASF116
 4321 12ba 01       		.byte	0x1
 4322 12bb FD08     		.2byte	0x8fd
 4323 12bd AE000000 		.4byte	0xae
 4324 12c1 77120000 		.4byte	.LLST92
 4325 12c5 00       		.byte	0
 4326 12c6 1E       		.uleb128 0x1e
 4327 12c7 A1010000 		.4byte	.LASF118
 4328 12cb 01       		.byte	0x1
 4329 12cc 1609     		.2byte	0x916
 4330 12ce 00000000 		.4byte	.LFB59
 4331 12d2 28000000 		.4byte	.LFE59-.LFB59
 4332 12d6 01       		.uleb128 0x1
 4333 12d7 9C       		.byte	0x9c
 4334 12d8 FA120000 		.4byte	0x12fa
 4335 12dc 19       		.uleb128 0x19
 4336 12dd 0F020000 		.4byte	.LASF73
 4337 12e1 01       		.byte	0x1
 4338 12e2 1609     		.2byte	0x916
 4339 12e4 1E020000 		.4byte	0x21e
 4340 12e8 01       		.uleb128 0x1
 4341 12e9 50       		.byte	0x50
 4342 12ea 1F       		.uleb128 0x1f
 4343 12eb 757800   		.ascii	"ux\000"
 4344 12ee 01       		.byte	0x1
 4345 12ef 1809     		.2byte	0x918
 4346 12f1 FA000000 		.4byte	0xfa
 4347 12f5 AD120000 		.4byte	.LLST93
 4348 12f9 00       		.byte	0
 4349 12fa 1E       		.uleb128 0x1e
 4350 12fb 89010000 		.4byte	.LASF119
 4351 12ff 01       		.byte	0x1
 4352 1300 5906     		.2byte	0x659
 4353 1302 00000000 		.4byte	.LFB49
 4354 1306 10000000 		.4byte	.LFE49-.LFB49
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 124


 4355 130a 01       		.uleb128 0x1
 4356 130b 9C       		.byte	0x9c
 4357 130c 55130000 		.4byte	0x1355
 4358 1310 10       		.uleb128 0x10
 4359 1311 0F020000 		.4byte	.LASF73
 4360 1315 01       		.byte	0x1
 4361 1316 5906     		.2byte	0x659
 4362 1318 1E020000 		.4byte	0x21e
 4363 131c D7120000 		.4byte	.LLST94
 4364 1320 11       		.uleb128 0x11
 4365 1321 3C070000 		.4byte	.LASF65
 4366 1325 01       		.byte	0x1
 4367 1326 5B06     		.2byte	0x65b
 4368 1328 69040000 		.4byte	0x469
 4369 132c 03130000 		.4byte	.LLST95
 4370 1330 17       		.uleb128 0x17
 4371 1331 08000000 		.4byte	.LVL324
 4372 1335 C6120000 		.4byte	0x12c6
 4373 1339 44130000 		.4byte	0x1344
 4374 133d 15       		.uleb128 0x15
 4375 133e 01       		.uleb128 0x1
 4376 133f 50       		.byte	0x50
 4377 1340 02       		.uleb128 0x2
 4378 1341 74       		.byte	0x74
 4379 1342 00       		.sleb128 0
 4380 1343 00       		.byte	0
 4381 1344 14       		.uleb128 0x14
 4382 1345 0E000000 		.4byte	.LVL325
 4383 1349 51140000 		.4byte	0x1451
 4384 134d 15       		.uleb128 0x15
 4385 134e 01       		.uleb128 0x1
 4386 134f 50       		.byte	0x50
 4387 1350 02       		.uleb128 0x2
 4388 1351 74       		.byte	0x74
 4389 1352 00       		.sleb128 0
 4390 1353 00       		.byte	0
 4391 1354 00       		.byte	0
 4392 1355 20       		.uleb128 0x20
 4393 1356 2D030000 		.4byte	0x32d
 4394 135a 65130000 		.4byte	0x1365
 4395 135e 21       		.uleb128 0x21
 4396 135f 9E000000 		.4byte	0x9e
 4397 1363 09       		.byte	0x9
 4398 1364 00       		.byte	0
 4399 1365 22       		.uleb128 0x22
 4400 1366 B9040000 		.4byte	.LASF142
 4401 136a 01       		.byte	0x1
 4402 136b C4       		.byte	0xc4
 4403 136c 55130000 		.4byte	0x1355
 4404 1370 05       		.uleb128 0x5
 4405 1371 03       		.byte	0x3
 4406 1372 00000000 		.4byte	xQueueRegistry
 4407 1376 23       		.uleb128 0x23
 4408 1377 43010000 		.4byte	.LASF120
 4409 137b 43010000 		.4byte	.LASF120
 4410 137f 05       		.byte	0x5
 4411 1380 84       		.byte	0x84
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 125


 4412 1381 23       		.uleb128 0x23
 4413 1382 10000000 		.4byte	.LASF121
 4414 1386 10000000 		.4byte	.LASF121
 4415 138a 05       		.byte	0x5
 4416 138b 85       		.byte	0x85
 4417 138c 24       		.uleb128 0x24
 4418 138d 56040000 		.4byte	.LASF122
 4419 1391 56040000 		.4byte	.LASF122
 4420 1395 07       		.byte	0x7
 4421 1396 A808     		.2byte	0x8a8
 4422 1398 25       		.uleb128 0x25
 4423 1399 A4080000 		.4byte	.LASF143
 4424 139d A4080000 		.4byte	.LASF143
 4425 13a1 24       		.uleb128 0x24
 4426 13a2 E5080000 		.4byte	.LASF123
 4427 13a6 E5080000 		.4byte	.LASF123
 4428 13aa 07       		.byte	0x7
 4429 13ab 6F08     		.2byte	0x86f
 4430 13ad 24       		.uleb128 0x24
 4431 13ae 55070000 		.4byte	.LASF124
 4432 13b2 55070000 		.4byte	.LASF124
 4433 13b6 07       		.byte	0x7
 4434 13b7 9608     		.2byte	0x896
 4435 13b9 23       		.uleb128 0x23
 4436 13ba 35000000 		.4byte	.LASF125
 4437 13be 35000000 		.4byte	.LASF125
 4438 13c2 05       		.byte	0x5
 4439 13c3 7A       		.byte	0x7a
 4440 13c4 24       		.uleb128 0x24
 4441 13c5 B8070000 		.4byte	.LASF126
 4442 13c9 B8070000 		.4byte	.LASF126
 4443 13cd 06       		.byte	0x6
 4444 13ce 8201     		.2byte	0x182
 4445 13d0 23       		.uleb128 0x23
 4446 13d1 D7020000 		.4byte	.LASF127
 4447 13d5 D7020000 		.4byte	.LASF127
 4448 13d9 09       		.byte	0x9
 4449 13da AB       		.byte	0xab
 4450 13db 24       		.uleb128 0x24
 4451 13dc EC000000 		.4byte	.LASF128
 4452 13e0 EC000000 		.4byte	.LASF128
 4453 13e4 07       		.byte	0x7
 4454 13e5 8A08     		.2byte	0x88a
 4455 13e7 24       		.uleb128 0x24
 4456 13e8 E4020000 		.4byte	.LASF129
 4457 13ec E4020000 		.4byte	.LASF129
 4458 13f0 07       		.byte	0x7
 4459 13f1 C304     		.2byte	0x4c3
 4460 13f3 24       		.uleb128 0x24
 4461 13f4 DC060000 		.4byte	.LASF130
 4462 13f8 DC060000 		.4byte	.LASF130
 4463 13fc 07       		.byte	0x7
 4464 13fd 9008     		.2byte	0x890
 4465 13ff 24       		.uleb128 0x24
 4466 1400 08040000 		.4byte	.LASF131
 4467 1404 08040000 		.4byte	.LASF131
 4468 1408 07       		.byte	0x7
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 126


 4469 1409 4708     		.2byte	0x847
 4470 140b 24       		.uleb128 0x24
 4471 140c BF060000 		.4byte	.LASF132
 4472 1410 BF060000 		.4byte	.LASF132
 4473 1414 07       		.byte	0x7
 4474 1415 F904     		.2byte	0x4f9
 4475 1417 24       		.uleb128 0x24
 4476 1418 0D080000 		.4byte	.LASF133
 4477 141c 0D080000 		.4byte	.LASF133
 4478 1420 07       		.byte	0x7
 4479 1421 8508     		.2byte	0x885
 4480 1423 23       		.uleb128 0x23
 4481 1424 CB080000 		.4byte	.LASF134
 4482 1428 CB080000 		.4byte	.LASF134
 4483 142c 05       		.byte	0x5
 4484 142d 86       		.byte	0x86
 4485 142e 23       		.uleb128 0x23
 4486 142f F2070000 		.4byte	.LASF135
 4487 1433 F2070000 		.4byte	.LASF135
 4488 1437 05       		.byte	0x5
 4489 1438 87       		.byte	0x87
 4490 1439 24       		.uleb128 0x24
 4491 143a 1E040000 		.4byte	.LASF136
 4492 143e 1E040000 		.4byte	.LASF136
 4493 1442 07       		.byte	0x7
 4494 1443 D308     		.2byte	0x8d3
 4495 1445 24       		.uleb128 0x24
 4496 1446 A3000000 		.4byte	.LASF137
 4497 144a A3000000 		.4byte	.LASF137
 4498 144e 07       		.byte	0x7
 4499 144f A208     		.2byte	0x8a2
 4500 1451 23       		.uleb128 0x23
 4501 1452 F1060000 		.4byte	.LASF138
 4502 1456 F1060000 		.4byte	.LASF138
 4503 145a 09       		.byte	0x9
 4504 145b AC       		.byte	0xac
 4505 145c 00       		.byte	0
 4506              		.section	.debug_abbrev,"",%progbits
 4507              	.Ldebug_abbrev0:
 4508 0000 01       		.uleb128 0x1
 4509 0001 11       		.uleb128 0x11
 4510 0002 01       		.byte	0x1
 4511 0003 25       		.uleb128 0x25
 4512 0004 0E       		.uleb128 0xe
 4513 0005 13       		.uleb128 0x13
 4514 0006 0B       		.uleb128 0xb
 4515 0007 03       		.uleb128 0x3
 4516 0008 0E       		.uleb128 0xe
 4517 0009 1B       		.uleb128 0x1b
 4518 000a 0E       		.uleb128 0xe
 4519 000b 55       		.uleb128 0x55
 4520 000c 17       		.uleb128 0x17
 4521 000d 11       		.uleb128 0x11
 4522 000e 01       		.uleb128 0x1
 4523 000f 10       		.uleb128 0x10
 4524 0010 17       		.uleb128 0x17
 4525 0011 00       		.byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 127


 4526 0012 00       		.byte	0
 4527 0013 02       		.uleb128 0x2
 4528 0014 16       		.uleb128 0x16
 4529 0015 00       		.byte	0
 4530 0016 03       		.uleb128 0x3
 4531 0017 0E       		.uleb128 0xe
 4532 0018 3A       		.uleb128 0x3a
 4533 0019 0B       		.uleb128 0xb
 4534 001a 3B       		.uleb128 0x3b
 4535 001b 0B       		.uleb128 0xb
 4536 001c 49       		.uleb128 0x49
 4537 001d 13       		.uleb128 0x13
 4538 001e 00       		.byte	0
 4539 001f 00       		.byte	0
 4540 0020 03       		.uleb128 0x3
 4541 0021 24       		.uleb128 0x24
 4542 0022 00       		.byte	0
 4543 0023 0B       		.uleb128 0xb
 4544 0024 0B       		.uleb128 0xb
 4545 0025 3E       		.uleb128 0x3e
 4546 0026 0B       		.uleb128 0xb
 4547 0027 03       		.uleb128 0x3
 4548 0028 0E       		.uleb128 0xe
 4549 0029 00       		.byte	0
 4550 002a 00       		.byte	0
 4551 002b 04       		.uleb128 0x4
 4552 002c 24       		.uleb128 0x24
 4553 002d 00       		.byte	0
 4554 002e 0B       		.uleb128 0xb
 4555 002f 0B       		.uleb128 0xb
 4556 0030 3E       		.uleb128 0x3e
 4557 0031 0B       		.uleb128 0xb
 4558 0032 03       		.uleb128 0x3
 4559 0033 08       		.uleb128 0x8
 4560 0034 00       		.byte	0
 4561 0035 00       		.byte	0
 4562 0036 05       		.uleb128 0x5
 4563 0037 0F       		.uleb128 0xf
 4564 0038 00       		.byte	0
 4565 0039 0B       		.uleb128 0xb
 4566 003a 0B       		.uleb128 0xb
 4567 003b 00       		.byte	0
 4568 003c 00       		.byte	0
 4569 003d 06       		.uleb128 0x6
 4570 003e 0F       		.uleb128 0xf
 4571 003f 00       		.byte	0
 4572 0040 0B       		.uleb128 0xb
 4573 0041 0B       		.uleb128 0xb
 4574 0042 49       		.uleb128 0x49
 4575 0043 13       		.uleb128 0x13
 4576 0044 00       		.byte	0
 4577 0045 00       		.byte	0
 4578 0046 07       		.uleb128 0x7
 4579 0047 26       		.uleb128 0x26
 4580 0048 00       		.byte	0
 4581 0049 49       		.uleb128 0x49
 4582 004a 13       		.uleb128 0x13
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 128


 4583 004b 00       		.byte	0
 4584 004c 00       		.byte	0
 4585 004d 08       		.uleb128 0x8
 4586 004e 26       		.uleb128 0x26
 4587 004f 00       		.byte	0
 4588 0050 00       		.byte	0
 4589 0051 00       		.byte	0
 4590 0052 09       		.uleb128 0x9
 4591 0053 13       		.uleb128 0x13
 4592 0054 01       		.byte	0x1
 4593 0055 03       		.uleb128 0x3
 4594 0056 0E       		.uleb128 0xe
 4595 0057 0B       		.uleb128 0xb
 4596 0058 0B       		.uleb128 0xb
 4597 0059 3A       		.uleb128 0x3a
 4598 005a 0B       		.uleb128 0xb
 4599 005b 3B       		.uleb128 0x3b
 4600 005c 0B       		.uleb128 0xb
 4601 005d 01       		.uleb128 0x1
 4602 005e 13       		.uleb128 0x13
 4603 005f 00       		.byte	0
 4604 0060 00       		.byte	0
 4605 0061 0A       		.uleb128 0xa
 4606 0062 0D       		.uleb128 0xd
 4607 0063 00       		.byte	0
 4608 0064 03       		.uleb128 0x3
 4609 0065 0E       		.uleb128 0xe
 4610 0066 3A       		.uleb128 0x3a
 4611 0067 0B       		.uleb128 0xb
 4612 0068 3B       		.uleb128 0x3b
 4613 0069 0B       		.uleb128 0xb
 4614 006a 49       		.uleb128 0x49
 4615 006b 13       		.uleb128 0x13
 4616 006c 38       		.uleb128 0x38
 4617 006d 0B       		.uleb128 0xb
 4618 006e 00       		.byte	0
 4619 006f 00       		.byte	0
 4620 0070 0B       		.uleb128 0xb
 4621 0071 17       		.uleb128 0x17
 4622 0072 01       		.byte	0x1
 4623 0073 0B       		.uleb128 0xb
 4624 0074 0B       		.uleb128 0xb
 4625 0075 3A       		.uleb128 0x3a
 4626 0076 0B       		.uleb128 0xb
 4627 0077 3B       		.uleb128 0x3b
 4628 0078 0B       		.uleb128 0xb
 4629 0079 01       		.uleb128 0x1
 4630 007a 13       		.uleb128 0x13
 4631 007b 00       		.byte	0
 4632 007c 00       		.byte	0
 4633 007d 0C       		.uleb128 0xc
 4634 007e 0D       		.uleb128 0xd
 4635 007f 00       		.byte	0
 4636 0080 03       		.uleb128 0x3
 4637 0081 0E       		.uleb128 0xe
 4638 0082 3A       		.uleb128 0x3a
 4639 0083 0B       		.uleb128 0xb
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 129


 4640 0084 3B       		.uleb128 0x3b
 4641 0085 0B       		.uleb128 0xb
 4642 0086 49       		.uleb128 0x49
 4643 0087 13       		.uleb128 0x13
 4644 0088 00       		.byte	0
 4645 0089 00       		.byte	0
 4646 008a 0D       		.uleb128 0xd
 4647 008b 0D       		.uleb128 0xd
 4648 008c 00       		.byte	0
 4649 008d 03       		.uleb128 0x3
 4650 008e 08       		.uleb128 0x8
 4651 008f 3A       		.uleb128 0x3a
 4652 0090 0B       		.uleb128 0xb
 4653 0091 3B       		.uleb128 0x3b
 4654 0092 0B       		.uleb128 0xb
 4655 0093 49       		.uleb128 0x49
 4656 0094 13       		.uleb128 0x13
 4657 0095 38       		.uleb128 0x38
 4658 0096 0B       		.uleb128 0xb
 4659 0097 00       		.byte	0
 4660 0098 00       		.byte	0
 4661 0099 0E       		.uleb128 0xe
 4662 009a 35       		.uleb128 0x35
 4663 009b 00       		.byte	0
 4664 009c 49       		.uleb128 0x49
 4665 009d 13       		.uleb128 0x13
 4666 009e 00       		.byte	0
 4667 009f 00       		.byte	0
 4668 00a0 0F       		.uleb128 0xf
 4669 00a1 2E       		.uleb128 0x2e
 4670 00a2 01       		.byte	0x1
 4671 00a3 03       		.uleb128 0x3
 4672 00a4 0E       		.uleb128 0xe
 4673 00a5 3A       		.uleb128 0x3a
 4674 00a6 0B       		.uleb128 0xb
 4675 00a7 3B       		.uleb128 0x3b
 4676 00a8 05       		.uleb128 0x5
 4677 00a9 27       		.uleb128 0x27
 4678 00aa 19       		.uleb128 0x19
 4679 00ab 49       		.uleb128 0x49
 4680 00ac 13       		.uleb128 0x13
 4681 00ad 11       		.uleb128 0x11
 4682 00ae 01       		.uleb128 0x1
 4683 00af 12       		.uleb128 0x12
 4684 00b0 06       		.uleb128 0x6
 4685 00b1 40       		.uleb128 0x40
 4686 00b2 18       		.uleb128 0x18
 4687 00b3 9742     		.uleb128 0x2117
 4688 00b5 19       		.uleb128 0x19
 4689 00b6 01       		.uleb128 0x1
 4690 00b7 13       		.uleb128 0x13
 4691 00b8 00       		.byte	0
 4692 00b9 00       		.byte	0
 4693 00ba 10       		.uleb128 0x10
 4694 00bb 05       		.uleb128 0x5
 4695 00bc 00       		.byte	0
 4696 00bd 03       		.uleb128 0x3
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 130


 4697 00be 0E       		.uleb128 0xe
 4698 00bf 3A       		.uleb128 0x3a
 4699 00c0 0B       		.uleb128 0xb
 4700 00c1 3B       		.uleb128 0x3b
 4701 00c2 05       		.uleb128 0x5
 4702 00c3 49       		.uleb128 0x49
 4703 00c4 13       		.uleb128 0x13
 4704 00c5 02       		.uleb128 0x2
 4705 00c6 17       		.uleb128 0x17
 4706 00c7 00       		.byte	0
 4707 00c8 00       		.byte	0
 4708 00c9 11       		.uleb128 0x11
 4709 00ca 34       		.uleb128 0x34
 4710 00cb 00       		.byte	0
 4711 00cc 03       		.uleb128 0x3
 4712 00cd 0E       		.uleb128 0xe
 4713 00ce 3A       		.uleb128 0x3a
 4714 00cf 0B       		.uleb128 0xb
 4715 00d0 3B       		.uleb128 0x3b
 4716 00d1 05       		.uleb128 0x5
 4717 00d2 49       		.uleb128 0x49
 4718 00d3 13       		.uleb128 0x13
 4719 00d4 02       		.uleb128 0x2
 4720 00d5 17       		.uleb128 0x17
 4721 00d6 00       		.byte	0
 4722 00d7 00       		.byte	0
 4723 00d8 12       		.uleb128 0x12
 4724 00d9 898201   		.uleb128 0x4109
 4725 00dc 00       		.byte	0
 4726 00dd 11       		.uleb128 0x11
 4727 00de 01       		.uleb128 0x1
 4728 00df 31       		.uleb128 0x31
 4729 00e0 13       		.uleb128 0x13
 4730 00e1 00       		.byte	0
 4731 00e2 00       		.byte	0
 4732 00e3 13       		.uleb128 0x13
 4733 00e4 2E       		.uleb128 0x2e
 4734 00e5 01       		.byte	0x1
 4735 00e6 03       		.uleb128 0x3
 4736 00e7 0E       		.uleb128 0xe
 4737 00e8 3A       		.uleb128 0x3a
 4738 00e9 0B       		.uleb128 0xb
 4739 00ea 3B       		.uleb128 0x3b
 4740 00eb 05       		.uleb128 0x5
 4741 00ec 27       		.uleb128 0x27
 4742 00ed 19       		.uleb128 0x19
 4743 00ee 11       		.uleb128 0x11
 4744 00ef 01       		.uleb128 0x1
 4745 00f0 12       		.uleb128 0x12
 4746 00f1 06       		.uleb128 0x6
 4747 00f2 40       		.uleb128 0x40
 4748 00f3 18       		.uleb128 0x18
 4749 00f4 9742     		.uleb128 0x2117
 4750 00f6 19       		.uleb128 0x19
 4751 00f7 01       		.uleb128 0x1
 4752 00f8 13       		.uleb128 0x13
 4753 00f9 00       		.byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 131


 4754 00fa 00       		.byte	0
 4755 00fb 14       		.uleb128 0x14
 4756 00fc 898201   		.uleb128 0x4109
 4757 00ff 01       		.byte	0x1
 4758 0100 11       		.uleb128 0x11
 4759 0101 01       		.uleb128 0x1
 4760 0102 31       		.uleb128 0x31
 4761 0103 13       		.uleb128 0x13
 4762 0104 00       		.byte	0
 4763 0105 00       		.byte	0
 4764 0106 15       		.uleb128 0x15
 4765 0107 8A8201   		.uleb128 0x410a
 4766 010a 00       		.byte	0
 4767 010b 02       		.uleb128 0x2
 4768 010c 18       		.uleb128 0x18
 4769 010d 9142     		.uleb128 0x2111
 4770 010f 18       		.uleb128 0x18
 4771 0110 00       		.byte	0
 4772 0111 00       		.byte	0
 4773 0112 16       		.uleb128 0x16
 4774 0113 0B       		.uleb128 0xb
 4775 0114 01       		.byte	0x1
 4776 0115 11       		.uleb128 0x11
 4777 0116 01       		.uleb128 0x1
 4778 0117 12       		.uleb128 0x12
 4779 0118 06       		.uleb128 0x6
 4780 0119 01       		.uleb128 0x1
 4781 011a 13       		.uleb128 0x13
 4782 011b 00       		.byte	0
 4783 011c 00       		.byte	0
 4784 011d 17       		.uleb128 0x17
 4785 011e 898201   		.uleb128 0x4109
 4786 0121 01       		.byte	0x1
 4787 0122 11       		.uleb128 0x11
 4788 0123 01       		.uleb128 0x1
 4789 0124 31       		.uleb128 0x31
 4790 0125 13       		.uleb128 0x13
 4791 0126 01       		.uleb128 0x1
 4792 0127 13       		.uleb128 0x13
 4793 0128 00       		.byte	0
 4794 0129 00       		.byte	0
 4795 012a 18       		.uleb128 0x18
 4796 012b 2E       		.uleb128 0x2e
 4797 012c 01       		.byte	0x1
 4798 012d 3F       		.uleb128 0x3f
 4799 012e 19       		.uleb128 0x19
 4800 012f 03       		.uleb128 0x3
 4801 0130 0E       		.uleb128 0xe
 4802 0131 3A       		.uleb128 0x3a
 4803 0132 0B       		.uleb128 0xb
 4804 0133 3B       		.uleb128 0x3b
 4805 0134 05       		.uleb128 0x5
 4806 0135 27       		.uleb128 0x27
 4807 0136 19       		.uleb128 0x19
 4808 0137 49       		.uleb128 0x49
 4809 0138 13       		.uleb128 0x13
 4810 0139 11       		.uleb128 0x11
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 132


 4811 013a 01       		.uleb128 0x1
 4812 013b 12       		.uleb128 0x12
 4813 013c 06       		.uleb128 0x6
 4814 013d 40       		.uleb128 0x40
 4815 013e 18       		.uleb128 0x18
 4816 013f 9742     		.uleb128 0x2117
 4817 0141 19       		.uleb128 0x19
 4818 0142 01       		.uleb128 0x1
 4819 0143 13       		.uleb128 0x13
 4820 0144 00       		.byte	0
 4821 0145 00       		.byte	0
 4822 0146 19       		.uleb128 0x19
 4823 0147 05       		.uleb128 0x5
 4824 0148 00       		.byte	0
 4825 0149 03       		.uleb128 0x3
 4826 014a 0E       		.uleb128 0xe
 4827 014b 3A       		.uleb128 0x3a
 4828 014c 0B       		.uleb128 0xb
 4829 014d 3B       		.uleb128 0x3b
 4830 014e 05       		.uleb128 0x5
 4831 014f 49       		.uleb128 0x49
 4832 0150 13       		.uleb128 0x13
 4833 0151 02       		.uleb128 0x2
 4834 0152 18       		.uleb128 0x18
 4835 0153 00       		.byte	0
 4836 0154 00       		.byte	0
 4837 0155 1A       		.uleb128 0x1a
 4838 0156 34       		.uleb128 0x34
 4839 0157 00       		.byte	0
 4840 0158 03       		.uleb128 0x3
 4841 0159 0E       		.uleb128 0xe
 4842 015a 3A       		.uleb128 0x3a
 4843 015b 0B       		.uleb128 0xb
 4844 015c 3B       		.uleb128 0x3b
 4845 015d 05       		.uleb128 0x5
 4846 015e 49       		.uleb128 0x49
 4847 015f 13       		.uleb128 0x13
 4848 0160 02       		.uleb128 0x2
 4849 0161 18       		.uleb128 0x18
 4850 0162 00       		.byte	0
 4851 0163 00       		.byte	0
 4852 0164 1B       		.uleb128 0x1b
 4853 0165 34       		.uleb128 0x34
 4854 0166 00       		.byte	0
 4855 0167 03       		.uleb128 0x3
 4856 0168 0E       		.uleb128 0xe
 4857 0169 3A       		.uleb128 0x3a
 4858 016a 0B       		.uleb128 0xb
 4859 016b 3B       		.uleb128 0x3b
 4860 016c 05       		.uleb128 0x5
 4861 016d 49       		.uleb128 0x49
 4862 016e 13       		.uleb128 0x13
 4863 016f 1C       		.uleb128 0x1c
 4864 0170 0B       		.uleb128 0xb
 4865 0171 00       		.byte	0
 4866 0172 00       		.byte	0
 4867 0173 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 133


 4868 0174 0B       		.uleb128 0xb
 4869 0175 01       		.byte	0x1
 4870 0176 55       		.uleb128 0x55
 4871 0177 17       		.uleb128 0x17
 4872 0178 01       		.uleb128 0x1
 4873 0179 13       		.uleb128 0x13
 4874 017a 00       		.byte	0
 4875 017b 00       		.byte	0
 4876 017c 1D       		.uleb128 0x1d
 4877 017d 0B       		.uleb128 0xb
 4878 017e 01       		.byte	0x1
 4879 017f 55       		.uleb128 0x55
 4880 0180 17       		.uleb128 0x17
 4881 0181 00       		.byte	0
 4882 0182 00       		.byte	0
 4883 0183 1E       		.uleb128 0x1e
 4884 0184 2E       		.uleb128 0x2e
 4885 0185 01       		.byte	0x1
 4886 0186 3F       		.uleb128 0x3f
 4887 0187 19       		.uleb128 0x19
 4888 0188 03       		.uleb128 0x3
 4889 0189 0E       		.uleb128 0xe
 4890 018a 3A       		.uleb128 0x3a
 4891 018b 0B       		.uleb128 0xb
 4892 018c 3B       		.uleb128 0x3b
 4893 018d 05       		.uleb128 0x5
 4894 018e 27       		.uleb128 0x27
 4895 018f 19       		.uleb128 0x19
 4896 0190 11       		.uleb128 0x11
 4897 0191 01       		.uleb128 0x1
 4898 0192 12       		.uleb128 0x12
 4899 0193 06       		.uleb128 0x6
 4900 0194 40       		.uleb128 0x40
 4901 0195 18       		.uleb128 0x18
 4902 0196 9742     		.uleb128 0x2117
 4903 0198 19       		.uleb128 0x19
 4904 0199 01       		.uleb128 0x1
 4905 019a 13       		.uleb128 0x13
 4906 019b 00       		.byte	0
 4907 019c 00       		.byte	0
 4908 019d 1F       		.uleb128 0x1f
 4909 019e 34       		.uleb128 0x34
 4910 019f 00       		.byte	0
 4911 01a0 03       		.uleb128 0x3
 4912 01a1 08       		.uleb128 0x8
 4913 01a2 3A       		.uleb128 0x3a
 4914 01a3 0B       		.uleb128 0xb
 4915 01a4 3B       		.uleb128 0x3b
 4916 01a5 05       		.uleb128 0x5
 4917 01a6 49       		.uleb128 0x49
 4918 01a7 13       		.uleb128 0x13
 4919 01a8 02       		.uleb128 0x2
 4920 01a9 17       		.uleb128 0x17
 4921 01aa 00       		.byte	0
 4922 01ab 00       		.byte	0
 4923 01ac 20       		.uleb128 0x20
 4924 01ad 01       		.uleb128 0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 134


 4925 01ae 01       		.byte	0x1
 4926 01af 49       		.uleb128 0x49
 4927 01b0 13       		.uleb128 0x13
 4928 01b1 01       		.uleb128 0x1
 4929 01b2 13       		.uleb128 0x13
 4930 01b3 00       		.byte	0
 4931 01b4 00       		.byte	0
 4932 01b5 21       		.uleb128 0x21
 4933 01b6 21       		.uleb128 0x21
 4934 01b7 00       		.byte	0
 4935 01b8 49       		.uleb128 0x49
 4936 01b9 13       		.uleb128 0x13
 4937 01ba 2F       		.uleb128 0x2f
 4938 01bb 0B       		.uleb128 0xb
 4939 01bc 00       		.byte	0
 4940 01bd 00       		.byte	0
 4941 01be 22       		.uleb128 0x22
 4942 01bf 34       		.uleb128 0x34
 4943 01c0 00       		.byte	0
 4944 01c1 03       		.uleb128 0x3
 4945 01c2 0E       		.uleb128 0xe
 4946 01c3 3A       		.uleb128 0x3a
 4947 01c4 0B       		.uleb128 0xb
 4948 01c5 3B       		.uleb128 0x3b
 4949 01c6 0B       		.uleb128 0xb
 4950 01c7 49       		.uleb128 0x49
 4951 01c8 13       		.uleb128 0x13
 4952 01c9 3F       		.uleb128 0x3f
 4953 01ca 19       		.uleb128 0x19
 4954 01cb 02       		.uleb128 0x2
 4955 01cc 18       		.uleb128 0x18
 4956 01cd 00       		.byte	0
 4957 01ce 00       		.byte	0
 4958 01cf 23       		.uleb128 0x23
 4959 01d0 2E       		.uleb128 0x2e
 4960 01d1 00       		.byte	0
 4961 01d2 3F       		.uleb128 0x3f
 4962 01d3 19       		.uleb128 0x19
 4963 01d4 3C       		.uleb128 0x3c
 4964 01d5 19       		.uleb128 0x19
 4965 01d6 6E       		.uleb128 0x6e
 4966 01d7 0E       		.uleb128 0xe
 4967 01d8 03       		.uleb128 0x3
 4968 01d9 0E       		.uleb128 0xe
 4969 01da 3A       		.uleb128 0x3a
 4970 01db 0B       		.uleb128 0xb
 4971 01dc 3B       		.uleb128 0x3b
 4972 01dd 0B       		.uleb128 0xb
 4973 01de 00       		.byte	0
 4974 01df 00       		.byte	0
 4975 01e0 24       		.uleb128 0x24
 4976 01e1 2E       		.uleb128 0x2e
 4977 01e2 00       		.byte	0
 4978 01e3 3F       		.uleb128 0x3f
 4979 01e4 19       		.uleb128 0x19
 4980 01e5 3C       		.uleb128 0x3c
 4981 01e6 19       		.uleb128 0x19
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 135


 4982 01e7 6E       		.uleb128 0x6e
 4983 01e8 0E       		.uleb128 0xe
 4984 01e9 03       		.uleb128 0x3
 4985 01ea 0E       		.uleb128 0xe
 4986 01eb 3A       		.uleb128 0x3a
 4987 01ec 0B       		.uleb128 0xb
 4988 01ed 3B       		.uleb128 0x3b
 4989 01ee 05       		.uleb128 0x5
 4990 01ef 00       		.byte	0
 4991 01f0 00       		.byte	0
 4992 01f1 25       		.uleb128 0x25
 4993 01f2 2E       		.uleb128 0x2e
 4994 01f3 00       		.byte	0
 4995 01f4 3F       		.uleb128 0x3f
 4996 01f5 19       		.uleb128 0x19
 4997 01f6 3C       		.uleb128 0x3c
 4998 01f7 19       		.uleb128 0x19
 4999 01f8 6E       		.uleb128 0x6e
 5000 01f9 0E       		.uleb128 0xe
 5001 01fa 03       		.uleb128 0x3
 5002 01fb 0E       		.uleb128 0xe
 5003 01fc 00       		.byte	0
 5004 01fd 00       		.byte	0
 5005 01fe 00       		.byte	0
 5006              		.section	.debug_loc,"",%progbits
 5007              	.Ldebug_loc0:
 5008              	.LLST0:
 5009 0000 00000000 		.4byte	.LVL0
 5010 0004 07000000 		.4byte	.LVL1-1
 5011 0008 0100     		.2byte	0x1
 5012 000a 50       		.byte	0x50
 5013 000b 07000000 		.4byte	.LVL1-1
 5014 000f 12000000 		.4byte	.LVL2
 5015 0013 0100     		.2byte	0x1
 5016 0015 54       		.byte	0x54
 5017 0016 12000000 		.4byte	.LVL2
 5018 001a 14000000 		.4byte	.LVL3
 5019 001e 0400     		.2byte	0x4
 5020 0020 F3       		.byte	0xf3
 5021 0021 01       		.uleb128 0x1
 5022 0022 50       		.byte	0x50
 5023 0023 9F       		.byte	0x9f
 5024 0024 14000000 		.4byte	.LVL3
 5025 0028 16000000 		.4byte	.LVL4
 5026 002c 0100     		.2byte	0x1
 5027 002e 54       		.byte	0x54
 5028 002f 16000000 		.4byte	.LVL4
 5029 0033 1E000000 		.4byte	.LFE55
 5030 0037 0400     		.2byte	0x4
 5031 0039 F3       		.byte	0xf3
 5032 003a 01       		.uleb128 0x1
 5033 003b 50       		.byte	0x50
 5034 003c 9F       		.byte	0x9f
 5035 003d 00000000 		.4byte	0
 5036 0041 00000000 		.4byte	0
 5037              	.LLST1:
 5038 0045 16000000 		.4byte	.LVL4
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 136


 5039 0049 1C000000 		.4byte	.LVL6
 5040 004d 0100     		.2byte	0x1
 5041 004f 54       		.byte	0x54
 5042 0050 1C000000 		.4byte	.LVL6
 5043 0054 1E000000 		.4byte	.LFE55
 5044 0058 0100     		.2byte	0x1
 5045 005a 50       		.byte	0x50
 5046 005b 00000000 		.4byte	0
 5047 005f 00000000 		.4byte	0
 5048              	.LLST2:
 5049 0063 00000000 		.4byte	.LVL7
 5050 0067 07000000 		.4byte	.LVL8-1
 5051 006b 0100     		.2byte	0x1
 5052 006d 50       		.byte	0x50
 5053 006e 07000000 		.4byte	.LVL8-1
 5054 0072 10000000 		.4byte	.LVL9
 5055 0076 0100     		.2byte	0x1
 5056 0078 54       		.byte	0x54
 5057 0079 10000000 		.4byte	.LVL9
 5058 007d 12000000 		.4byte	.LVL10
 5059 0081 0400     		.2byte	0x4
 5060 0083 F3       		.byte	0xf3
 5061 0084 01       		.uleb128 0x1
 5062 0085 50       		.byte	0x50
 5063 0086 9F       		.byte	0x9f
 5064 0087 12000000 		.4byte	.LVL10
 5065 008b 14000000 		.4byte	.LVL11
 5066 008f 0100     		.2byte	0x1
 5067 0091 54       		.byte	0x54
 5068 0092 14000000 		.4byte	.LVL11
 5069 0096 1C000000 		.4byte	.LFE53
 5070 009a 0400     		.2byte	0x4
 5071 009c F3       		.byte	0xf3
 5072 009d 01       		.uleb128 0x1
 5073 009e 50       		.byte	0x50
 5074 009f 9F       		.byte	0x9f
 5075 00a0 00000000 		.4byte	0
 5076 00a4 00000000 		.4byte	0
 5077              	.LLST3:
 5078 00a8 14000000 		.4byte	.LVL11
 5079 00ac 1A000000 		.4byte	.LVL13
 5080 00b0 0100     		.2byte	0x1
 5081 00b2 54       		.byte	0x54
 5082 00b3 1A000000 		.4byte	.LVL13
 5083 00b7 1C000000 		.4byte	.LFE53
 5084 00bb 0100     		.2byte	0x1
 5085 00bd 50       		.byte	0x50
 5086 00be 00000000 		.4byte	0
 5087 00c2 00000000 		.4byte	0
 5088              	.LLST4:
 5089 00c6 00000000 		.4byte	.LVL14
 5090 00ca 16000000 		.4byte	.LVL18
 5091 00ce 0100     		.2byte	0x1
 5092 00d0 50       		.byte	0x50
 5093 00d1 16000000 		.4byte	.LVL18
 5094 00d5 20000000 		.4byte	.LVL20
 5095 00d9 0100     		.2byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 137


 5096 00db 54       		.byte	0x54
 5097 00dc 20000000 		.4byte	.LVL20
 5098 00e0 26000000 		.4byte	.LVL21
 5099 00e4 0100     		.2byte	0x1
 5100 00e6 50       		.byte	0x50
 5101 00e7 26000000 		.4byte	.LVL21
 5102 00eb 42000000 		.4byte	.LVL23
 5103 00ef 0100     		.2byte	0x1
 5104 00f1 54       		.byte	0x54
 5105 00f2 42000000 		.4byte	.LVL23
 5106 00f6 44000000 		.4byte	.LVL24
 5107 00fa 0100     		.2byte	0x1
 5108 00fc 50       		.byte	0x50
 5109 00fd 44000000 		.4byte	.LVL24
 5110 0101 6E000000 		.4byte	.LVL27
 5111 0105 0100     		.2byte	0x1
 5112 0107 54       		.byte	0x54
 5113 0108 6E000000 		.4byte	.LVL27
 5114 010c 70000000 		.4byte	.LVL28
 5115 0110 0100     		.2byte	0x1
 5116 0112 50       		.byte	0x50
 5117 0113 70000000 		.4byte	.LVL28
 5118 0117 80000000 		.4byte	.LVL32
 5119 011b 0100     		.2byte	0x1
 5120 011d 54       		.byte	0x54
 5121 011e 80000000 		.4byte	.LVL32
 5122 0122 82000000 		.4byte	.LFE50
 5123 0126 0400     		.2byte	0x4
 5124 0128 F3       		.byte	0xf3
 5125 0129 01       		.uleb128 0x1
 5126 012a 50       		.byte	0x50
 5127 012b 9F       		.byte	0x9f
 5128 012c 00000000 		.4byte	0
 5129 0130 00000000 		.4byte	0
 5130              	.LLST5:
 5131 0134 00000000 		.4byte	.LVL14
 5132 0138 19000000 		.4byte	.LVL19-1
 5133 013c 0100     		.2byte	0x1
 5134 013e 51       		.byte	0x51
 5135 013f 19000000 		.4byte	.LVL19-1
 5136 0143 20000000 		.4byte	.LVL20
 5137 0147 0400     		.2byte	0x4
 5138 0149 F3       		.byte	0xf3
 5139 014a 01       		.uleb128 0x1
 5140 014b 51       		.byte	0x51
 5141 014c 9F       		.byte	0x9f
 5142 014d 20000000 		.4byte	.LVL20
 5143 0151 29000000 		.4byte	.LVL22-1
 5144 0155 0100     		.2byte	0x1
 5145 0157 51       		.byte	0x51
 5146 0158 29000000 		.4byte	.LVL22-1
 5147 015c 42000000 		.4byte	.LVL23
 5148 0160 0400     		.2byte	0x4
 5149 0162 F3       		.byte	0xf3
 5150 0163 01       		.uleb128 0x1
 5151 0164 51       		.byte	0x51
 5152 0165 9F       		.byte	0x9f
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 138


 5153 0166 42000000 		.4byte	.LVL23
 5154 016a 47000000 		.4byte	.LVL25-1
 5155 016e 0100     		.2byte	0x1
 5156 0170 51       		.byte	0x51
 5157 0171 47000000 		.4byte	.LVL25-1
 5158 0175 6E000000 		.4byte	.LVL27
 5159 0179 0400     		.2byte	0x4
 5160 017b F3       		.byte	0xf3
 5161 017c 01       		.uleb128 0x1
 5162 017d 51       		.byte	0x51
 5163 017e 9F       		.byte	0x9f
 5164 017f 6E000000 		.4byte	.LVL27
 5165 0183 72000000 		.4byte	.LVL29
 5166 0187 0100     		.2byte	0x1
 5167 0189 51       		.byte	0x51
 5168 018a 72000000 		.4byte	.LVL29
 5169 018e 82000000 		.4byte	.LFE50
 5170 0192 0400     		.2byte	0x4
 5171 0194 F3       		.byte	0xf3
 5172 0195 01       		.uleb128 0x1
 5173 0196 51       		.byte	0x51
 5174 0197 9F       		.byte	0x9f
 5175 0198 00000000 		.4byte	0
 5176 019c 00000000 		.4byte	0
 5177              	.LLST6:
 5178 01a0 00000000 		.4byte	.LVL14
 5179 01a4 0A000000 		.4byte	.LVL17
 5180 01a8 0100     		.2byte	0x1
 5181 01aa 52       		.byte	0x52
 5182 01ab 0A000000 		.4byte	.LVL17
 5183 01af 80000000 		.4byte	.LVL34
 5184 01b3 0100     		.2byte	0x1
 5185 01b5 56       		.byte	0x56
 5186 01b6 80000000 		.4byte	.LVL34
 5187 01ba 82000000 		.4byte	.LFE50
 5188 01be 0400     		.2byte	0x4
 5189 01c0 F3       		.byte	0xf3
 5190 01c1 01       		.uleb128 0x1
 5191 01c2 52       		.byte	0x52
 5192 01c3 9F       		.byte	0x9f
 5193 01c4 00000000 		.4byte	0
 5194 01c8 00000000 		.4byte	0
 5195              	.LLST7:
 5196 01cc 06000000 		.4byte	.LVL15
 5197 01d0 1A000000 		.4byte	.LVL19
 5198 01d4 0200     		.2byte	0x2
 5199 01d6 30       		.byte	0x30
 5200 01d7 9F       		.byte	0x9f
 5201 01d8 1A000000 		.4byte	.LVL19
 5202 01dc 20000000 		.4byte	.LVL20
 5203 01e0 0100     		.2byte	0x1
 5204 01e2 50       		.byte	0x50
 5205 01e3 20000000 		.4byte	.LVL20
 5206 01e7 7C000000 		.4byte	.LVL30
 5207 01eb 0200     		.2byte	0x2
 5208 01ed 30       		.byte	0x30
 5209 01ee 9F       		.byte	0x9f
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 139


 5210 01ef 7C000000 		.4byte	.LVL30
 5211 01f3 82000000 		.4byte	.LFE50
 5212 01f7 0100     		.2byte	0x1
 5213 01f9 50       		.byte	0x50
 5214 01fa 00000000 		.4byte	0
 5215 01fe 00000000 		.4byte	0
 5216              	.LLST8:
 5217 0202 08000000 		.4byte	.LVL16
 5218 0206 7E000000 		.4byte	.LVL31
 5219 020a 0100     		.2byte	0x1
 5220 020c 55       		.byte	0x55
 5221 020d 7E000000 		.4byte	.LVL31
 5222 0211 80000000 		.4byte	.LVL33
 5223 0215 0300     		.2byte	0x3
 5224 0217 75       		.byte	0x75
 5225 0218 7F       		.sleb128 -1
 5226 0219 9F       		.byte	0x9f
 5227 021a 80000000 		.4byte	.LVL33
 5228 021e 82000000 		.4byte	.LFE50
 5229 0222 0900     		.2byte	0x9
 5230 0224 F3       		.byte	0xf3
 5231 0225 01       		.uleb128 0x1
 5232 0226 50       		.byte	0x50
 5233 0227 23       		.byte	0x23
 5234 0228 38       		.uleb128 0x38
 5235 0229 06       		.byte	0x6
 5236 022a 31       		.byte	0x31
 5237 022b 1C       		.byte	0x1c
 5238 022c 9F       		.byte	0x9f
 5239 022d 00000000 		.4byte	0
 5240 0231 00000000 		.4byte	0
 5241              	.LLST9:
 5242 0235 00000000 		.4byte	.LVL35
 5243 0239 1E000000 		.4byte	.LVL37
 5244 023d 0100     		.2byte	0x1
 5245 023f 50       		.byte	0x50
 5246 0240 1E000000 		.4byte	.LVL37
 5247 0244 24000000 		.4byte	.LFE51
 5248 0248 0400     		.2byte	0x4
 5249 024a F3       		.byte	0xf3
 5250 024b 01       		.uleb128 0x1
 5251 024c 50       		.byte	0x50
 5252 024d 9F       		.byte	0x9f
 5253 024e 00000000 		.4byte	0
 5254 0252 00000000 		.4byte	0
 5255              	.LLST10:
 5256 0256 00000000 		.4byte	.LVL35
 5257 025a 12000000 		.4byte	.LVL36
 5258 025e 0100     		.2byte	0x1
 5259 0260 51       		.byte	0x51
 5260 0261 12000000 		.4byte	.LVL36
 5261 0265 22000000 		.4byte	.LVL39
 5262 0269 0100     		.2byte	0x1
 5263 026b 54       		.byte	0x54
 5264 026c 22000000 		.4byte	.LVL39
 5265 0270 24000000 		.4byte	.LFE51
 5266 0274 0400     		.2byte	0x4
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 140


 5267 0276 F3       		.byte	0xf3
 5268 0277 01       		.uleb128 0x1
 5269 0278 51       		.byte	0x51
 5270 0279 9F       		.byte	0x9f
 5271 027a 00000000 		.4byte	0
 5272 027e 00000000 		.4byte	0
 5273              	.LLST11:
 5274 0282 00000000 		.4byte	.LVL40
 5275 0286 07000000 		.4byte	.LVL41-1
 5276 028a 0100     		.2byte	0x1
 5277 028c 50       		.byte	0x50
 5278 028d 07000000 		.4byte	.LVL41-1
 5279 0291 6C000000 		.4byte	.LVL57
 5280 0295 0100     		.2byte	0x1
 5281 0297 55       		.byte	0x55
 5282 0298 6C000000 		.4byte	.LVL57
 5283 029c 6E000000 		.4byte	.LFE52
 5284 02a0 0400     		.2byte	0x4
 5285 02a2 F3       		.byte	0xf3
 5286 02a3 01       		.uleb128 0x1
 5287 02a4 50       		.byte	0x50
 5288 02a5 9F       		.byte	0x9f
 5289 02a6 00000000 		.4byte	0
 5290 02aa 00000000 		.4byte	0
 5291              	.LLST12:
 5292 02ae 0E000000 		.4byte	.LVL42
 5293 02b2 28000000 		.4byte	.LVL45
 5294 02b6 0100     		.2byte	0x1
 5295 02b8 54       		.byte	0x54
 5296 02b9 2A000000 		.4byte	.LVL46
 5297 02bd 40000000 		.4byte	.LVL49
 5298 02c1 0100     		.2byte	0x1
 5299 02c3 54       		.byte	0x54
 5300 02c4 00000000 		.4byte	0
 5301 02c8 00000000 		.4byte	0
 5302              	.LLST13:
 5303 02cc 42000000 		.4byte	.LVL50
 5304 02d0 5C000000 		.4byte	.LVL53
 5305 02d4 0100     		.2byte	0x1
 5306 02d6 54       		.byte	0x54
 5307 02d7 5E000000 		.4byte	.LVL54
 5308 02db 6C000000 		.4byte	.LVL56
 5309 02df 0100     		.2byte	0x1
 5310 02e1 54       		.byte	0x54
 5311 02e2 00000000 		.4byte	0
 5312 02e6 00000000 		.4byte	0
 5313              	.LLST14:
 5314 02ea 00000000 		.4byte	.LVL58
 5315 02ee 09000000 		.4byte	.LVL60-1
 5316 02f2 0100     		.2byte	0x1
 5317 02f4 50       		.byte	0x50
 5318 02f5 09000000 		.4byte	.LVL60-1
 5319 02f9 62000000 		.4byte	.LVL66
 5320 02fd 0100     		.2byte	0x1
 5321 02ff 54       		.byte	0x54
 5322 0300 62000000 		.4byte	.LVL66
 5323 0304 64000000 		.4byte	.LFE32
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 141


 5324 0308 0400     		.2byte	0x4
 5325 030a F3       		.byte	0xf3
 5326 030b 01       		.uleb128 0x1
 5327 030c 50       		.byte	0x50
 5328 030d 9F       		.byte	0x9f
 5329 030e 00000000 		.4byte	0
 5330 0312 00000000 		.4byte	0
 5331              	.LLST15:
 5332 0316 00000000 		.4byte	.LVL58
 5333 031a 09000000 		.4byte	.LVL60-1
 5334 031e 0100     		.2byte	0x1
 5335 0320 51       		.byte	0x51
 5336 0321 09000000 		.4byte	.LVL60-1
 5337 0325 62000000 		.4byte	.LVL67
 5338 0329 0100     		.2byte	0x1
 5339 032b 55       		.byte	0x55
 5340 032c 62000000 		.4byte	.LVL67
 5341 0330 64000000 		.4byte	.LFE32
 5342 0334 0400     		.2byte	0x4
 5343 0336 F3       		.byte	0xf3
 5344 0337 01       		.uleb128 0x1
 5345 0338 51       		.byte	0x51
 5346 0339 9F       		.byte	0x9f
 5347 033a 00000000 		.4byte	0
 5348 033e 00000000 		.4byte	0
 5349              	.LLST16:
 5350 0342 06000000 		.4byte	.LVL59
 5351 0346 09000000 		.4byte	.LVL60-1
 5352 034a 0100     		.2byte	0x1
 5353 034c 50       		.byte	0x50
 5354 034d 09000000 		.4byte	.LVL60-1
 5355 0351 62000000 		.4byte	.LVL66
 5356 0355 0100     		.2byte	0x1
 5357 0357 54       		.byte	0x54
 5358 0358 62000000 		.4byte	.LVL66
 5359 035c 64000000 		.4byte	.LFE32
 5360 0360 0400     		.2byte	0x4
 5361 0362 F3       		.byte	0xf3
 5362 0363 01       		.uleb128 0x1
 5363 0364 50       		.byte	0x50
 5364 0365 9F       		.byte	0x9f
 5365 0366 00000000 		.4byte	0
 5366 036a 00000000 		.4byte	0
 5367              	.LLST17:
 5368 036e 00000000 		.4byte	.LVL68
 5369 0372 16000000 		.4byte	.LVL71
 5370 0376 0100     		.2byte	0x1
 5371 0378 50       		.byte	0x50
 5372 0379 16000000 		.4byte	.LVL71
 5373 037d 19000000 		.4byte	.LVL72-1
 5374 0381 0200     		.2byte	0x2
 5375 0383 73       		.byte	0x73
 5376 0384 3C       		.sleb128 60
 5377 0385 19000000 		.4byte	.LVL72-1
 5378 0389 1C000000 		.4byte	.LFE34
 5379 038d 0400     		.2byte	0x4
 5380 038f F3       		.byte	0xf3
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 142


 5381 0390 01       		.uleb128 0x1
 5382 0391 50       		.byte	0x50
 5383 0392 9F       		.byte	0x9f
 5384 0393 00000000 		.4byte	0
 5385 0397 00000000 		.4byte	0
 5386              	.LLST18:
 5387 039b 00000000 		.4byte	.LVL68
 5388 039f 14000000 		.4byte	.LVL70
 5389 03a3 0100     		.2byte	0x1
 5390 03a5 51       		.byte	0x51
 5391 03a6 14000000 		.4byte	.LVL70
 5392 03aa 19000000 		.4byte	.LVL72-1
 5393 03ae 0300     		.2byte	0x3
 5394 03b0 73       		.byte	0x73
 5395 03b1 C000     		.sleb128 64
 5396 03b3 19000000 		.4byte	.LVL72-1
 5397 03b7 1C000000 		.4byte	.LFE34
 5398 03bb 0400     		.2byte	0x4
 5399 03bd F3       		.byte	0xf3
 5400 03be 01       		.uleb128 0x1
 5401 03bf 51       		.byte	0x51
 5402 03c0 9F       		.byte	0x9f
 5403 03c1 00000000 		.4byte	0
 5404 03c5 00000000 		.4byte	0
 5405              	.LLST19:
 5406 03c9 00000000 		.4byte	.LVL68
 5407 03cd 19000000 		.4byte	.LVL72-1
 5408 03d1 0100     		.2byte	0x1
 5409 03d3 52       		.byte	0x52
 5410 03d4 19000000 		.4byte	.LVL72-1
 5411 03d8 1C000000 		.4byte	.LFE34
 5412 03dc 0400     		.2byte	0x4
 5413 03de F3       		.byte	0xf3
 5414 03df 01       		.uleb128 0x1
 5415 03e0 52       		.byte	0x52
 5416 03e1 9F       		.byte	0x9f
 5417 03e2 00000000 		.4byte	0
 5418 03e6 00000000 		.4byte	0
 5419              	.LLST20:
 5420 03ea 00000000 		.4byte	.LVL68
 5421 03ee 04000000 		.4byte	.LVL69
 5422 03f2 0100     		.2byte	0x1
 5423 03f4 53       		.byte	0x53
 5424 03f5 04000000 		.4byte	.LVL69
 5425 03f9 1C000000 		.4byte	.LFE34
 5426 03fd 0400     		.2byte	0x4
 5427 03ff F3       		.byte	0xf3
 5428 0400 01       		.uleb128 0x1
 5429 0401 53       		.byte	0x53
 5430 0402 9F       		.byte	0x9f
 5431 0403 00000000 		.4byte	0
 5432 0407 00000000 		.4byte	0
 5433              	.LLST21:
 5434 040b 00000000 		.4byte	.LVL73
 5435 040f 10000000 		.4byte	.LVL74
 5436 0413 0100     		.2byte	0x1
 5437 0415 50       		.byte	0x50
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 143


 5438 0416 10000000 		.4byte	.LVL74
 5439 041a 12000000 		.4byte	.LVL75
 5440 041e 0100     		.2byte	0x1
 5441 0420 55       		.byte	0x55
 5442 0421 12000000 		.4byte	.LVL75
 5443 0425 14000000 		.4byte	.LVL76
 5444 0429 0100     		.2byte	0x1
 5445 042b 50       		.byte	0x50
 5446 042c 14000000 		.4byte	.LVL76
 5447 0430 32000000 		.4byte	.LVL83
 5448 0434 0100     		.2byte	0x1
 5449 0436 55       		.byte	0x55
 5450 0437 32000000 		.4byte	.LVL83
 5451 043b 34000000 		.4byte	.LFE33
 5452 043f 0400     		.2byte	0x4
 5453 0441 F3       		.byte	0xf3
 5454 0442 01       		.uleb128 0x1
 5455 0443 50       		.byte	0x50
 5456 0444 9F       		.byte	0x9f
 5457 0445 00000000 		.4byte	0
 5458 0449 00000000 		.4byte	0
 5459              	.LLST22:
 5460 044d 00000000 		.4byte	.LVL73
 5461 0451 19000000 		.4byte	.LVL78-1
 5462 0455 0100     		.2byte	0x1
 5463 0457 51       		.byte	0x51
 5464 0458 19000000 		.4byte	.LVL78-1
 5465 045c 32000000 		.4byte	.LVL84
 5466 0460 0100     		.2byte	0x1
 5467 0462 57       		.byte	0x57
 5468 0463 32000000 		.4byte	.LVL84
 5469 0467 34000000 		.4byte	.LFE33
 5470 046b 0400     		.2byte	0x4
 5471 046d F3       		.byte	0xf3
 5472 046e 01       		.uleb128 0x1
 5473 046f 51       		.byte	0x51
 5474 0470 9F       		.byte	0x9f
 5475 0471 00000000 		.4byte	0
 5476 0475 00000000 		.4byte	0
 5477              	.LLST23:
 5478 0479 00000000 		.4byte	.LVL73
 5479 047d 19000000 		.4byte	.LVL78-1
 5480 0481 0100     		.2byte	0x1
 5481 0483 52       		.byte	0x52
 5482 0484 19000000 		.4byte	.LVL78-1
 5483 0488 34000000 		.4byte	.LFE33
 5484 048c 0400     		.2byte	0x4
 5485 048e F3       		.byte	0xf3
 5486 048f 01       		.uleb128 0x1
 5487 0490 52       		.byte	0x52
 5488 0491 9F       		.byte	0x9f
 5489 0492 00000000 		.4byte	0
 5490 0496 00000000 		.4byte	0
 5491              	.LLST24:
 5492 049a 1C000000 		.4byte	.LVL79
 5493 049e 2A000000 		.4byte	.LVL80
 5494 04a2 0100     		.2byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 144


 5495 04a4 50       		.byte	0x50
 5496 04a5 2A000000 		.4byte	.LVL80
 5497 04a9 32000000 		.4byte	.LVL82
 5498 04ad 0100     		.2byte	0x1
 5499 04af 54       		.byte	0x54
 5500 04b0 32000000 		.4byte	.LVL82
 5501 04b4 34000000 		.4byte	.LFE33
 5502 04b8 0100     		.2byte	0x1
 5503 04ba 50       		.byte	0x50
 5504 04bb 00000000 		.4byte	0
 5505 04bf 00000000 		.4byte	0
 5506              	.LLST25:
 5507 04c3 10000000 		.4byte	.LVL74
 5508 04c7 12000000 		.4byte	.LVL75
 5509 04cb 0100     		.2byte	0x1
 5510 04cd 50       		.byte	0x50
 5511 04ce 14000000 		.4byte	.LVL76
 5512 04d2 16000000 		.4byte	.LVL77
 5513 04d6 0100     		.2byte	0x1
 5514 04d8 50       		.byte	0x50
 5515 04d9 16000000 		.4byte	.LVL77
 5516 04dd 19000000 		.4byte	.LVL78-1
 5517 04e1 0400     		.2byte	0x4
 5518 04e3 70       		.byte	0x70
 5519 04e4 B87F     		.sleb128 -72
 5520 04e6 9F       		.byte	0x9f
 5521 04e7 00000000 		.4byte	0
 5522 04eb 00000000 		.4byte	0
 5523              	.LLST26:
 5524 04ef 00000000 		.4byte	.LVL85
 5525 04f3 0B000000 		.4byte	.LVL87-1
 5526 04f7 0100     		.2byte	0x1
 5527 04f9 50       		.byte	0x50
 5528 04fa 0B000000 		.4byte	.LVL87-1
 5529 04fe 14000000 		.4byte	.LFE39
 5530 0502 0400     		.2byte	0x4
 5531 0504 F3       		.byte	0xf3
 5532 0505 01       		.uleb128 0x1
 5533 0506 50       		.byte	0x50
 5534 0507 9F       		.byte	0x9f
 5535 0508 00000000 		.4byte	0
 5536 050c 00000000 		.4byte	0
 5537              	.LLST27:
 5538 0510 00000000 		.4byte	.LVL85
 5539 0514 08000000 		.4byte	.LVL86
 5540 0518 0100     		.2byte	0x1
 5541 051a 51       		.byte	0x51
 5542 051b 08000000 		.4byte	.LVL86
 5543 051f 12000000 		.4byte	.LVL88
 5544 0523 0100     		.2byte	0x1
 5545 0525 54       		.byte	0x54
 5546 0526 12000000 		.4byte	.LVL88
 5547 052a 14000000 		.4byte	.LFE39
 5548 052e 0400     		.2byte	0x4
 5549 0530 F3       		.byte	0xf3
 5550 0531 01       		.uleb128 0x1
 5551 0532 51       		.byte	0x51
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 145


 5552 0533 9F       		.byte	0x9f
 5553 0534 00000000 		.4byte	0
 5554 0538 00000000 		.4byte	0
 5555              	.LLST28:
 5556 053c 00000000 		.4byte	.LVL89
 5557 0540 0E000000 		.4byte	.LVL91
 5558 0544 0100     		.2byte	0x1
 5559 0546 50       		.byte	0x50
 5560 0547 0E000000 		.4byte	.LVL91
 5561 054b E8000000 		.4byte	.LVL118
 5562 054f 0100     		.2byte	0x1
 5563 0551 54       		.byte	0x54
 5564 0552 E8000000 		.4byte	.LVL118
 5565 0556 EA000000 		.4byte	.LFE40
 5566 055a 0400     		.2byte	0x4
 5567 055c F3       		.byte	0xf3
 5568 055d 01       		.uleb128 0x1
 5569 055e 50       		.byte	0x50
 5570 055f 9F       		.byte	0x9f
 5571 0560 00000000 		.4byte	0
 5572 0564 00000000 		.4byte	0
 5573              	.LLST29:
 5574 0568 00000000 		.4byte	.LVL89
 5575 056c 0E000000 		.4byte	.LVL91
 5576 0570 0100     		.2byte	0x1
 5577 0572 51       		.byte	0x51
 5578 0573 0E000000 		.4byte	.LVL91
 5579 0577 E8000000 		.4byte	.LVL119
 5580 057b 0100     		.2byte	0x1
 5581 057d 55       		.byte	0x55
 5582 057e E8000000 		.4byte	.LVL119
 5583 0582 EA000000 		.4byte	.LFE40
 5584 0586 0400     		.2byte	0x4
 5585 0588 F3       		.byte	0xf3
 5586 0589 01       		.uleb128 0x1
 5587 058a 51       		.byte	0x51
 5588 058b 9F       		.byte	0x9f
 5589 058c 00000000 		.4byte	0
 5590 0590 00000000 		.4byte	0
 5591              	.LLST30:
 5592 0594 00000000 		.4byte	.LVL89
 5593 0598 0E000000 		.4byte	.LVL91
 5594 059c 0100     		.2byte	0x1
 5595 059e 52       		.byte	0x52
 5596 059f 0E000000 		.4byte	.LVL91
 5597 05a3 9C000000 		.4byte	.LVL107
 5598 05a7 0200     		.2byte	0x2
 5599 05a9 91       		.byte	0x91
 5600 05aa 5C       		.sleb128 -36
 5601 05ab 9C000000 		.4byte	.LVL107
 5602 05af A1000000 		.4byte	.LVL108-1
 5603 05b3 0200     		.2byte	0x2
 5604 05b5 71       		.byte	0x71
 5605 05b6 00       		.sleb128 0
 5606 05b7 A1000000 		.4byte	.LVL108-1
 5607 05bb EA000000 		.4byte	.LFE40
 5608 05bf 0200     		.2byte	0x2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 146


 5609 05c1 91       		.byte	0x91
 5610 05c2 5C       		.sleb128 -36
 5611 05c3 00000000 		.4byte	0
 5612 05c7 00000000 		.4byte	0
 5613              	.LLST31:
 5614 05cb 00000000 		.4byte	.LVL89
 5615 05cf 0E000000 		.4byte	.LVL91
 5616 05d3 0100     		.2byte	0x1
 5617 05d5 53       		.byte	0x53
 5618 05d6 0E000000 		.4byte	.LVL91
 5619 05da E8000000 		.4byte	.LVL121
 5620 05de 0100     		.2byte	0x1
 5621 05e0 57       		.byte	0x57
 5622 05e1 E8000000 		.4byte	.LVL121
 5623 05e5 EA000000 		.4byte	.LFE40
 5624 05e9 0400     		.2byte	0x4
 5625 05eb F3       		.byte	0xf3
 5626 05ec 01       		.uleb128 0x1
 5627 05ed 53       		.byte	0x53
 5628 05ee 9F       		.byte	0x9f
 5629 05ef 00000000 		.4byte	0
 5630 05f3 00000000 		.4byte	0
 5631              	.LLST32:
 5632 05f7 0C000000 		.4byte	.LVL90
 5633 05fb 0E000000 		.4byte	.LVL91
 5634 05ff 0200     		.2byte	0x2
 5635 0601 30       		.byte	0x30
 5636 0602 9F       		.byte	0x9f
 5637 0603 0E000000 		.4byte	.LVL91
 5638 0607 68000000 		.4byte	.LVL101
 5639 060b 0100     		.2byte	0x1
 5640 060d 56       		.byte	0x56
 5641 060e 68000000 		.4byte	.LVL101
 5642 0612 6A000000 		.4byte	.LVL102
 5643 0616 0200     		.2byte	0x2
 5644 0618 31       		.byte	0x31
 5645 0619 9F       		.byte	0x9f
 5646 061a 6A000000 		.4byte	.LVL102
 5647 061e E8000000 		.4byte	.LVL120
 5648 0622 0100     		.2byte	0x1
 5649 0624 56       		.byte	0x56
 5650 0625 00000000 		.4byte	0
 5651 0629 00000000 		.4byte	0
 5652              	.LLST33:
 5653 062d 28000000 		.4byte	.LVL93
 5654 0631 30000000 		.4byte	.LVL94
 5655 0635 0100     		.2byte	0x1
 5656 0637 50       		.byte	0x50
 5657 0638 40000000 		.4byte	.LVL97
 5658 063c 47000000 		.4byte	.LVL98-1
 5659 0640 0100     		.2byte	0x1
 5660 0642 50       		.byte	0x50
 5661 0643 00000000 		.4byte	0
 5662 0647 00000000 		.4byte	0
 5663              	.LLST34:
 5664 064b 0C000000 		.4byte	.LVL90
 5665 064f 0E000000 		.4byte	.LVL91
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 147


 5666 0653 0100     		.2byte	0x1
 5667 0655 50       		.byte	0x50
 5668 0656 0E000000 		.4byte	.LVL91
 5669 065a E8000000 		.4byte	.LVL118
 5670 065e 0100     		.2byte	0x1
 5671 0660 54       		.byte	0x54
 5672 0661 E8000000 		.4byte	.LVL118
 5673 0665 EA000000 		.4byte	.LFE40
 5674 0669 0400     		.2byte	0x4
 5675 066b F3       		.byte	0xf3
 5676 066c 01       		.uleb128 0x1
 5677 066d 50       		.byte	0x50
 5678 066e 9F       		.byte	0x9f
 5679 066f 00000000 		.4byte	0
 5680 0673 00000000 		.4byte	0
 5681              	.LLST35:
 5682 0677 00000000 		.4byte	.LVL122
 5683 067b 15000000 		.4byte	.LVL123-1
 5684 067f 0100     		.2byte	0x1
 5685 0681 50       		.byte	0x50
 5686 0682 15000000 		.4byte	.LVL123-1
 5687 0686 18000000 		.4byte	.LFE35
 5688 068a 0400     		.2byte	0x4
 5689 068c F3       		.byte	0xf3
 5690 068d 01       		.uleb128 0x1
 5691 068e 50       		.byte	0x50
 5692 068f 9F       		.byte	0x9f
 5693 0690 00000000 		.4byte	0
 5694 0694 00000000 		.4byte	0
 5695              	.LLST36:
 5696 0698 00000000 		.4byte	.LVL124
 5697 069c 08000000 		.4byte	.LVL126
 5698 06a0 0100     		.2byte	0x1
 5699 06a2 50       		.byte	0x50
 5700 06a3 08000000 		.4byte	.LVL126
 5701 06a7 16000000 		.4byte	.LFE36
 5702 06ab 0400     		.2byte	0x4
 5703 06ad F3       		.byte	0xf3
 5704 06ae 01       		.uleb128 0x1
 5705 06af 50       		.byte	0x50
 5706 06b0 9F       		.byte	0x9f
 5707 06b1 00000000 		.4byte	0
 5708 06b5 00000000 		.4byte	0
 5709              	.LLST37:
 5710 06b9 0E000000 		.4byte	.LVL128
 5711 06bd 11000000 		.4byte	.LVL129-1
 5712 06c1 0100     		.2byte	0x1
 5713 06c3 50       		.byte	0x50
 5714 06c4 11000000 		.4byte	.LVL129-1
 5715 06c8 14000000 		.4byte	.LVL130
 5716 06cc 0100     		.2byte	0x1
 5717 06ce 54       		.byte	0x54
 5718 06cf 14000000 		.4byte	.LVL130
 5719 06d3 16000000 		.4byte	.LFE36
 5720 06d7 0100     		.2byte	0x1
 5721 06d9 50       		.byte	0x50
 5722 06da 00000000 		.4byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 148


 5723 06de 00000000 		.4byte	0
 5724              	.LLST38:
 5725 06e2 00000000 		.4byte	.LVL131
 5726 06e6 09000000 		.4byte	.LVL133-1
 5727 06ea 0100     		.2byte	0x1
 5728 06ec 50       		.byte	0x50
 5729 06ed 09000000 		.4byte	.LVL133-1
 5730 06f1 2C000000 		.4byte	.LVL136
 5731 06f5 0100     		.2byte	0x1
 5732 06f7 54       		.byte	0x54
 5733 06f8 2C000000 		.4byte	.LVL136
 5734 06fc 2E000000 		.4byte	.LFE37
 5735 0700 0400     		.2byte	0x4
 5736 0702 F3       		.byte	0xf3
 5737 0703 01       		.uleb128 0x1
 5738 0704 50       		.byte	0x50
 5739 0705 9F       		.byte	0x9f
 5740 0706 00000000 		.4byte	0
 5741 070a 00000000 		.4byte	0
 5742              	.LLST39:
 5743 070e 04000000 		.4byte	.LVL132
 5744 0712 09000000 		.4byte	.LVL133-1
 5745 0716 0100     		.2byte	0x1
 5746 0718 50       		.byte	0x50
 5747 0719 09000000 		.4byte	.LVL133-1
 5748 071d 2C000000 		.4byte	.LVL136
 5749 0721 0100     		.2byte	0x1
 5750 0723 54       		.byte	0x54
 5751 0724 2C000000 		.4byte	.LVL136
 5752 0728 2E000000 		.4byte	.LFE37
 5753 072c 0400     		.2byte	0x4
 5754 072e F3       		.byte	0xf3
 5755 072f 01       		.uleb128 0x1
 5756 0730 50       		.byte	0x50
 5757 0731 9F       		.byte	0x9f
 5758 0732 00000000 		.4byte	0
 5759 0736 00000000 		.4byte	0
 5760              	.LLST40:
 5761 073a 00000000 		.4byte	.LVL137
 5762 073e 0F000000 		.4byte	.LVL139-1
 5763 0742 0100     		.2byte	0x1
 5764 0744 50       		.byte	0x50
 5765 0745 0F000000 		.4byte	.LVL139-1
 5766 0749 76000000 		.4byte	.LVL160
 5767 074d 0100     		.2byte	0x1
 5768 074f 56       		.byte	0x56
 5769 0750 76000000 		.4byte	.LVL160
 5770 0754 78000000 		.4byte	.LFE41
 5771 0758 0400     		.2byte	0x4
 5772 075a F3       		.byte	0xf3
 5773 075b 01       		.uleb128 0x1
 5774 075c 50       		.byte	0x50
 5775 075d 9F       		.byte	0x9f
 5776 075e 00000000 		.4byte	0
 5777 0762 00000000 		.4byte	0
 5778              	.LLST41:
 5779 0766 00000000 		.4byte	.LVL137
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 149


 5780 076a 0F000000 		.4byte	.LVL139-1
 5781 076e 0100     		.2byte	0x1
 5782 0770 51       		.byte	0x51
 5783 0771 0F000000 		.4byte	.LVL139-1
 5784 0775 76000000 		.4byte	.LVL157
 5785 0779 0200     		.2byte	0x2
 5786 077b 7D       		.byte	0x7d
 5787 077c 00       		.sleb128 0
 5788 077d 76000000 		.4byte	.LVL157
 5789 0781 78000000 		.4byte	.LFE41
 5790 0785 0200     		.2byte	0x2
 5791 0787 91       		.byte	0x91
 5792 0788 60       		.sleb128 -32
 5793 0789 00000000 		.4byte	0
 5794 078d 00000000 		.4byte	0
 5795              	.LLST42:
 5796 0791 00000000 		.4byte	.LVL137
 5797 0795 0F000000 		.4byte	.LVL139-1
 5798 0799 0100     		.2byte	0x1
 5799 079b 52       		.byte	0x52
 5800 079c 0F000000 		.4byte	.LVL139-1
 5801 07a0 78000000 		.4byte	.LFE41
 5802 07a4 0200     		.2byte	0x2
 5803 07a6 91       		.byte	0x91
 5804 07a7 64       		.sleb128 -28
 5805 07a8 00000000 		.4byte	0
 5806 07ac 00000000 		.4byte	0
 5807              	.LLST43:
 5808 07b0 00000000 		.4byte	.LVL137
 5809 07b4 0F000000 		.4byte	.LVL139-1
 5810 07b8 0100     		.2byte	0x1
 5811 07ba 53       		.byte	0x53
 5812 07bb 0F000000 		.4byte	.LVL139-1
 5813 07bf 50000000 		.4byte	.LVL145
 5814 07c3 0100     		.2byte	0x1
 5815 07c5 54       		.byte	0x54
 5816 07c6 50000000 		.4byte	.LVL145
 5817 07ca 52000000 		.4byte	.LVL146
 5818 07ce 0400     		.2byte	0x4
 5819 07d0 F3       		.byte	0xf3
 5820 07d1 01       		.uleb128 0x1
 5821 07d2 53       		.byte	0x53
 5822 07d3 9F       		.byte	0x9f
 5823 07d4 52000000 		.4byte	.LVL146
 5824 07d8 5C000000 		.4byte	.LVL147
 5825 07dc 0100     		.2byte	0x1
 5826 07de 54       		.byte	0x54
 5827 07df 5C000000 		.4byte	.LVL147
 5828 07e3 5E000000 		.4byte	.LVL148
 5829 07e7 0400     		.2byte	0x4
 5830 07e9 F3       		.byte	0xf3
 5831 07ea 01       		.uleb128 0x1
 5832 07eb 53       		.byte	0x53
 5833 07ec 9F       		.byte	0x9f
 5834 07ed 5E000000 		.4byte	.LVL148
 5835 07f1 60000000 		.4byte	.LVL149
 5836 07f5 0100     		.2byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 150


 5837 07f7 54       		.byte	0x54
 5838 07f8 60000000 		.4byte	.LVL149
 5839 07fc 62000000 		.4byte	.LVL150
 5840 0800 0400     		.2byte	0x4
 5841 0802 F3       		.byte	0xf3
 5842 0803 01       		.uleb128 0x1
 5843 0804 53       		.byte	0x53
 5844 0805 9F       		.byte	0x9f
 5845 0806 62000000 		.4byte	.LVL150
 5846 080a 64000000 		.4byte	.LVL151
 5847 080e 0100     		.2byte	0x1
 5848 0810 54       		.byte	0x54
 5849 0811 64000000 		.4byte	.LVL151
 5850 0815 66000000 		.4byte	.LVL152
 5851 0819 0400     		.2byte	0x4
 5852 081b F3       		.byte	0xf3
 5853 081c 01       		.uleb128 0x1
 5854 081d 53       		.byte	0x53
 5855 081e 9F       		.byte	0x9f
 5856 081f 66000000 		.4byte	.LVL152
 5857 0823 68000000 		.4byte	.LVL153
 5858 0827 0100     		.2byte	0x1
 5859 0829 54       		.byte	0x54
 5860 082a 68000000 		.4byte	.LVL153
 5861 082e 6A000000 		.4byte	.LVL154
 5862 0832 0400     		.2byte	0x4
 5863 0834 F3       		.byte	0xf3
 5864 0835 01       		.uleb128 0x1
 5865 0836 53       		.byte	0x53
 5866 0837 9F       		.byte	0x9f
 5867 0838 6A000000 		.4byte	.LVL154
 5868 083c 6C000000 		.4byte	.LVL155
 5869 0840 0100     		.2byte	0x1
 5870 0842 54       		.byte	0x54
 5871 0843 6C000000 		.4byte	.LVL155
 5872 0847 78000000 		.4byte	.LFE41
 5873 084b 0400     		.2byte	0x4
 5874 084d F3       		.byte	0xf3
 5875 084e 01       		.uleb128 0x1
 5876 084f 53       		.byte	0x53
 5877 0850 9F       		.byte	0x9f
 5878 0851 00000000 		.4byte	0
 5879 0855 00000000 		.4byte	0
 5880              	.LLST44:
 5881 0859 6C000000 		.4byte	.LVL155
 5882 085d 76000000 		.4byte	.LVL158
 5883 0861 0100     		.2byte	0x1
 5884 0863 54       		.byte	0x54
 5885 0864 76000000 		.4byte	.LVL158
 5886 0868 78000000 		.4byte	.LFE41
 5887 086c 0100     		.2byte	0x1
 5888 086e 50       		.byte	0x50
 5889 086f 00000000 		.4byte	0
 5890 0873 00000000 		.4byte	0
 5891              	.LLST45:
 5892 0877 12000000 		.4byte	.LVL140
 5893 087b 2A000000 		.4byte	.LVL142
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 151


 5894 087f 0100     		.2byte	0x1
 5895 0881 50       		.byte	0x50
 5896 0882 2A000000 		.4byte	.LVL142
 5897 0886 5E000000 		.4byte	.LVL148
 5898 088a 0100     		.2byte	0x1
 5899 088c 55       		.byte	0x55
 5900 088d 5E000000 		.4byte	.LVL148
 5901 0891 62000000 		.4byte	.LVL150
 5902 0895 0100     		.2byte	0x1
 5903 0897 50       		.byte	0x50
 5904 0898 62000000 		.4byte	.LVL150
 5905 089c 76000000 		.4byte	.LVL159
 5906 08a0 0100     		.2byte	0x1
 5907 08a2 55       		.byte	0x55
 5908 08a3 00000000 		.4byte	0
 5909 08a7 00000000 		.4byte	0
 5910              	.LLST46:
 5911 08ab 0C000000 		.4byte	.LVL138
 5912 08af 0F000000 		.4byte	.LVL139-1
 5913 08b3 0100     		.2byte	0x1
 5914 08b5 50       		.byte	0x50
 5915 08b6 0F000000 		.4byte	.LVL139-1
 5916 08ba 76000000 		.4byte	.LVL160
 5917 08be 0100     		.2byte	0x1
 5918 08c0 56       		.byte	0x56
 5919 08c1 76000000 		.4byte	.LVL160
 5920 08c5 78000000 		.4byte	.LFE41
 5921 08c9 0400     		.2byte	0x4
 5922 08cb F3       		.byte	0xf3
 5923 08cc 01       		.uleb128 0x1
 5924 08cd 50       		.byte	0x50
 5925 08ce 9F       		.byte	0x9f
 5926 08cf 00000000 		.4byte	0
 5927 08d3 00000000 		.4byte	0
 5928              	.LLST47:
 5929 08d7 24000000 		.4byte	.LVL141
 5930 08db 5E000000 		.4byte	.LVL148
 5931 08df 0100     		.2byte	0x1
 5932 08e1 57       		.byte	0x57
 5933 08e2 62000000 		.4byte	.LVL150
 5934 08e6 6C000000 		.4byte	.LVL155
 5935 08ea 0100     		.2byte	0x1
 5936 08ec 57       		.byte	0x57
 5937 08ed 00000000 		.4byte	0
 5938 08f1 00000000 		.4byte	0
 5939              	.LLST48:
 5940 08f5 00000000 		.4byte	.LVL161
 5941 08f9 09000000 		.4byte	.LVL163-1
 5942 08fd 0100     		.2byte	0x1
 5943 08ff 50       		.byte	0x50
 5944 0900 09000000 		.4byte	.LVL163-1
 5945 0904 3E000000 		.4byte	.LVL172
 5946 0908 0100     		.2byte	0x1
 5947 090a 54       		.byte	0x54
 5948 090b 3E000000 		.4byte	.LVL172
 5949 090f 40000000 		.4byte	.LVL173
 5950 0913 0400     		.2byte	0x4
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 152


 5951 0915 F3       		.byte	0xf3
 5952 0916 01       		.uleb128 0x1
 5953 0917 50       		.byte	0x50
 5954 0918 9F       		.byte	0x9f
 5955 0919 40000000 		.4byte	.LVL173
 5956 091d 4A000000 		.4byte	.LVL177
 5957 0921 0100     		.2byte	0x1
 5958 0923 54       		.byte	0x54
 5959 0924 4A000000 		.4byte	.LVL177
 5960 0928 4C000000 		.4byte	.LVL178
 5961 092c 0400     		.2byte	0x4
 5962 092e F3       		.byte	0xf3
 5963 092f 01       		.uleb128 0x1
 5964 0930 50       		.byte	0x50
 5965 0931 9F       		.byte	0x9f
 5966 0932 4C000000 		.4byte	.LVL178
 5967 0936 4E000000 		.4byte	.LVL179
 5968 093a 0100     		.2byte	0x1
 5969 093c 54       		.byte	0x54
 5970 093d 4E000000 		.4byte	.LVL179
 5971 0941 50000000 		.4byte	.LVL180
 5972 0945 0400     		.2byte	0x4
 5973 0947 F3       		.byte	0xf3
 5974 0948 01       		.uleb128 0x1
 5975 0949 50       		.byte	0x50
 5976 094a 9F       		.byte	0x9f
 5977 094b 50000000 		.4byte	.LVL180
 5978 094f 52000000 		.4byte	.LVL181
 5979 0953 0100     		.2byte	0x1
 5980 0955 54       		.byte	0x54
 5981 0956 52000000 		.4byte	.LVL181
 5982 095a 54000000 		.4byte	.LVL182
 5983 095e 0400     		.2byte	0x4
 5984 0960 F3       		.byte	0xf3
 5985 0961 01       		.uleb128 0x1
 5986 0962 50       		.byte	0x50
 5987 0963 9F       		.byte	0x9f
 5988 0964 54000000 		.4byte	.LVL182
 5989 0968 56000000 		.4byte	.LVL183
 5990 096c 0100     		.2byte	0x1
 5991 096e 54       		.byte	0x54
 5992 096f 56000000 		.4byte	.LVL183
 5993 0973 58000000 		.4byte	.LVL184
 5994 0977 0400     		.2byte	0x4
 5995 0979 F3       		.byte	0xf3
 5996 097a 01       		.uleb128 0x1
 5997 097b 50       		.byte	0x50
 5998 097c 9F       		.byte	0x9f
 5999 097d 58000000 		.4byte	.LVL184
 6000 0981 5A000000 		.4byte	.LVL185
 6001 0985 0100     		.2byte	0x1
 6002 0987 54       		.byte	0x54
 6003 0988 5A000000 		.4byte	.LVL185
 6004 098c 64000000 		.4byte	.LFE42
 6005 0990 0400     		.2byte	0x4
 6006 0992 F3       		.byte	0xf3
 6007 0993 01       		.uleb128 0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 153


 6008 0994 50       		.byte	0x50
 6009 0995 9F       		.byte	0x9f
 6010 0996 00000000 		.4byte	0
 6011 099a 00000000 		.4byte	0
 6012              	.LLST49:
 6013 099e 00000000 		.4byte	.LVL161
 6014 09a2 09000000 		.4byte	.LVL163-1
 6015 09a6 0100     		.2byte	0x1
 6016 09a8 51       		.byte	0x51
 6017 09a9 09000000 		.4byte	.LVL163-1
 6018 09ad 62000000 		.4byte	.LVL189
 6019 09b1 0100     		.2byte	0x1
 6020 09b3 56       		.byte	0x56
 6021 09b4 62000000 		.4byte	.LVL189
 6022 09b8 64000000 		.4byte	.LFE42
 6023 09bc 0400     		.2byte	0x4
 6024 09be F3       		.byte	0xf3
 6025 09bf 01       		.uleb128 0x1
 6026 09c0 51       		.byte	0x51
 6027 09c1 9F       		.byte	0x9f
 6028 09c2 00000000 		.4byte	0
 6029 09c6 00000000 		.4byte	0
 6030              	.LLST50:
 6031 09ca 5A000000 		.4byte	.LVL185
 6032 09ce 62000000 		.4byte	.LVL187
 6033 09d2 0100     		.2byte	0x1
 6034 09d4 54       		.byte	0x54
 6035 09d5 62000000 		.4byte	.LVL187
 6036 09d9 64000000 		.4byte	.LFE42
 6037 09dd 0100     		.2byte	0x1
 6038 09df 50       		.byte	0x50
 6039 09e0 00000000 		.4byte	0
 6040 09e4 00000000 		.4byte	0
 6041              	.LLST51:
 6042 09e8 0C000000 		.4byte	.LVL164
 6043 09ec 2A000000 		.4byte	.LVL170
 6044 09f0 0100     		.2byte	0x1
 6045 09f2 50       		.byte	0x50
 6046 09f3 2A000000 		.4byte	.LVL170
 6047 09f7 40000000 		.4byte	.LVL173
 6048 09fb 0100     		.2byte	0x1
 6049 09fd 55       		.byte	0x55
 6050 09fe 40000000 		.4byte	.LVL173
 6051 0a02 54000000 		.4byte	.LVL182
 6052 0a06 0100     		.2byte	0x1
 6053 0a08 50       		.byte	0x50
 6054 0a09 54000000 		.4byte	.LVL182
 6055 0a0d 62000000 		.4byte	.LVL188
 6056 0a11 0100     		.2byte	0x1
 6057 0a13 55       		.byte	0x55
 6058 0a14 00000000 		.4byte	0
 6059 0a18 00000000 		.4byte	0
 6060              	.LLST52:
 6061 0a1c 06000000 		.4byte	.LVL162
 6062 0a20 09000000 		.4byte	.LVL163-1
 6063 0a24 0100     		.2byte	0x1
 6064 0a26 50       		.byte	0x50
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 154


 6065 0a27 09000000 		.4byte	.LVL163-1
 6066 0a2b 3E000000 		.4byte	.LVL172
 6067 0a2f 0100     		.2byte	0x1
 6068 0a31 54       		.byte	0x54
 6069 0a32 3E000000 		.4byte	.LVL172
 6070 0a36 40000000 		.4byte	.LVL173
 6071 0a3a 0400     		.2byte	0x4
 6072 0a3c F3       		.byte	0xf3
 6073 0a3d 01       		.uleb128 0x1
 6074 0a3e 50       		.byte	0x50
 6075 0a3f 9F       		.byte	0x9f
 6076 0a40 40000000 		.4byte	.LVL173
 6077 0a44 4A000000 		.4byte	.LVL177
 6078 0a48 0100     		.2byte	0x1
 6079 0a4a 54       		.byte	0x54
 6080 0a4b 4A000000 		.4byte	.LVL177
 6081 0a4f 4C000000 		.4byte	.LVL178
 6082 0a53 0400     		.2byte	0x4
 6083 0a55 F3       		.byte	0xf3
 6084 0a56 01       		.uleb128 0x1
 6085 0a57 50       		.byte	0x50
 6086 0a58 9F       		.byte	0x9f
 6087 0a59 4C000000 		.4byte	.LVL178
 6088 0a5d 4E000000 		.4byte	.LVL179
 6089 0a61 0100     		.2byte	0x1
 6090 0a63 54       		.byte	0x54
 6091 0a64 4E000000 		.4byte	.LVL179
 6092 0a68 50000000 		.4byte	.LVL180
 6093 0a6c 0400     		.2byte	0x4
 6094 0a6e F3       		.byte	0xf3
 6095 0a6f 01       		.uleb128 0x1
 6096 0a70 50       		.byte	0x50
 6097 0a71 9F       		.byte	0x9f
 6098 0a72 50000000 		.4byte	.LVL180
 6099 0a76 52000000 		.4byte	.LVL181
 6100 0a7a 0100     		.2byte	0x1
 6101 0a7c 54       		.byte	0x54
 6102 0a7d 52000000 		.4byte	.LVL181
 6103 0a81 54000000 		.4byte	.LVL182
 6104 0a85 0400     		.2byte	0x4
 6105 0a87 F3       		.byte	0xf3
 6106 0a88 01       		.uleb128 0x1
 6107 0a89 50       		.byte	0x50
 6108 0a8a 9F       		.byte	0x9f
 6109 0a8b 54000000 		.4byte	.LVL182
 6110 0a8f 56000000 		.4byte	.LVL183
 6111 0a93 0100     		.2byte	0x1
 6112 0a95 54       		.byte	0x54
 6113 0a96 56000000 		.4byte	.LVL183
 6114 0a9a 58000000 		.4byte	.LVL184
 6115 0a9e 0400     		.2byte	0x4
 6116 0aa0 F3       		.byte	0xf3
 6117 0aa1 01       		.uleb128 0x1
 6118 0aa2 50       		.byte	0x50
 6119 0aa3 9F       		.byte	0x9f
 6120 0aa4 58000000 		.4byte	.LVL184
 6121 0aa8 5A000000 		.4byte	.LVL185
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 155


 6122 0aac 0100     		.2byte	0x1
 6123 0aae 54       		.byte	0x54
 6124 0aaf 5A000000 		.4byte	.LVL185
 6125 0ab3 64000000 		.4byte	.LFE42
 6126 0ab7 0400     		.2byte	0x4
 6127 0ab9 F3       		.byte	0xf3
 6128 0aba 01       		.uleb128 0x1
 6129 0abb 50       		.byte	0x50
 6130 0abc 9F       		.byte	0x9f
 6131 0abd 00000000 		.4byte	0
 6132 0ac1 00000000 		.4byte	0
 6133              	.LLST53:
 6134 0ac5 0E000000 		.4byte	.LVL165
 6135 0ac9 1C000000 		.4byte	.LVL167
 6136 0acd 0100     		.2byte	0x1
 6137 0acf 52       		.byte	0x52
 6138 0ad0 1C000000 		.4byte	.LVL167
 6139 0ad4 22000000 		.4byte	.LVL168
 6140 0ad8 0300     		.2byte	0x3
 6141 0ada 72       		.byte	0x72
 6142 0adb 7F       		.sleb128 -1
 6143 0adc 9F       		.byte	0x9f
 6144 0add 22000000 		.4byte	.LVL168
 6145 0ae1 2F000000 		.4byte	.LVL171-1
 6146 0ae5 0600     		.2byte	0x6
 6147 0ae7 74       		.byte	0x74
 6148 0ae8 38       		.sleb128 56
 6149 0ae9 06       		.byte	0x6
 6150 0aea 31       		.byte	0x31
 6151 0aeb 1C       		.byte	0x1c
 6152 0aec 9F       		.byte	0x9f
 6153 0aed 40000000 		.4byte	.LVL173
 6154 0af1 48000000 		.4byte	.LVL176
 6155 0af5 0600     		.2byte	0x6
 6156 0af7 74       		.byte	0x74
 6157 0af8 38       		.sleb128 56
 6158 0af9 06       		.byte	0x6
 6159 0afa 31       		.byte	0x31
 6160 0afb 1C       		.byte	0x1c
 6161 0afc 9F       		.byte	0x9f
 6162 0afd 4C000000 		.4byte	.LVL178
 6163 0b01 50000000 		.4byte	.LVL180
 6164 0b05 0100     		.2byte	0x1
 6165 0b07 52       		.byte	0x52
 6166 0b08 50000000 		.4byte	.LVL180
 6167 0b0c 52000000 		.4byte	.LVL181
 6168 0b10 0600     		.2byte	0x6
 6169 0b12 74       		.byte	0x74
 6170 0b13 38       		.sleb128 56
 6171 0b14 06       		.byte	0x6
 6172 0b15 31       		.byte	0x31
 6173 0b16 1C       		.byte	0x1c
 6174 0b17 9F       		.byte	0x9f
 6175 0b18 52000000 		.4byte	.LVL181
 6176 0b1c 54000000 		.4byte	.LVL182
 6177 0b20 0900     		.2byte	0x9
 6178 0b22 F3       		.byte	0xf3
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 156


 6179 0b23 01       		.uleb128 0x1
 6180 0b24 50       		.byte	0x50
 6181 0b25 23       		.byte	0x23
 6182 0b26 38       		.uleb128 0x38
 6183 0b27 06       		.byte	0x6
 6184 0b28 31       		.byte	0x31
 6185 0b29 1C       		.byte	0x1c
 6186 0b2a 9F       		.byte	0x9f
 6187 0b2b 00000000 		.4byte	0
 6188 0b2f 00000000 		.4byte	0
 6189              	.LLST54:
 6190 0b33 1A000000 		.4byte	.LVL166
 6191 0b37 24000000 		.4byte	.LVL169
 6192 0b3b 0100     		.2byte	0x1
 6193 0b3d 53       		.byte	0x53
 6194 0b3e 40000000 		.4byte	.LVL173
 6195 0b42 42000000 		.4byte	.LVL174
 6196 0b46 0100     		.2byte	0x1
 6197 0b48 53       		.byte	0x53
 6198 0b49 42000000 		.4byte	.LVL174
 6199 0b4d 44000000 		.4byte	.LVL175
 6200 0b51 0300     		.2byte	0x3
 6201 0b53 73       		.byte	0x73
 6202 0b54 7F       		.sleb128 -1
 6203 0b55 9F       		.byte	0x9f
 6204 0b56 00000000 		.4byte	0
 6205 0b5a 00000000 		.4byte	0
 6206              	.LLST55:
 6207 0b5e 00000000 		.4byte	.LVL190
 6208 0b62 0E000000 		.4byte	.LVL192
 6209 0b66 0100     		.2byte	0x1
 6210 0b68 50       		.byte	0x50
 6211 0b69 0E000000 		.4byte	.LVL192
 6212 0b6d 26010000 		.4byte	.LVL228
 6213 0b71 0100     		.2byte	0x1
 6214 0b73 54       		.byte	0x54
 6215 0b74 26010000 		.4byte	.LVL228
 6216 0b78 28010000 		.4byte	.LFE43
 6217 0b7c 0400     		.2byte	0x4
 6218 0b7e F3       		.byte	0xf3
 6219 0b7f 01       		.uleb128 0x1
 6220 0b80 50       		.byte	0x50
 6221 0b81 9F       		.byte	0x9f
 6222 0b82 00000000 		.4byte	0
 6223 0b86 00000000 		.4byte	0
 6224              	.LLST56:
 6225 0b8a 00000000 		.4byte	.LVL190
 6226 0b8e 0E000000 		.4byte	.LVL192
 6227 0b92 0100     		.2byte	0x1
 6228 0b94 51       		.byte	0x51
 6229 0b95 0E000000 		.4byte	.LVL192
 6230 0b99 26010000 		.4byte	.LVL227
 6231 0b9d 0200     		.2byte	0x2
 6232 0b9f 7D       		.byte	0x7d
 6233 0ba0 00       		.sleb128 0
 6234 0ba1 26010000 		.4byte	.LVL227
 6235 0ba5 28010000 		.4byte	.LFE43
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 157


 6236 0ba9 0200     		.2byte	0x2
 6237 0bab 91       		.byte	0x91
 6238 0bac 58       		.sleb128 -40
 6239 0bad 00000000 		.4byte	0
 6240 0bb1 00000000 		.4byte	0
 6241              	.LLST57:
 6242 0bb5 00000000 		.4byte	.LVL190
 6243 0bb9 0E000000 		.4byte	.LVL192
 6244 0bbd 0100     		.2byte	0x1
 6245 0bbf 52       		.byte	0x52
 6246 0bc0 0E000000 		.4byte	.LVL192
 6247 0bc4 BA000000 		.4byte	.LVL211
 6248 0bc8 0200     		.2byte	0x2
 6249 0bca 91       		.byte	0x91
 6250 0bcb 5C       		.sleb128 -36
 6251 0bcc BA000000 		.4byte	.LVL211
 6252 0bd0 BF000000 		.4byte	.LVL212-1
 6253 0bd4 0200     		.2byte	0x2
 6254 0bd6 71       		.byte	0x71
 6255 0bd7 00       		.sleb128 0
 6256 0bd8 BF000000 		.4byte	.LVL212-1
 6257 0bdc 28010000 		.4byte	.LFE43
 6258 0be0 0200     		.2byte	0x2
 6259 0be2 91       		.byte	0x91
 6260 0be3 5C       		.sleb128 -36
 6261 0be4 00000000 		.4byte	0
 6262 0be8 00000000 		.4byte	0
 6263              	.LLST58:
 6264 0bec 00000000 		.4byte	.LVL190
 6265 0bf0 0E000000 		.4byte	.LVL192
 6266 0bf4 0100     		.2byte	0x1
 6267 0bf6 53       		.byte	0x53
 6268 0bf7 0E000000 		.4byte	.LVL192
 6269 0bfb 26010000 		.4byte	.LVL229
 6270 0bff 0100     		.2byte	0x1
 6271 0c01 55       		.byte	0x55
 6272 0c02 26010000 		.4byte	.LVL229
 6273 0c06 28010000 		.4byte	.LFE43
 6274 0c0a 0400     		.2byte	0x4
 6275 0c0c F3       		.byte	0xf3
 6276 0c0d 01       		.uleb128 0x1
 6277 0c0e 53       		.byte	0x53
 6278 0c0f 9F       		.byte	0x9f
 6279 0c10 00000000 		.4byte	0
 6280 0c14 00000000 		.4byte	0
 6281              	.LLST59:
 6282 0c18 0C000000 		.4byte	.LVL191
 6283 0c1c 0E000000 		.4byte	.LVL192
 6284 0c20 0200     		.2byte	0x2
 6285 0c22 30       		.byte	0x30
 6286 0c23 9F       		.byte	0x9f
 6287 0c24 0E000000 		.4byte	.LVL192
 6288 0c28 1A000000 		.4byte	.LVL195
 6289 0c2c 0100     		.2byte	0x1
 6290 0c2e 57       		.byte	0x57
 6291 0c2f 6E000000 		.4byte	.LVL203
 6292 0c33 86000000 		.4byte	.LVL205
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 158


 6293 0c37 0100     		.2byte	0x1
 6294 0c39 57       		.byte	0x57
 6295 0c3a 86000000 		.4byte	.LVL205
 6296 0c3e 88000000 		.4byte	.LVL206
 6297 0c42 0200     		.2byte	0x2
 6298 0c44 31       		.byte	0x31
 6299 0c45 9F       		.byte	0x9f
 6300 0c46 88000000 		.4byte	.LVL206
 6301 0c4a 24010000 		.4byte	.LVL226
 6302 0c4e 0100     		.2byte	0x1
 6303 0c50 57       		.byte	0x57
 6304 0c51 00000000 		.4byte	0
 6305 0c55 00000000 		.4byte	0
 6306              	.LLST60:
 6307 0c59 1A000000 		.4byte	.LVL195
 6308 0c5d 6E000000 		.4byte	.LVL203
 6309 0c61 0100     		.2byte	0x1
 6310 0c63 57       		.byte	0x57
 6311 0c64 00000000 		.4byte	0
 6312 0c68 00000000 		.4byte	0
 6313              	.LLST61:
 6314 0c6c 0C000000 		.4byte	.LVL191
 6315 0c70 0E000000 		.4byte	.LVL192
 6316 0c74 0100     		.2byte	0x1
 6317 0c76 50       		.byte	0x50
 6318 0c77 0E000000 		.4byte	.LVL192
 6319 0c7b 26010000 		.4byte	.LVL228
 6320 0c7f 0100     		.2byte	0x1
 6321 0c81 54       		.byte	0x54
 6322 0c82 26010000 		.4byte	.LVL228
 6323 0c86 28010000 		.4byte	.LFE43
 6324 0c8a 0400     		.2byte	0x4
 6325 0c8c F3       		.byte	0xf3
 6326 0c8d 01       		.uleb128 0x1
 6327 0c8e 50       		.byte	0x50
 6328 0c8f 9F       		.byte	0x9f
 6329 0c90 00000000 		.4byte	0
 6330 0c94 00000000 		.4byte	0
 6331              	.LLST62:
 6332 0c98 14000000 		.4byte	.LVL194
 6333 0c9c 26010000 		.4byte	.LVL230
 6334 0ca0 0100     		.2byte	0x1
 6335 0ca2 56       		.byte	0x56
 6336 0ca3 00000000 		.4byte	0
 6337 0ca7 00000000 		.4byte	0
 6338              	.LLST63:
 6339 0cab 00000000 		.4byte	.LVL231
 6340 0caf 0B000000 		.4byte	.LVL233-1
 6341 0cb3 0100     		.2byte	0x1
 6342 0cb5 50       		.byte	0x50
 6343 0cb6 0B000000 		.4byte	.LVL233-1
 6344 0cba 30000000 		.4byte	.LVL238
 6345 0cbe 0100     		.2byte	0x1
 6346 0cc0 54       		.byte	0x54
 6347 0cc1 30000000 		.4byte	.LVL238
 6348 0cc5 32000000 		.4byte	.LFE38
 6349 0cc9 0400     		.2byte	0x4
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 159


 6350 0ccb F3       		.byte	0xf3
 6351 0ccc 01       		.uleb128 0x1
 6352 0ccd 50       		.byte	0x50
 6353 0cce 9F       		.byte	0x9f
 6354 0ccf 00000000 		.4byte	0
 6355 0cd3 00000000 		.4byte	0
 6356              	.LLST64:
 6357 0cd7 00000000 		.4byte	.LVL231
 6358 0cdb 0B000000 		.4byte	.LVL233-1
 6359 0cdf 0100     		.2byte	0x1
 6360 0ce1 51       		.byte	0x51
 6361 0ce2 0B000000 		.4byte	.LVL233-1
 6362 0ce6 30000000 		.4byte	.LVL239
 6363 0cea 0100     		.2byte	0x1
 6364 0cec 56       		.byte	0x56
 6365 0ced 30000000 		.4byte	.LVL239
 6366 0cf1 32000000 		.4byte	.LFE38
 6367 0cf5 0400     		.2byte	0x4
 6368 0cf7 F3       		.byte	0xf3
 6369 0cf8 01       		.uleb128 0x1
 6370 0cf9 51       		.byte	0x51
 6371 0cfa 9F       		.byte	0x9f
 6372 0cfb 00000000 		.4byte	0
 6373 0cff 00000000 		.4byte	0
 6374              	.LLST65:
 6375 0d03 16000000 		.4byte	.LVL234
 6376 0d07 1A000000 		.4byte	.LVL235
 6377 0d0b 0200     		.2byte	0x2
 6378 0d0d 31       		.byte	0x31
 6379 0d0e 9F       		.byte	0x9f
 6380 0d0f 26000000 		.4byte	.LVL236
 6381 0d13 32000000 		.4byte	.LFE38
 6382 0d17 0100     		.2byte	0x1
 6383 0d19 50       		.byte	0x50
 6384 0d1a 00000000 		.4byte	0
 6385 0d1e 00000000 		.4byte	0
 6386              	.LLST66:
 6387 0d22 06000000 		.4byte	.LVL232
 6388 0d26 0B000000 		.4byte	.LVL233-1
 6389 0d2a 0100     		.2byte	0x1
 6390 0d2c 50       		.byte	0x50
 6391 0d2d 0B000000 		.4byte	.LVL233-1
 6392 0d31 30000000 		.4byte	.LVL238
 6393 0d35 0100     		.2byte	0x1
 6394 0d37 54       		.byte	0x54
 6395 0d38 30000000 		.4byte	.LVL238
 6396 0d3c 32000000 		.4byte	.LFE38
 6397 0d40 0400     		.2byte	0x4
 6398 0d42 F3       		.byte	0xf3
 6399 0d43 01       		.uleb128 0x1
 6400 0d44 50       		.byte	0x50
 6401 0d45 9F       		.byte	0x9f
 6402 0d46 00000000 		.4byte	0
 6403 0d4a 00000000 		.4byte	0
 6404              	.LLST67:
 6405 0d4e 00000000 		.4byte	.LVL240
 6406 0d52 0D000000 		.4byte	.LVL242-1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 160


 6407 0d56 0100     		.2byte	0x1
 6408 0d58 50       		.byte	0x50
 6409 0d59 0D000000 		.4byte	.LVL242-1
 6410 0d5d 4A000000 		.4byte	.LVL249
 6411 0d61 0100     		.2byte	0x1
 6412 0d63 54       		.byte	0x54
 6413 0d64 4A000000 		.4byte	.LVL249
 6414 0d68 4C000000 		.4byte	.LVL250
 6415 0d6c 0400     		.2byte	0x4
 6416 0d6e F3       		.byte	0xf3
 6417 0d6f 01       		.uleb128 0x1
 6418 0d70 50       		.byte	0x50
 6419 0d71 9F       		.byte	0x9f
 6420 0d72 4C000000 		.4byte	.LVL250
 6421 0d76 56000000 		.4byte	.LVL251
 6422 0d7a 0100     		.2byte	0x1
 6423 0d7c 54       		.byte	0x54
 6424 0d7d 56000000 		.4byte	.LVL251
 6425 0d81 58000000 		.4byte	.LVL252
 6426 0d85 0400     		.2byte	0x4
 6427 0d87 F3       		.byte	0xf3
 6428 0d88 01       		.uleb128 0x1
 6429 0d89 50       		.byte	0x50
 6430 0d8a 9F       		.byte	0x9f
 6431 0d8b 58000000 		.4byte	.LVL252
 6432 0d8f 5A000000 		.4byte	.LVL253
 6433 0d93 0100     		.2byte	0x1
 6434 0d95 54       		.byte	0x54
 6435 0d96 5A000000 		.4byte	.LVL253
 6436 0d9a 5C000000 		.4byte	.LVL254
 6437 0d9e 0400     		.2byte	0x4
 6438 0da0 F3       		.byte	0xf3
 6439 0da1 01       		.uleb128 0x1
 6440 0da2 50       		.byte	0x50
 6441 0da3 9F       		.byte	0x9f
 6442 0da4 5C000000 		.4byte	.LVL254
 6443 0da8 5E000000 		.4byte	.LVL255
 6444 0dac 0100     		.2byte	0x1
 6445 0dae 54       		.byte	0x54
 6446 0daf 5E000000 		.4byte	.LVL255
 6447 0db3 60000000 		.4byte	.LVL256
 6448 0db7 0400     		.2byte	0x4
 6449 0db9 F3       		.byte	0xf3
 6450 0dba 01       		.uleb128 0x1
 6451 0dbb 50       		.byte	0x50
 6452 0dbc 9F       		.byte	0x9f
 6453 0dbd 60000000 		.4byte	.LVL256
 6454 0dc1 62000000 		.4byte	.LVL257
 6455 0dc5 0100     		.2byte	0x1
 6456 0dc7 54       		.byte	0x54
 6457 0dc8 62000000 		.4byte	.LVL257
 6458 0dcc 64000000 		.4byte	.LVL258
 6459 0dd0 0400     		.2byte	0x4
 6460 0dd2 F3       		.byte	0xf3
 6461 0dd3 01       		.uleb128 0x1
 6462 0dd4 50       		.byte	0x50
 6463 0dd5 9F       		.byte	0x9f
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 161


 6464 0dd6 64000000 		.4byte	.LVL258
 6465 0dda 66000000 		.4byte	.LVL259
 6466 0dde 0100     		.2byte	0x1
 6467 0de0 54       		.byte	0x54
 6468 0de1 66000000 		.4byte	.LVL259
 6469 0de5 72000000 		.4byte	.LFE44
 6470 0de9 0400     		.2byte	0x4
 6471 0deb F3       		.byte	0xf3
 6472 0dec 01       		.uleb128 0x1
 6473 0ded 50       		.byte	0x50
 6474 0dee 9F       		.byte	0x9f
 6475 0def 00000000 		.4byte	0
 6476 0df3 00000000 		.4byte	0
 6477              	.LLST68:
 6478 0df7 00000000 		.4byte	.LVL240
 6479 0dfb 0D000000 		.4byte	.LVL242-1
 6480 0dff 0100     		.2byte	0x1
 6481 0e01 51       		.byte	0x51
 6482 0e02 0D000000 		.4byte	.LVL242-1
 6483 0e06 70000000 		.4byte	.LVL261
 6484 0e0a 0200     		.2byte	0x2
 6485 0e0c 7D       		.byte	0x7d
 6486 0e0d 00       		.sleb128 0
 6487 0e0e 70000000 		.4byte	.LVL261
 6488 0e12 72000000 		.4byte	.LFE44
 6489 0e16 0200     		.2byte	0x2
 6490 0e18 91       		.byte	0x91
 6491 0e19 60       		.sleb128 -32
 6492 0e1a 00000000 		.4byte	0
 6493 0e1e 00000000 		.4byte	0
 6494              	.LLST69:
 6495 0e22 00000000 		.4byte	.LVL240
 6496 0e26 0D000000 		.4byte	.LVL242-1
 6497 0e2a 0100     		.2byte	0x1
 6498 0e2c 52       		.byte	0x52
 6499 0e2d 0D000000 		.4byte	.LVL242-1
 6500 0e31 72000000 		.4byte	.LFE44
 6501 0e35 0200     		.2byte	0x2
 6502 0e37 91       		.byte	0x91
 6503 0e38 64       		.sleb128 -28
 6504 0e39 00000000 		.4byte	0
 6505 0e3d 00000000 		.4byte	0
 6506              	.LLST70:
 6507 0e41 66000000 		.4byte	.LVL259
 6508 0e45 70000000 		.4byte	.LVL262
 6509 0e49 0100     		.2byte	0x1
 6510 0e4b 54       		.byte	0x54
 6511 0e4c 70000000 		.4byte	.LVL262
 6512 0e50 72000000 		.4byte	.LFE44
 6513 0e54 0100     		.2byte	0x1
 6514 0e56 50       		.byte	0x50
 6515 0e57 00000000 		.4byte	0
 6516 0e5b 00000000 		.4byte	0
 6517              	.LLST71:
 6518 0e5f 10000000 		.4byte	.LVL243
 6519 0e63 20000000 		.4byte	.LVL246
 6520 0e67 0100     		.2byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 162


 6521 0e69 50       		.byte	0x50
 6522 0e6a 20000000 		.4byte	.LVL246
 6523 0e6e 58000000 		.4byte	.LVL252
 6524 0e72 0100     		.2byte	0x1
 6525 0e74 55       		.byte	0x55
 6526 0e75 58000000 		.4byte	.LVL252
 6527 0e79 5C000000 		.4byte	.LVL254
 6528 0e7d 0100     		.2byte	0x1
 6529 0e7f 50       		.byte	0x50
 6530 0e80 5C000000 		.4byte	.LVL254
 6531 0e84 70000000 		.4byte	.LVL263
 6532 0e88 0100     		.2byte	0x1
 6533 0e8a 55       		.byte	0x55
 6534 0e8b 00000000 		.4byte	0
 6535 0e8f 00000000 		.4byte	0
 6536              	.LLST72:
 6537 0e93 0A000000 		.4byte	.LVL241
 6538 0e97 0D000000 		.4byte	.LVL242-1
 6539 0e9b 0100     		.2byte	0x1
 6540 0e9d 50       		.byte	0x50
 6541 0e9e 0D000000 		.4byte	.LVL242-1
 6542 0ea2 4A000000 		.4byte	.LVL249
 6543 0ea6 0100     		.2byte	0x1
 6544 0ea8 54       		.byte	0x54
 6545 0ea9 4A000000 		.4byte	.LVL249
 6546 0ead 4C000000 		.4byte	.LVL250
 6547 0eb1 0400     		.2byte	0x4
 6548 0eb3 F3       		.byte	0xf3
 6549 0eb4 01       		.uleb128 0x1
 6550 0eb5 50       		.byte	0x50
 6551 0eb6 9F       		.byte	0x9f
 6552 0eb7 4C000000 		.4byte	.LVL250
 6553 0ebb 56000000 		.4byte	.LVL251
 6554 0ebf 0100     		.2byte	0x1
 6555 0ec1 54       		.byte	0x54
 6556 0ec2 56000000 		.4byte	.LVL251
 6557 0ec6 58000000 		.4byte	.LVL252
 6558 0eca 0400     		.2byte	0x4
 6559 0ecc F3       		.byte	0xf3
 6560 0ecd 01       		.uleb128 0x1
 6561 0ece 50       		.byte	0x50
 6562 0ecf 9F       		.byte	0x9f
 6563 0ed0 58000000 		.4byte	.LVL252
 6564 0ed4 5A000000 		.4byte	.LVL253
 6565 0ed8 0100     		.2byte	0x1
 6566 0eda 54       		.byte	0x54
 6567 0edb 5A000000 		.4byte	.LVL253
 6568 0edf 5C000000 		.4byte	.LVL254
 6569 0ee3 0400     		.2byte	0x4
 6570 0ee5 F3       		.byte	0xf3
 6571 0ee6 01       		.uleb128 0x1
 6572 0ee7 50       		.byte	0x50
 6573 0ee8 9F       		.byte	0x9f
 6574 0ee9 5C000000 		.4byte	.LVL254
 6575 0eed 5E000000 		.4byte	.LVL255
 6576 0ef1 0100     		.2byte	0x1
 6577 0ef3 54       		.byte	0x54
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 163


 6578 0ef4 5E000000 		.4byte	.LVL255
 6579 0ef8 60000000 		.4byte	.LVL256
 6580 0efc 0400     		.2byte	0x4
 6581 0efe F3       		.byte	0xf3
 6582 0eff 01       		.uleb128 0x1
 6583 0f00 50       		.byte	0x50
 6584 0f01 9F       		.byte	0x9f
 6585 0f02 60000000 		.4byte	.LVL256
 6586 0f06 62000000 		.4byte	.LVL257
 6587 0f0a 0100     		.2byte	0x1
 6588 0f0c 54       		.byte	0x54
 6589 0f0d 62000000 		.4byte	.LVL257
 6590 0f11 64000000 		.4byte	.LVL258
 6591 0f15 0400     		.2byte	0x4
 6592 0f17 F3       		.byte	0xf3
 6593 0f18 01       		.uleb128 0x1
 6594 0f19 50       		.byte	0x50
 6595 0f1a 9F       		.byte	0x9f
 6596 0f1b 64000000 		.4byte	.LVL258
 6597 0f1f 66000000 		.4byte	.LVL259
 6598 0f23 0100     		.2byte	0x1
 6599 0f25 54       		.byte	0x54
 6600 0f26 66000000 		.4byte	.LVL259
 6601 0f2a 72000000 		.4byte	.LFE44
 6602 0f2e 0400     		.2byte	0x4
 6603 0f30 F3       		.byte	0xf3
 6604 0f31 01       		.uleb128 0x1
 6605 0f32 50       		.byte	0x50
 6606 0f33 9F       		.byte	0x9f
 6607 0f34 00000000 		.4byte	0
 6608 0f38 00000000 		.4byte	0
 6609              	.LLST73:
 6610 0f3c 12000000 		.4byte	.LVL244
 6611 0f40 70000000 		.4byte	.LVL264
 6612 0f44 0100     		.2byte	0x1
 6613 0f46 57       		.byte	0x57
 6614 0f47 00000000 		.4byte	0
 6615 0f4b 00000000 		.4byte	0
 6616              	.LLST74:
 6617 0f4f 1C000000 		.4byte	.LVL245
 6618 0f53 58000000 		.4byte	.LVL252
 6619 0f57 0100     		.2byte	0x1
 6620 0f59 56       		.byte	0x56
 6621 0f5a 5C000000 		.4byte	.LVL254
 6622 0f5e 66000000 		.4byte	.LVL259
 6623 0f62 0100     		.2byte	0x1
 6624 0f64 56       		.byte	0x56
 6625 0f65 00000000 		.4byte	0
 6626 0f69 00000000 		.4byte	0
 6627              	.LLST75:
 6628 0f6d 00000000 		.4byte	.LVL265
 6629 0f71 09000000 		.4byte	.LVL267-1
 6630 0f75 0100     		.2byte	0x1
 6631 0f77 50       		.byte	0x50
 6632 0f78 09000000 		.4byte	.LVL267-1
 6633 0f7c 20000000 		.4byte	.LVL273
 6634 0f80 0100     		.2byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 164


 6635 0f82 54       		.byte	0x54
 6636 0f83 20000000 		.4byte	.LVL273
 6637 0f87 22000000 		.4byte	.LVL274
 6638 0f8b 0400     		.2byte	0x4
 6639 0f8d F3       		.byte	0xf3
 6640 0f8e 01       		.uleb128 0x1
 6641 0f8f 50       		.byte	0x50
 6642 0f90 9F       		.byte	0x9f
 6643 0f91 22000000 		.4byte	.LVL274
 6644 0f95 24000000 		.4byte	.LVL275
 6645 0f99 0100     		.2byte	0x1
 6646 0f9b 54       		.byte	0x54
 6647 0f9c 24000000 		.4byte	.LVL275
 6648 0fa0 2E000000 		.4byte	.LFE45
 6649 0fa4 0400     		.2byte	0x4
 6650 0fa6 F3       		.byte	0xf3
 6651 0fa7 01       		.uleb128 0x1
 6652 0fa8 50       		.byte	0x50
 6653 0fa9 9F       		.byte	0x9f
 6654 0faa 00000000 		.4byte	0
 6655 0fae 00000000 		.4byte	0
 6656              	.LLST76:
 6657 0fb2 00000000 		.4byte	.LVL265
 6658 0fb6 09000000 		.4byte	.LVL267-1
 6659 0fba 0100     		.2byte	0x1
 6660 0fbc 51       		.byte	0x51
 6661 0fbd 09000000 		.4byte	.LVL267-1
 6662 0fc1 2C000000 		.4byte	.LVL279
 6663 0fc5 0100     		.2byte	0x1
 6664 0fc7 56       		.byte	0x56
 6665 0fc8 2C000000 		.4byte	.LVL279
 6666 0fcc 2E000000 		.4byte	.LFE45
 6667 0fd0 0400     		.2byte	0x4
 6668 0fd2 F3       		.byte	0xf3
 6669 0fd3 01       		.uleb128 0x1
 6670 0fd4 51       		.byte	0x51
 6671 0fd5 9F       		.byte	0x9f
 6672 0fd6 00000000 		.4byte	0
 6673 0fda 00000000 		.4byte	0
 6674              	.LLST77:
 6675 0fde 1E000000 		.4byte	.LVL272
 6676 0fe2 22000000 		.4byte	.LVL274
 6677 0fe6 0200     		.2byte	0x2
 6678 0fe8 31       		.byte	0x31
 6679 0fe9 9F       		.byte	0x9f
 6680 0fea 24000000 		.4byte	.LVL275
 6681 0fee 2C000000 		.4byte	.LVL277
 6682 0ff2 0100     		.2byte	0x1
 6683 0ff4 54       		.byte	0x54
 6684 0ff5 2C000000 		.4byte	.LVL277
 6685 0ff9 2E000000 		.4byte	.LFE45
 6686 0ffd 0100     		.2byte	0x1
 6687 0fff 50       		.byte	0x50
 6688 1000 00000000 		.4byte	0
 6689 1004 00000000 		.4byte	0
 6690              	.LLST78:
 6691 1008 0C000000 		.4byte	.LVL268
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 165


 6692 100c 18000000 		.4byte	.LVL270
 6693 1010 0100     		.2byte	0x1
 6694 1012 50       		.byte	0x50
 6695 1013 18000000 		.4byte	.LVL270
 6696 1017 22000000 		.4byte	.LVL274
 6697 101b 0100     		.2byte	0x1
 6698 101d 55       		.byte	0x55
 6699 101e 22000000 		.4byte	.LVL274
 6700 1022 24000000 		.4byte	.LVL275
 6701 1026 0100     		.2byte	0x1
 6702 1028 50       		.byte	0x50
 6703 1029 24000000 		.4byte	.LVL275
 6704 102d 2C000000 		.4byte	.LVL278
 6705 1031 0100     		.2byte	0x1
 6706 1033 55       		.byte	0x55
 6707 1034 00000000 		.4byte	0
 6708 1038 00000000 		.4byte	0
 6709              	.LLST79:
 6710 103c 14000000 		.4byte	.LVL269
 6711 1040 22000000 		.4byte	.LVL274
 6712 1044 0100     		.2byte	0x1
 6713 1046 57       		.byte	0x57
 6714 1047 00000000 		.4byte	0
 6715 104b 00000000 		.4byte	0
 6716              	.LLST80:
 6717 104f 06000000 		.4byte	.LVL266
 6718 1053 09000000 		.4byte	.LVL267-1
 6719 1057 0100     		.2byte	0x1
 6720 1059 50       		.byte	0x50
 6721 105a 09000000 		.4byte	.LVL267-1
 6722 105e 20000000 		.4byte	.LVL273
 6723 1062 0100     		.2byte	0x1
 6724 1064 54       		.byte	0x54
 6725 1065 20000000 		.4byte	.LVL273
 6726 1069 22000000 		.4byte	.LVL274
 6727 106d 0400     		.2byte	0x4
 6728 106f F3       		.byte	0xf3
 6729 1070 01       		.uleb128 0x1
 6730 1071 50       		.byte	0x50
 6731 1072 9F       		.byte	0x9f
 6732 1073 22000000 		.4byte	.LVL274
 6733 1077 24000000 		.4byte	.LVL275
 6734 107b 0100     		.2byte	0x1
 6735 107d 54       		.byte	0x54
 6736 107e 24000000 		.4byte	.LVL275
 6737 1082 2E000000 		.4byte	.LFE45
 6738 1086 0400     		.2byte	0x4
 6739 1088 F3       		.byte	0xf3
 6740 1089 01       		.uleb128 0x1
 6741 108a 50       		.byte	0x50
 6742 108b 9F       		.byte	0x9f
 6743 108c 00000000 		.4byte	0
 6744 1090 00000000 		.4byte	0
 6745              	.LLST81:
 6746 1094 00000000 		.4byte	.LVL280
 6747 1098 07000000 		.4byte	.LVL281-1
 6748 109c 0100     		.2byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 166


 6749 109e 50       		.byte	0x50
 6750 109f 07000000 		.4byte	.LVL281-1
 6751 10a3 0A000000 		.4byte	.LVL282
 6752 10a7 0100     		.2byte	0x1
 6753 10a9 54       		.byte	0x54
 6754 10aa 0A000000 		.4byte	.LVL282
 6755 10ae 12000000 		.4byte	.LFE46
 6756 10b2 0400     		.2byte	0x4
 6757 10b4 F3       		.byte	0xf3
 6758 10b5 01       		.uleb128 0x1
 6759 10b6 50       		.byte	0x50
 6760 10b7 9F       		.byte	0x9f
 6761 10b8 00000000 		.4byte	0
 6762 10bc 00000000 		.4byte	0
 6763              	.LLST82:
 6764 10c0 0A000000 		.4byte	.LVL282
 6765 10c4 10000000 		.4byte	.LVL284
 6766 10c8 0100     		.2byte	0x1
 6767 10ca 54       		.byte	0x54
 6768 10cb 10000000 		.4byte	.LVL284
 6769 10cf 12000000 		.4byte	.LFE46
 6770 10d3 0100     		.2byte	0x1
 6771 10d5 50       		.byte	0x50
 6772 10d6 00000000 		.4byte	0
 6773 10da 00000000 		.4byte	0
 6774              	.LLST83:
 6775 10de 00000000 		.4byte	.LVL285
 6776 10e2 07000000 		.4byte	.LVL287-1
 6777 10e6 0100     		.2byte	0x1
 6778 10e8 50       		.byte	0x50
 6779 10e9 07000000 		.4byte	.LVL287-1
 6780 10ed 0C000000 		.4byte	.LVL288
 6781 10f1 0100     		.2byte	0x1
 6782 10f3 54       		.byte	0x54
 6783 10f4 0C000000 		.4byte	.LVL288
 6784 10f8 16000000 		.4byte	.LFE47
 6785 10fc 0400     		.2byte	0x4
 6786 10fe F3       		.byte	0xf3
 6787 10ff 01       		.uleb128 0x1
 6788 1100 50       		.byte	0x50
 6789 1101 9F       		.byte	0x9f
 6790 1102 00000000 		.4byte	0
 6791 1106 00000000 		.4byte	0
 6792              	.LLST84:
 6793 110a 0E000000 		.4byte	.LVL289
 6794 110e 14000000 		.4byte	.LVL291
 6795 1112 0100     		.2byte	0x1
 6796 1114 54       		.byte	0x54
 6797 1115 14000000 		.4byte	.LVL291
 6798 1119 16000000 		.4byte	.LFE47
 6799 111d 0100     		.2byte	0x1
 6800 111f 50       		.byte	0x50
 6801 1120 00000000 		.4byte	0
 6802 1124 00000000 		.4byte	0
 6803              	.LLST85:
 6804 1128 04000000 		.4byte	.LVL286
 6805 112c 07000000 		.4byte	.LVL287-1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 167


 6806 1130 0100     		.2byte	0x1
 6807 1132 50       		.byte	0x50
 6808 1133 07000000 		.4byte	.LVL287-1
 6809 1137 0C000000 		.4byte	.LVL288
 6810 113b 0100     		.2byte	0x1
 6811 113d 54       		.byte	0x54
 6812 113e 0C000000 		.4byte	.LVL288
 6813 1142 16000000 		.4byte	.LFE47
 6814 1146 0400     		.2byte	0x4
 6815 1148 F3       		.byte	0xf3
 6816 1149 01       		.uleb128 0x1
 6817 114a 50       		.byte	0x50
 6818 114b 9F       		.byte	0x9f
 6819 114c 00000000 		.4byte	0
 6820 1150 00000000 		.4byte	0
 6821              	.LLST86:
 6822 1154 00000000 		.4byte	.LVL292
 6823 1158 02000000 		.4byte	.LVL293
 6824 115c 0100     		.2byte	0x1
 6825 115e 50       		.byte	0x50
 6826 115f 02000000 		.4byte	.LVL293
 6827 1163 04000000 		.4byte	.LFE48
 6828 1167 0400     		.2byte	0x4
 6829 1169 F3       		.byte	0xf3
 6830 116a 01       		.uleb128 0x1
 6831 116b 50       		.byte	0x50
 6832 116c 9F       		.byte	0x9f
 6833 116d 00000000 		.4byte	0
 6834 1171 00000000 		.4byte	0
 6835              	.LLST87:
 6836 1175 00000000 		.4byte	.LVL294
 6837 1179 08000000 		.4byte	.LVL295
 6838 117d 0100     		.2byte	0x1
 6839 117f 50       		.byte	0x50
 6840 1180 08000000 		.4byte	.LVL295
 6841 1184 0A000000 		.4byte	.LVL296
 6842 1188 0400     		.2byte	0x4
 6843 118a F3       		.byte	0xf3
 6844 118b 01       		.uleb128 0x1
 6845 118c 50       		.byte	0x50
 6846 118d 9F       		.byte	0x9f
 6847 118e 0A000000 		.4byte	.LVL296
 6848 1192 0C000000 		.4byte	.LVL297
 6849 1196 0100     		.2byte	0x1
 6850 1198 50       		.byte	0x50
 6851 1199 0C000000 		.4byte	.LVL297
 6852 119d 0E000000 		.4byte	.LFE54
 6853 11a1 0400     		.2byte	0x4
 6854 11a3 F3       		.byte	0xf3
 6855 11a4 01       		.uleb128 0x1
 6856 11a5 50       		.byte	0x50
 6857 11a6 9F       		.byte	0x9f
 6858 11a7 00000000 		.4byte	0
 6859 11ab 00000000 		.4byte	0
 6860              	.LLST88:
 6861 11af 00000000 		.4byte	.LVL298
 6862 11b3 0A000000 		.4byte	.LVL299
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 168


 6863 11b7 0100     		.2byte	0x1
 6864 11b9 50       		.byte	0x50
 6865 11ba 0A000000 		.4byte	.LVL299
 6866 11be 0C000000 		.4byte	.LVL300
 6867 11c2 0400     		.2byte	0x4
 6868 11c4 F3       		.byte	0xf3
 6869 11c5 01       		.uleb128 0x1
 6870 11c6 50       		.byte	0x50
 6871 11c7 9F       		.byte	0x9f
 6872 11c8 0C000000 		.4byte	.LVL300
 6873 11cc 0E000000 		.4byte	.LVL301
 6874 11d0 0100     		.2byte	0x1
 6875 11d2 50       		.byte	0x50
 6876 11d3 0E000000 		.4byte	.LVL301
 6877 11d7 10000000 		.4byte	.LFE56
 6878 11db 0400     		.2byte	0x4
 6879 11dd F3       		.byte	0xf3
 6880 11de 01       		.uleb128 0x1
 6881 11df 50       		.byte	0x50
 6882 11e0 9F       		.byte	0x9f
 6883 11e1 00000000 		.4byte	0
 6884 11e5 00000000 		.4byte	0
 6885              	.LLST89:
 6886 11e9 02000000 		.4byte	.LVL303
 6887 11ed 06000000 		.4byte	.LVL304
 6888 11f1 0200     		.2byte	0x2
 6889 11f3 30       		.byte	0x30
 6890 11f4 9F       		.byte	0x9f
 6891 11f5 06000000 		.4byte	.LVL304
 6892 11f9 12000000 		.4byte	.LVL305
 6893 11fd 0100     		.2byte	0x1
 6894 11ff 53       		.byte	0x53
 6895 1200 1A000000 		.4byte	.LVL306
 6896 1204 20000000 		.4byte	.LVL308
 6897 1208 0100     		.2byte	0x1
 6898 120a 53       		.byte	0x53
 6899 120b 00000000 		.4byte	0
 6900 120f 00000000 		.4byte	0
 6901              	.LLST90:
 6902 1213 00000000 		.4byte	.LVL309
 6903 1217 14000000 		.4byte	.LVL312
 6904 121b 0100     		.2byte	0x1
 6905 121d 50       		.byte	0x50
 6906 121e 14000000 		.4byte	.LVL312
 6907 1222 16000000 		.4byte	.LVL313
 6908 1226 0400     		.2byte	0x4
 6909 1228 F3       		.byte	0xf3
 6910 1229 01       		.uleb128 0x1
 6911 122a 50       		.byte	0x50
 6912 122b 9F       		.byte	0x9f
 6913 122c 16000000 		.4byte	.LVL313
 6914 1230 1E000000 		.4byte	.LVL315
 6915 1234 0100     		.2byte	0x1
 6916 1236 50       		.byte	0x50
 6917 1237 1E000000 		.4byte	.LVL315
 6918 123b 24000000 		.4byte	.LFE58
 6919 123f 0400     		.2byte	0x4
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 169


 6920 1241 F3       		.byte	0xf3
 6921 1242 01       		.uleb128 0x1
 6922 1243 50       		.byte	0x50
 6923 1244 9F       		.byte	0x9f
 6924 1245 00000000 		.4byte	0
 6925 1249 00000000 		.4byte	0
 6926              	.LLST91:
 6927 124d 00000000 		.4byte	.LVL309
 6928 1251 04000000 		.4byte	.LVL310
 6929 1255 0200     		.2byte	0x2
 6930 1257 30       		.byte	0x30
 6931 1258 9F       		.byte	0x9f
 6932 1259 04000000 		.4byte	.LVL310
 6933 125d 12000000 		.4byte	.LVL311
 6934 1261 0100     		.2byte	0x1
 6935 1263 52       		.byte	0x52
 6936 1264 16000000 		.4byte	.LVL313
 6937 1268 1E000000 		.4byte	.LVL315
 6938 126c 0100     		.2byte	0x1
 6939 126e 52       		.byte	0x52
 6940 126f 00000000 		.4byte	0
 6941 1273 00000000 		.4byte	0
 6942              	.LLST92:
 6943 1277 00000000 		.4byte	.LVL309
 6944 127b 14000000 		.4byte	.LVL312
 6945 127f 0200     		.2byte	0x2
 6946 1281 30       		.byte	0x30
 6947 1282 9F       		.byte	0x9f
 6948 1283 14000000 		.4byte	.LVL312
 6949 1287 16000000 		.4byte	.LVL313
 6950 128b 0100     		.2byte	0x1
 6951 128d 50       		.byte	0x50
 6952 128e 16000000 		.4byte	.LVL313
 6953 1292 1E000000 		.4byte	.LVL315
 6954 1296 0200     		.2byte	0x2
 6955 1298 30       		.byte	0x30
 6956 1299 9F       		.byte	0x9f
 6957 129a 1E000000 		.4byte	.LVL315
 6958 129e 24000000 		.4byte	.LFE58
 6959 12a2 0100     		.2byte	0x1
 6960 12a4 50       		.byte	0x50
 6961 12a5 00000000 		.4byte	0
 6962 12a9 00000000 		.4byte	0
 6963              	.LLST93:
 6964 12ad 00000000 		.4byte	.LVL316
 6965 12b1 04000000 		.4byte	.LVL317
 6966 12b5 0200     		.2byte	0x2
 6967 12b7 30       		.byte	0x30
 6968 12b8 9F       		.byte	0x9f
 6969 12b9 04000000 		.4byte	.LVL317
 6970 12bd 12000000 		.4byte	.LVL318
 6971 12c1 0100     		.2byte	0x1
 6972 12c3 52       		.byte	0x52
 6973 12c4 1C000000 		.4byte	.LVL319
 6974 12c8 22000000 		.4byte	.LVL321
 6975 12cc 0100     		.2byte	0x1
 6976 12ce 52       		.byte	0x52
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 170


 6977 12cf 00000000 		.4byte	0
 6978 12d3 00000000 		.4byte	0
 6979              	.LLST94:
 6980 12d7 00000000 		.4byte	.LVL322
 6981 12db 07000000 		.4byte	.LVL324-1
 6982 12df 0100     		.2byte	0x1
 6983 12e1 50       		.byte	0x50
 6984 12e2 07000000 		.4byte	.LVL324-1
 6985 12e6 0E000000 		.4byte	.LVL326
 6986 12ea 0100     		.2byte	0x1
 6987 12ec 54       		.byte	0x54
 6988 12ed 0E000000 		.4byte	.LVL326
 6989 12f1 10000000 		.4byte	.LFE49
 6990 12f5 0400     		.2byte	0x4
 6991 12f7 F3       		.byte	0xf3
 6992 12f8 01       		.uleb128 0x1
 6993 12f9 50       		.byte	0x50
 6994 12fa 9F       		.byte	0x9f
 6995 12fb 00000000 		.4byte	0
 6996 12ff 00000000 		.4byte	0
 6997              	.LLST95:
 6998 1303 04000000 		.4byte	.LVL323
 6999 1307 07000000 		.4byte	.LVL324-1
 7000 130b 0100     		.2byte	0x1
 7001 130d 50       		.byte	0x50
 7002 130e 07000000 		.4byte	.LVL324-1
 7003 1312 0E000000 		.4byte	.LVL326
 7004 1316 0100     		.2byte	0x1
 7005 1318 54       		.byte	0x54
 7006 1319 0E000000 		.4byte	.LVL326
 7007 131d 10000000 		.4byte	.LFE49
 7008 1321 0400     		.2byte	0x4
 7009 1323 F3       		.byte	0xf3
 7010 1324 01       		.uleb128 0x1
 7011 1325 50       		.byte	0x50
 7012 1326 9F       		.byte	0x9f
 7013 1327 00000000 		.4byte	0
 7014 132b 00000000 		.4byte	0
 7015              		.section	.debug_aranges,"",%progbits
 7016 0000 F4000000 		.4byte	0xf4
 7017 0004 0200     		.2byte	0x2
 7018 0006 00000000 		.4byte	.Ldebug_info0
 7019 000a 04       		.byte	0x4
 7020 000b 00       		.byte	0
 7021 000c 0000     		.2byte	0
 7022 000e 0000     		.2byte	0
 7023 0010 00000000 		.4byte	.LFB55
 7024 0014 1E000000 		.4byte	.LFE55-.LFB55
 7025 0018 00000000 		.4byte	.LFB53
 7026 001c 1C000000 		.4byte	.LFE53-.LFB53
 7027 0020 00000000 		.4byte	.LFB50
 7028 0024 82000000 		.4byte	.LFE50-.LFB50
 7029 0028 00000000 		.4byte	.LFB51
 7030 002c 24000000 		.4byte	.LFE51-.LFB51
 7031 0030 00000000 		.4byte	.LFB52
 7032 0034 6E000000 		.4byte	.LFE52-.LFB52
 7033 0038 00000000 		.4byte	.LFB32
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 171


 7034 003c 64000000 		.4byte	.LFE32-.LFB32
 7035 0040 00000000 		.4byte	.LFB34
 7036 0044 1C000000 		.4byte	.LFE34-.LFB34
 7037 0048 00000000 		.4byte	.LFB33
 7038 004c 34000000 		.4byte	.LFE33-.LFB33
 7039 0050 00000000 		.4byte	.LFB39
 7040 0054 14000000 		.4byte	.LFE39-.LFB39
 7041 0058 00000000 		.4byte	.LFB40
 7042 005c EA000000 		.4byte	.LFE40-.LFB40
 7043 0060 00000000 		.4byte	.LFB35
 7044 0064 18000000 		.4byte	.LFE35-.LFB35
 7045 0068 00000000 		.4byte	.LFB36
 7046 006c 16000000 		.4byte	.LFE36-.LFB36
 7047 0070 00000000 		.4byte	.LFB37
 7048 0074 2E000000 		.4byte	.LFE37-.LFB37
 7049 0078 00000000 		.4byte	.LFB41
 7050 007c 78000000 		.4byte	.LFE41-.LFB41
 7051 0080 00000000 		.4byte	.LFB42
 7052 0084 64000000 		.4byte	.LFE42-.LFB42
 7053 0088 00000000 		.4byte	.LFB43
 7054 008c 28010000 		.4byte	.LFE43-.LFB43
 7055 0090 00000000 		.4byte	.LFB38
 7056 0094 32000000 		.4byte	.LFE38-.LFB38
 7057 0098 00000000 		.4byte	.LFB44
 7058 009c 72000000 		.4byte	.LFE44-.LFB44
 7059 00a0 00000000 		.4byte	.LFB45
 7060 00a4 2E000000 		.4byte	.LFE45-.LFB45
 7061 00a8 00000000 		.4byte	.LFB46
 7062 00ac 12000000 		.4byte	.LFE46-.LFB46
 7063 00b0 00000000 		.4byte	.LFB47
 7064 00b4 16000000 		.4byte	.LFE47-.LFB47
 7065 00b8 00000000 		.4byte	.LFB48
 7066 00bc 04000000 		.4byte	.LFE48-.LFB48
 7067 00c0 00000000 		.4byte	.LFB54
 7068 00c4 0E000000 		.4byte	.LFE54-.LFB54
 7069 00c8 00000000 		.4byte	.LFB56
 7070 00cc 10000000 		.4byte	.LFE56-.LFB56
 7071 00d0 00000000 		.4byte	.LFB57
 7072 00d4 28000000 		.4byte	.LFE57-.LFB57
 7073 00d8 00000000 		.4byte	.LFB58
 7074 00dc 24000000 		.4byte	.LFE58-.LFB58
 7075 00e0 00000000 		.4byte	.LFB59
 7076 00e4 28000000 		.4byte	.LFE59-.LFB59
 7077 00e8 00000000 		.4byte	.LFB49
 7078 00ec 10000000 		.4byte	.LFE49-.LFB49
 7079 00f0 00000000 		.4byte	0
 7080 00f4 00000000 		.4byte	0
 7081              		.section	.debug_ranges,"",%progbits
 7082              	.Ldebug_ranges0:
 7083 0000 1E000000 		.4byte	.LBB4
 7084 0004 5E000000 		.4byte	.LBE4
 7085 0008 62000000 		.4byte	.LBB5
 7086 000c 6C000000 		.4byte	.LBE5
 7087 0010 00000000 		.4byte	0
 7088 0014 00000000 		.4byte	0
 7089 0018 14000000 		.4byte	.LBB7
 7090 001c 4C000000 		.4byte	.LBE7
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 172


 7091 0020 50000000 		.4byte	.LBB8
 7092 0024 5A000000 		.4byte	.LBE8
 7093 0028 00000000 		.4byte	0
 7094 002c 00000000 		.4byte	0
 7095 0030 16000000 		.4byte	.LBB11
 7096 0034 58000000 		.4byte	.LBE11
 7097 0038 5C000000 		.4byte	.LBB12
 7098 003c 66000000 		.4byte	.LBE12
 7099 0040 00000000 		.4byte	0
 7100 0044 00000000 		.4byte	0
 7101 0048 00000000 		.4byte	.LFB55
 7102 004c 1E000000 		.4byte	.LFE55
 7103 0050 00000000 		.4byte	.LFB53
 7104 0054 1C000000 		.4byte	.LFE53
 7105 0058 00000000 		.4byte	.LFB50
 7106 005c 82000000 		.4byte	.LFE50
 7107 0060 00000000 		.4byte	.LFB51
 7108 0064 24000000 		.4byte	.LFE51
 7109 0068 00000000 		.4byte	.LFB52
 7110 006c 6E000000 		.4byte	.LFE52
 7111 0070 00000000 		.4byte	.LFB32
 7112 0074 64000000 		.4byte	.LFE32
 7113 0078 00000000 		.4byte	.LFB34
 7114 007c 1C000000 		.4byte	.LFE34
 7115 0080 00000000 		.4byte	.LFB33
 7116 0084 34000000 		.4byte	.LFE33
 7117 0088 00000000 		.4byte	.LFB39
 7118 008c 14000000 		.4byte	.LFE39
 7119 0090 00000000 		.4byte	.LFB40
 7120 0094 EA000000 		.4byte	.LFE40
 7121 0098 00000000 		.4byte	.LFB35
 7122 009c 18000000 		.4byte	.LFE35
 7123 00a0 00000000 		.4byte	.LFB36
 7124 00a4 16000000 		.4byte	.LFE36
 7125 00a8 00000000 		.4byte	.LFB37
 7126 00ac 2E000000 		.4byte	.LFE37
 7127 00b0 00000000 		.4byte	.LFB41
 7128 00b4 78000000 		.4byte	.LFE41
 7129 00b8 00000000 		.4byte	.LFB42
 7130 00bc 64000000 		.4byte	.LFE42
 7131 00c0 00000000 		.4byte	.LFB43
 7132 00c4 28010000 		.4byte	.LFE43
 7133 00c8 00000000 		.4byte	.LFB38
 7134 00cc 32000000 		.4byte	.LFE38
 7135 00d0 00000000 		.4byte	.LFB44
 7136 00d4 72000000 		.4byte	.LFE44
 7137 00d8 00000000 		.4byte	.LFB45
 7138 00dc 2E000000 		.4byte	.LFE45
 7139 00e0 00000000 		.4byte	.LFB46
 7140 00e4 12000000 		.4byte	.LFE46
 7141 00e8 00000000 		.4byte	.LFB47
 7142 00ec 16000000 		.4byte	.LFE47
 7143 00f0 00000000 		.4byte	.LFB48
 7144 00f4 04000000 		.4byte	.LFE48
 7145 00f8 00000000 		.4byte	.LFB54
 7146 00fc 0E000000 		.4byte	.LFE54
 7147 0100 00000000 		.4byte	.LFB56
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 173


 7148 0104 10000000 		.4byte	.LFE56
 7149 0108 00000000 		.4byte	.LFB57
 7150 010c 28000000 		.4byte	.LFE57
 7151 0110 00000000 		.4byte	.LFB58
 7152 0114 24000000 		.4byte	.LFE58
 7153 0118 00000000 		.4byte	.LFB59
 7154 011c 28000000 		.4byte	.LFE59
 7155 0120 00000000 		.4byte	.LFB49
 7156 0124 10000000 		.4byte	.LFE49
 7157 0128 00000000 		.4byte	0
 7158 012c 00000000 		.4byte	0
 7159              		.section	.debug_line,"",%progbits
 7160              	.Ldebug_line0:
 7161 0000 DA050000 		.section	.debug_str,"MS",%progbits,1
 7161      02001D02 
 7161      00000201 
 7161      FB0E0D00 
 7161      01010101 
 7162              	.LASF34:
 7163 0000 75784E75 		.ascii	"uxNumberOfItems\000"
 7163      6D626572 
 7163      4F664974 
 7163      656D7300 
 7164              	.LASF121:
 7165 0010 76506F72 		.ascii	"vPortExitCritical\000"
 7165      74457869 
 7165      74437269 
 7165      74696361 
 7165      6C00
 7166              	.LASF80:
 7167 0022 78517565 		.ascii	"xQueueGenericReset\000"
 7167      75654765 
 7167      6E657269 
 7167      63526573 
 7167      657400
 7168              	.LASF125:
 7169 0035 76506F72 		.ascii	"vPortYield\000"
 7169      74596965 
 7169      6C6400
 7170              	.LASF107:
 7171 0040 78517565 		.ascii	"xQueueReceiveFromISR\000"
 7171      75655265 
 7171      63656976 
 7171      6546726F 
 7171      6D495352 
 7172              	.LASF50:
 7173 0055 78546173 		.ascii	"xTasksWaitingToReceive\000"
 7173      6B735761 
 7173      6974696E 
 7173      67546F52 
 7173      65636569 
 7174              	.LASF100:
 7175 006c 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 7175      67686572 
 7175      5072696F 
 7175      72697479 
 7175      5461736B 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 174


 7176              	.LASF98:
 7177 0086 70784D75 		.ascii	"pxMutex\000"
 7177      74657800 
 7178              	.LASF0:
 7179 008e 756E7369 		.ascii	"unsigned int\000"
 7179      676E6564 
 7179      20696E74 
 7179      00
 7180              	.LASF35:
 7181 009b 7078496E 		.ascii	"pxIndex\000"
 7181      64657800 
 7182              	.LASF137:
 7183 00a3 76546173 		.ascii	"vTaskPriorityInherit\000"
 7183      6B507269 
 7183      6F726974 
 7183      79496E68 
 7183      65726974 
 7184              	.LASF38:
 7185 00b8 7854494D 		.ascii	"xTIME_OUT\000"
 7185      455F4F55 
 7185      5400
 7186              	.LASF79:
 7187 00c2 70784E65 		.ascii	"pxNewQueue\000"
 7187      77517565 
 7187      756500
 7188              	.LASF30:
 7189 00cd 784C4953 		.ascii	"xLIST_ITEM\000"
 7189      545F4954 
 7189      454D00
 7190              	.LASF58:
 7191 00d8 51554555 		.ascii	"QUEUE_REGISTRY_ITEM\000"
 7191      455F5245 
 7191      47495354 
 7191      52595F49 
 7191      54454D00 
 7192              	.LASF128:
 7193 00ec 76546173 		.ascii	"vTaskSetTimeOutState\000"
 7193      6B536574 
 7193      54696D65 
 7193      4F757453 
 7193      74617465 
 7194              	.LASF49:
 7195 0101 78546173 		.ascii	"xTasksWaitingToSend\000"
 7195      6B735761 
 7195      6974696E 
 7195      67546F53 
 7195      656E6400 
 7196              	.LASF111:
 7197 0115 75785175 		.ascii	"uxQueueSpacesAvailable\000"
 7197      65756553 
 7197      70616365 
 7197      73417661 
 7197      696C6162 
 7198              	.LASF55:
 7199 012c 6354784C 		.ascii	"cTxLock\000"
 7199      6F636B00 
 7200              	.LASF39:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 175


 7201 0134 784F7665 		.ascii	"xOverflowCount\000"
 7201      72666C6F 
 7201      77436F75 
 7201      6E7400
 7202              	.LASF120:
 7203 0143 76506F72 		.ascii	"vPortEnterCritical\000"
 7203      74456E74 
 7203      65724372 
 7203      69746963 
 7203      616C00
 7204              	.LASF57:
 7205 0156 51756575 		.ascii	"Queue_t\000"
 7205      655F7400 
 7206              	.LASF88:
 7207 015e 78436F70 		.ascii	"xCopyPosition\000"
 7207      79506F73 
 7207      6974696F 
 7207      6E00
 7208              	.LASF110:
 7209 016c 75785265 		.ascii	"uxReturn\000"
 7209      7475726E 
 7209      00
 7210              	.LASF62:
 7211 0175 51756575 		.ascii	"QueueRegistryItem_t\000"
 7211      65526567 
 7211      69737472 
 7211      79497465 
 7211      6D5F7400 
 7212              	.LASF119:
 7213 0189 76517565 		.ascii	"vQueueDelete\000"
 7213      75654465 
 7213      6C657465 
 7213      00
 7214              	.LASF43:
 7215 0196 70635265 		.ascii	"pcReadFrom\000"
 7215      61644672 
 7215      6F6D00
 7216              	.LASF118:
 7217 01a1 76517565 		.ascii	"vQueueUnregisterQueue\000"
 7217      7565556E 
 7217      72656769 
 7217      73746572 
 7217      51756575 
 7218              	.LASF101:
 7219 01b7 75785361 		.ascii	"uxSavedInterruptStatus\000"
 7219      76656449 
 7219      6E746572 
 7219      72757074 
 7219      53746174 
 7220              	.LASF75:
 7221 01ce 70727649 		.ascii	"prvInitialiseNewQueue\000"
 7221      6E697469 
 7221      616C6973 
 7221      654E6577 
 7221      51756575 
 7222              	.LASF18:
 7223 01e4 75696E74 		.ascii	"uint32_t\000"
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 176


 7223      33325F74 
 7223      00
 7224              	.LASF16:
 7225 01ed 696E7438 		.ascii	"int8_t\000"
 7225      5F7400
 7226              	.LASF95:
 7227 01f4 75784D75 		.ascii	"uxMutexSize\000"
 7227      74657853 
 7227      697A6500 
 7228              	.LASF90:
 7229 0200 78596965 		.ascii	"xYieldRequired\000"
 7229      6C645265 
 7229      71756972 
 7229      656400
 7230              	.LASF73:
 7231 020f 78517565 		.ascii	"xQueue\000"
 7231      756500
 7232              	.LASF19:
 7233 0216 666C6F61 		.ascii	"float\000"
 7233      7400
 7234              	.LASF141:
 7235 021c 433A5C55 		.ascii	"C:\\Users\\Xwx47\\Documents\\Creator\\FreeRTOS_49-4"
 7235      73657273 
 7235      5C587778 
 7235      34375C44 
 7235      6F63756D 
 7236 024a 3278785C 		.ascii	"2xx\\Blinky_FreeRTOS9.cydsn\000"
 7236      426C696E 
 7236      6B795F46 
 7236      72656552 
 7236      544F5339 
 7237              	.LASF45:
 7238 0265 51756575 		.ascii	"QueueDefinition\000"
 7238      65446566 
 7238      696E6974 
 7238      696F6E00 
 7239              	.LASF103:
 7240 0275 78517565 		.ascii	"xQueueGenericReceive\000"
 7240      75654765 
 7240      6E657269 
 7240      63526563 
 7240      65697665 
 7241              	.LASF13:
 7242 028a 6C6F6E67 		.ascii	"long long unsigned int\000"
 7242      206C6F6E 
 7242      6720756E 
 7242      7369676E 
 7242      65642069 
 7243              	.LASF64:
 7244 02a1 70727649 		.ascii	"prvIsQueueEmpty\000"
 7244      73517565 
 7244      7565456D 
 7244      70747900 
 7245              	.LASF70:
 7246 02b1 70764275 		.ascii	"pvBuffer\000"
 7246      66666572 
 7246      00
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 177


 7247              	.LASF26:
 7248 02ba 70785072 		.ascii	"pxPrevious\000"
 7248      6576696F 
 7248      757300
 7249              	.LASF51:
 7250 02c5 75784D65 		.ascii	"uxMessagesWaiting\000"
 7250      73736167 
 7250      65735761 
 7250      6974696E 
 7250      6700
 7251              	.LASF127:
 7252 02d7 7076506F 		.ascii	"pvPortMalloc\000"
 7252      72744D61 
 7252      6C6C6F63 
 7252      00
 7253              	.LASF129:
 7254 02e4 76546173 		.ascii	"vTaskSuspendAll\000"
 7254      6B537573 
 7254      70656E64 
 7254      416C6C00 
 7255              	.LASF139:
 7256 02f4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 7256      43313120 
 7256      352E342E 
 7256      31203230 
 7256      31363036 
 7257 0327 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 7257      20726576 
 7257      6973696F 
 7257      6E203233 
 7257      37373135 
 7258 035a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 7258      66756E63 
 7258      74696F6E 
 7258      2D736563 
 7258      74696F6E 
 7259              	.LASF89:
 7260 0382 78456E74 		.ascii	"xEntryTimeSet\000"
 7260      72795469 
 7260      6D655365 
 7260      7400
 7261              	.LASF3:
 7262 0390 73697A65 		.ascii	"size_t\000"
 7262      5F7400
 7263              	.LASF91:
 7264 0397 7854696D 		.ascii	"xTimeOut\000"
 7264      654F7574 
 7264      00
 7265              	.LASF60:
 7266 03a0 7848616E 		.ascii	"xHandle\000"
 7266      646C6500 
 7267              	.LASF59:
 7268 03a8 70635175 		.ascii	"pcQueueName\000"
 7268      6575654E 
 7268      616D6500 
 7269              	.LASF31:
 7270 03b4 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 178


 7270      495F4C49 
 7270      53545F49 
 7270      54454D00 
 7271              	.LASF33:
 7272 03c4 784C4953 		.ascii	"xLIST\000"
 7272      5400
 7273              	.LASF99:
 7274 03ca 78517565 		.ascii	"xQueueGenericSendFromISR\000"
 7274      75654765 
 7274      6E657269 
 7274      6353656E 
 7274      6446726F 
 7275              	.LASF67:
 7276 03e3 70727643 		.ascii	"prvCopyDataToQueue\000"
 7276      6F707944 
 7276      61746154 
 7276      6F517565 
 7276      756500
 7277              	.LASF86:
 7278 03f6 78517565 		.ascii	"xQueueGenericSend\000"
 7278      75654765 
 7278      6E657269 
 7278      6353656E 
 7278      6400
 7279              	.LASF131:
 7280 0408 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 7280      6B506C61 
 7280      63654F6E 
 7280      4576656E 
 7280      744C6973 
 7281              	.LASF136:
 7282 041e 70765461 		.ascii	"pvTaskIncrementMutexHeldCount\000"
 7282      736B496E 
 7282      6372656D 
 7282      656E744D 
 7282      75746578 
 7283              	.LASF53:
 7284 043c 75784974 		.ascii	"uxItemSize\000"
 7284      656D5369 
 7284      7A6500
 7285              	.LASF85:
 7286 0447 7578496E 		.ascii	"uxInitialCount\000"
 7286      69746961 
 7286      6C436F75 
 7286      6E7400
 7287              	.LASF122:
 7288 0456 78546173 		.ascii	"xTaskPriorityDisinherit\000"
 7288      6B507269 
 7288      6F726974 
 7288      79446973 
 7288      696E6865 
 7289              	.LASF94:
 7290 046e 75784D75 		.ascii	"uxMutexLength\000"
 7290      7465784C 
 7290      656E6774 
 7290      6800
 7291              	.LASF15:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 179


 7292 047c 63686172 		.ascii	"char\000"
 7292      00
 7293              	.LASF29:
 7294 0481 4C697374 		.ascii	"ListItem_t\000"
 7294      4974656D 
 7294      5F7400
 7295              	.LASF63:
 7296 048c 70727649 		.ascii	"prvIsQueueFull\000"
 7296      73517565 
 7296      75654675 
 7296      6C6C00
 7297              	.LASF22:
 7298 049b 55426173 		.ascii	"UBaseType_t\000"
 7298      65547970 
 7298      655F7400 
 7299              	.LASF102:
 7300 04a7 78517565 		.ascii	"xQueueGiveFromISR\000"
 7300      75654769 
 7300      76654672 
 7300      6F6D4953 
 7300      5200
 7301              	.LASF142:
 7302 04b9 78517565 		.ascii	"xQueueRegistry\000"
 7302      75655265 
 7302      67697374 
 7302      727900
 7303              	.LASF42:
 7304 04c8 51756575 		.ascii	"QueueHandle_t\000"
 7304      6548616E 
 7304      646C655F 
 7304      7400
 7305              	.LASF36:
 7306 04d6 784C6973 		.ascii	"xListEnd\000"
 7306      74456E64 
 7306      00
 7307              	.LASF112:
 7308 04df 75785175 		.ascii	"uxQueueMessagesWaitingFromISR\000"
 7308      6575654D 
 7308      65737361 
 7308      67657357 
 7308      61697469 
 7309              	.LASF32:
 7310 04fd 4D696E69 		.ascii	"MiniListItem_t\000"
 7310      4C697374 
 7310      4974656D 
 7310      5F7400
 7311              	.LASF17:
 7312 050c 75696E74 		.ascii	"uint8_t\000"
 7312      385F7400 
 7313              	.LASF61:
 7314 0514 78517565 		.ascii	"xQueueRegistryItem\000"
 7314      75655265 
 7314      67697374 
 7314      72794974 
 7314      656D00
 7315              	.LASF81:
 7316 0527 78517565 		.ascii	"xQueueGenericCreate\000"
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 180


 7316      75654765 
 7316      6E657269 
 7316      63437265 
 7316      61746500 
 7317              	.LASF93:
 7318 053b 78517565 		.ascii	"xQueueCreateMutex\000"
 7318      75654372 
 7318      65617465 
 7318      4D757465 
 7318      7800
 7319              	.LASF1:
 7320 054d 6C6F6E67 		.ascii	"long long int\000"
 7320      206C6F6E 
 7320      6720696E 
 7320      7400
 7321              	.LASF92:
 7322 055b 70727649 		.ascii	"prvInitialiseMutex\000"
 7322      6E697469 
 7322      616C6973 
 7322      654D7574 
 7322      657800
 7323              	.LASF21:
 7324 056e 42617365 		.ascii	"BaseType_t\000"
 7324      54797065 
 7324      5F7400
 7325              	.LASF77:
 7326 0579 70756351 		.ascii	"pucQueueStorage\000"
 7326      75657565 
 7326      53746F72 
 7326      61676500 
 7327              	.LASF97:
 7328 0589 784D7574 		.ascii	"xMutex\000"
 7328      657800
 7329              	.LASF40:
 7330 0590 7854696D 		.ascii	"xTimeOnEntering\000"
 7330      654F6E45 
 7330      6E746572 
 7330      696E6700 
 7331              	.LASF117:
 7332 05a0 76517565 		.ascii	"vQueueAddToRegistry\000"
 7332      75654164 
 7332      64546F52 
 7332      65676973 
 7332      74727900 
 7333              	.LASF25:
 7334 05b4 70784E65 		.ascii	"pxNext\000"
 7334      787400
 7335              	.LASF74:
 7336 05bb 784E6577 		.ascii	"xNewQueue\000"
 7336      51756575 
 7336      6500
 7337              	.LASF84:
 7338 05c5 75784D61 		.ascii	"uxMaxCount\000"
 7338      78436F75 
 7338      6E7400
 7339              	.LASF41:
 7340 05d0 54696D65 		.ascii	"TimeOut_t\000"
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 181


 7340      4F75745F 
 7340      7400
 7341              	.LASF105:
 7342 05da 70634F72 		.ascii	"pcOriginalReadPosition\000"
 7342      6967696E 
 7342      616C5265 
 7342      6164506F 
 7342      73697469 
 7343              	.LASF78:
 7344 05f1 75635175 		.ascii	"ucQueueType\000"
 7344      65756554 
 7344      79706500 
 7345              	.LASF104:
 7346 05fd 784A7573 		.ascii	"xJustPeeking\000"
 7346      74506565 
 7346      6B696E67 
 7346      00
 7347              	.LASF37:
 7348 060a 4C697374 		.ascii	"List_t\000"
 7348      5F7400
 7349              	.LASF48:
 7350 0611 70635772 		.ascii	"pcWriteTo\000"
 7350      69746554 
 7350      6F00
 7351              	.LASF23:
 7352 061b 5469636B 		.ascii	"TickType_t\000"
 7352      54797065 
 7352      5F7400
 7353              	.LASF4:
 7354 0626 5F5F696E 		.ascii	"__int8_t\000"
 7354      74385F74 
 7354      00
 7355              	.LASF76:
 7356 062f 75785175 		.ascii	"uxQueueLength\000"
 7356      6575654C 
 7356      656E6774 
 7356      6800
 7357              	.LASF2:
 7358 063d 6C6F6E67 		.ascii	"long double\000"
 7358      20646F75 
 7358      626C6500 
 7359              	.LASF106:
 7360 0649 78517565 		.ascii	"xQueueTakeMutexRecursive\000"
 7360      75655461 
 7360      6B654D75 
 7360      74657852 
 7360      65637572 
 7361              	.LASF28:
 7362 0662 7076436F 		.ascii	"pvContainer\000"
 7362      6E746169 
 7362      6E657200 
 7363              	.LASF115:
 7364 066e 70635175 		.ascii	"pcQueueGetName\000"
 7364      65756547 
 7364      65744E61 
 7364      6D6500
 7365              	.LASF116:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 182


 7366 067d 70635265 		.ascii	"pcReturn\000"
 7366      7475726E 
 7366      00
 7367              	.LASF52:
 7368 0686 75784C65 		.ascii	"uxLength\000"
 7368      6E677468 
 7368      00
 7369              	.LASF8:
 7370 068f 73686F72 		.ascii	"short int\000"
 7370      7420696E 
 7370      7400
 7371              	.LASF24:
 7372 0699 78497465 		.ascii	"xItemValue\000"
 7372      6D56616C 
 7372      756500
 7373              	.LASF10:
 7374 06a4 6C6F6E67 		.ascii	"long int\000"
 7374      20696E74 
 7374      00
 7375              	.LASF82:
 7376 06ad 78517565 		.ascii	"xQueueSizeInBytes\000"
 7376      75655369 
 7376      7A65496E 
 7376      42797465 
 7376      7300
 7377              	.LASF132:
 7378 06bf 78546173 		.ascii	"xTaskResumeAll\000"
 7378      6B526573 
 7378      756D6541 
 7378      6C6C00
 7379              	.LASF68:
 7380 06ce 70764974 		.ascii	"pvItemToQueue\000"
 7380      656D546F 
 7380      51756575 
 7380      6500
 7381              	.LASF130:
 7382 06dc 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 7382      6B436865 
 7382      636B466F 
 7382      7254696D 
 7382      654F7574 
 7383              	.LASF138:
 7384 06f1 76506F72 		.ascii	"vPortFree\000"
 7384      74467265 
 7384      6500
 7385              	.LASF114:
 7386 06fb 78517565 		.ascii	"xQueueIsQueueFullFromISR\000"
 7386      75654973 
 7386      51756575 
 7386      6546756C 
 7386      6C46726F 
 7387              	.LASF109:
 7388 0714 75785175 		.ascii	"uxQueueMessagesWaiting\000"
 7388      6575654D 
 7388      65737361 
 7388      67657357 
 7388      61697469 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 183


 7389              	.LASF47:
 7390 072b 70635461 		.ascii	"pcTail\000"
 7390      696C00
 7391              	.LASF6:
 7392 0732 5F5F7569 		.ascii	"__uint8_t\000"
 7392      6E74385F 
 7392      7400
 7393              	.LASF65:
 7394 073c 70785175 		.ascii	"pxQueue\000"
 7394      65756500 
 7395              	.LASF66:
 7396 0744 78526574 		.ascii	"xReturn\000"
 7396      75726E00 
 7397              	.LASF14:
 7398 074c 73697A65 		.ascii	"sizetype\000"
 7398      74797065 
 7398      00
 7399              	.LASF124:
 7400 0755 76546173 		.ascii	"vTaskMissedYield\000"
 7400      6B4D6973 
 7400      73656459 
 7400      69656C64 
 7400      00
 7401              	.LASF12:
 7402 0766 6C6F6E67 		.ascii	"long unsigned int\000"
 7402      20756E73 
 7402      69676E65 
 7402      6420696E 
 7402      7400
 7403              	.LASF44:
 7404 0778 75785265 		.ascii	"uxRecursiveCallCount\000"
 7404      63757273 
 7404      69766543 
 7404      616C6C43 
 7404      6F756E74 
 7405              	.LASF108:
 7406 078d 78517565 		.ascii	"xQueuePeekFromISR\000"
 7406      75655065 
 7406      656B4672 
 7406      6F6D4953 
 7406      5200
 7407              	.LASF7:
 7408 079f 756E7369 		.ascii	"unsigned char\000"
 7408      676E6564 
 7408      20636861 
 7408      7200
 7409              	.LASF11:
 7410 07ad 5F5F7569 		.ascii	"__uint32_t\000"
 7410      6E743332 
 7410      5F7400
 7411              	.LASF126:
 7412 07b8 764C6973 		.ascii	"vListInitialise\000"
 7412      74496E69 
 7412      7469616C 
 7412      69736500 
 7413              	.LASF71:
 7414 07c8 70727643 		.ascii	"prvCopyDataFromQueue\000"
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 184


 7414      6F707944 
 7414      61746146 
 7414      726F6D51 
 7414      75657565 
 7415              	.LASF87:
 7416 07dd 78546963 		.ascii	"xTicksToWait\000"
 7416      6B73546F 
 7416      57616974 
 7416      00
 7417              	.LASF27:
 7418 07ea 70764F77 		.ascii	"pvOwner\000"
 7418      6E657200 
 7419              	.LASF135:
 7420 07f2 76436C65 		.ascii	"vClearInterruptMaskFromISR\000"
 7420      6172496E 
 7420      74657272 
 7420      7570744D 
 7420      61736B46 
 7421              	.LASF133:
 7422 080d 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 7422      6B476574 
 7422      43757272 
 7422      656E7454 
 7422      61736B48 
 7423              	.LASF46:
 7424 0827 70634865 		.ascii	"pcHead\000"
 7424      616400
 7425              	.LASF96:
 7426 082e 78517565 		.ascii	"xQueueGiveMutexRecursive\000"
 7426      75654769 
 7426      76654D75 
 7426      74657852 
 7426      65637572 
 7427              	.LASF72:
 7428 0847 70727655 		.ascii	"prvUnlockQueue\000"
 7428      6E6C6F63 
 7428      6B517565 
 7428      756500
 7429              	.LASF140:
 7430 0856 2E2E5C46 		.ascii	"..\\FreeRTOS9\\queue.c\000"
 7430      72656552 
 7430      544F5339 
 7430      5C717565 
 7430      75652E63 
 7431              	.LASF113:
 7432 086b 78517565 		.ascii	"xQueueIsQueueEmptyFromISR\000"
 7432      75654973 
 7432      51756575 
 7432      65456D70 
 7432      74794672 
 7433              	.LASF5:
 7434 0885 7369676E 		.ascii	"signed char\000"
 7434      65642063 
 7434      68617200 
 7435              	.LASF9:
 7436 0891 73686F72 		.ascii	"short unsigned int\000"
 7436      7420756E 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccukZZsu.s 			page 185


 7436      7369676E 
 7436      65642069 
 7436      6E7400
 7437              	.LASF143:
 7438 08a4 6D656D63 		.ascii	"memcpy\000"
 7438      707900
 7439              	.LASF56:
 7440 08ab 78515545 		.ascii	"xQUEUE\000"
 7440      554500
 7441              	.LASF20:
 7442 08b2 646F7562 		.ascii	"double\000"
 7442      6C6500
 7443              	.LASF69:
 7444 08b9 78506F73 		.ascii	"xPosition\000"
 7444      6974696F 
 7444      6E00
 7445              	.LASF54:
 7446 08c3 6352784C 		.ascii	"cRxLock\000"
 7446      6F636B00 
 7447              	.LASF134:
 7448 08cb 756C5365 		.ascii	"ulSetInterruptMaskFromISR\000"
 7448      74496E74 
 7448      65727275 
 7448      70744D61 
 7448      736B4672 
 7449              	.LASF123:
 7450 08e5 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 7450      6B52656D 
 7450      6F766546 
 7450      726F6D45 
 7450      76656E74 
 7451              	.LASF83:
 7452 08fe 78517565 		.ascii	"xQueueCreateCountingSemaphore\000"
 7452      75654372 
 7452      65617465 
 7452      436F756E 
 7452      74696E67 
 7453              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
