ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"queue.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.prvGetDisinheritPriorityAfterTimeout,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	prvGetDisinheritPriorityAfterTimeout, %function
  24              	prvGetDisinheritPriorityAfterTimeout:
  25              	.LFB52:
  26              		.file 1 "..\\FreeRTOS10\\queue.c"
   1:..\FreeRTOS10/queue.c **** /*
   2:..\FreeRTOS10/queue.c ****  * FreeRTOS Kernel V10.0.0
   3:..\FreeRTOS10/queue.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:..\FreeRTOS10/queue.c ****  *
   5:..\FreeRTOS10/queue.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:..\FreeRTOS10/queue.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:..\FreeRTOS10/queue.c ****  * the Software without restriction, including without limitation the rights to
   8:..\FreeRTOS10/queue.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:..\FreeRTOS10/queue.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:..\FreeRTOS10/queue.c ****  * subject to the following conditions:
  11:..\FreeRTOS10/queue.c ****  *
  12:..\FreeRTOS10/queue.c ****  * The above copyright notice and this permission notice shall be included in all
  13:..\FreeRTOS10/queue.c ****  * copies or substantial portions of the Software. If you wish to use our Amazon
  14:..\FreeRTOS10/queue.c ****  * FreeRTOS name, please do so in a fair use way that does not cause confusion.
  15:..\FreeRTOS10/queue.c ****  *
  16:..\FreeRTOS10/queue.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:..\FreeRTOS10/queue.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  18:..\FreeRTOS10/queue.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  19:..\FreeRTOS10/queue.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  20:..\FreeRTOS10/queue.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  21:..\FreeRTOS10/queue.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  22:..\FreeRTOS10/queue.c ****  *
  23:..\FreeRTOS10/queue.c ****  * http://www.FreeRTOS.org
  24:..\FreeRTOS10/queue.c ****  * http://aws.amazon.com/freertos
  25:..\FreeRTOS10/queue.c ****  *
  26:..\FreeRTOS10/queue.c ****  * 1 tab == 4 spaces!
  27:..\FreeRTOS10/queue.c ****  */
  28:..\FreeRTOS10/queue.c **** 
  29:..\FreeRTOS10/queue.c **** #include <stdlib.h>
  30:..\FreeRTOS10/queue.c **** #include <string.h>
  31:..\FreeRTOS10/queue.c **** 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 2


  32:..\FreeRTOS10/queue.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:..\FreeRTOS10/queue.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:..\FreeRTOS10/queue.c **** task.h is included from an application file. */
  35:..\FreeRTOS10/queue.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:..\FreeRTOS10/queue.c **** 
  37:..\FreeRTOS10/queue.c **** #include "FreeRTOS.h"
  38:..\FreeRTOS10/queue.c **** #include "task.h"
  39:..\FreeRTOS10/queue.c **** #include "queue.h"
  40:..\FreeRTOS10/queue.c **** 
  41:..\FreeRTOS10/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
  42:..\FreeRTOS10/queue.c **** 	#include "croutine.h"
  43:..\FreeRTOS10/queue.c **** #endif
  44:..\FreeRTOS10/queue.c **** 
  45:..\FreeRTOS10/queue.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  46:..\FreeRTOS10/queue.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  47:..\FreeRTOS10/queue.c **** header files above, but not in this file, in order to generate the correct
  48:..\FreeRTOS10/queue.c **** privileged Vs unprivileged linkage and placement. */
  49:..\FreeRTOS10/queue.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  50:..\FreeRTOS10/queue.c **** 
  51:..\FreeRTOS10/queue.c **** 
  52:..\FreeRTOS10/queue.c **** /* Constants used with the cRxLock and cTxLock structure members. */
  53:..\FreeRTOS10/queue.c **** #define queueUNLOCKED					( ( int8_t ) -1 )
  54:..\FreeRTOS10/queue.c **** #define queueLOCKED_UNMODIFIED			( ( int8_t ) 0 )
  55:..\FreeRTOS10/queue.c **** 
  56:..\FreeRTOS10/queue.c **** /* When the Queue_t structure is used to represent a base queue its pcHead and
  57:..\FreeRTOS10/queue.c **** pcTail members are used as pointers into the queue storage area.  When the
  58:..\FreeRTOS10/queue.c **** Queue_t structure is used to represent a mutex pcHead and pcTail pointers are
  59:..\FreeRTOS10/queue.c **** not necessary, and the pcHead pointer is set to NULL to indicate that the
  60:..\FreeRTOS10/queue.c **** pcTail pointer actually points to the mutex holder (if any).  Map alternative
  61:..\FreeRTOS10/queue.c **** names to the pcHead and pcTail structure members to ensure the readability of
  62:..\FreeRTOS10/queue.c **** the code is maintained despite this dual use of two structure members.  An
  63:..\FreeRTOS10/queue.c **** alternative implementation would be to use a union, but use of a union is
  64:..\FreeRTOS10/queue.c **** against the coding standard (although an exception to the standard has been
  65:..\FreeRTOS10/queue.c **** permitted where the dual use also significantly changes the type of the
  66:..\FreeRTOS10/queue.c **** structure member). */
  67:..\FreeRTOS10/queue.c **** #define pxMutexHolder					pcTail
  68:..\FreeRTOS10/queue.c **** #define uxQueueType						pcHead
  69:..\FreeRTOS10/queue.c **** #define queueQUEUE_IS_MUTEX				NULL
  70:..\FreeRTOS10/queue.c **** 
  71:..\FreeRTOS10/queue.c **** /* Semaphores do not actually store or copy data, so have an item size of
  72:..\FreeRTOS10/queue.c **** zero. */
  73:..\FreeRTOS10/queue.c **** #define queueSEMAPHORE_QUEUE_ITEM_LENGTH ( ( UBaseType_t ) 0 )
  74:..\FreeRTOS10/queue.c **** #define queueMUTEX_GIVE_BLOCK_TIME		 ( ( TickType_t ) 0U )
  75:..\FreeRTOS10/queue.c **** 
  76:..\FreeRTOS10/queue.c **** #if( configUSE_PREEMPTION == 0 )
  77:..\FreeRTOS10/queue.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  78:..\FreeRTOS10/queue.c **** 	performed just because a higher priority task has been woken. */
  79:..\FreeRTOS10/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION()
  80:..\FreeRTOS10/queue.c **** #else
  81:..\FreeRTOS10/queue.c **** 	#define queueYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  82:..\FreeRTOS10/queue.c **** #endif
  83:..\FreeRTOS10/queue.c **** 
  84:..\FreeRTOS10/queue.c **** /*
  85:..\FreeRTOS10/queue.c ****  * Definition of the queue used by the scheduler.
  86:..\FreeRTOS10/queue.c ****  * Items are queued by copy, not reference.  See the following link for the
  87:..\FreeRTOS10/queue.c ****  * rationale: http://www.freertos.org/Embedded-RTOS-Queues.html
  88:..\FreeRTOS10/queue.c ****  */
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 3


  89:..\FreeRTOS10/queue.c **** typedef struct QueueDefinition
  90:..\FreeRTOS10/queue.c **** {
  91:..\FreeRTOS10/queue.c **** 	int8_t *pcHead;					/*< Points to the beginning of the queue storage area. */
  92:..\FreeRTOS10/queue.c **** 	int8_t *pcTail;					/*< Points to the byte at the end of the queue storage area.  Once more byte i
  93:..\FreeRTOS10/queue.c **** 	int8_t *pcWriteTo;				/*< Points to the free next place in the storage area. */
  94:..\FreeRTOS10/queue.c **** 
  95:..\FreeRTOS10/queue.c **** 	union							/* Use of a union is an exception to the coding standard to ensure two mutually exclus
  96:..\FreeRTOS10/queue.c **** 	{
  97:..\FreeRTOS10/queue.c **** 		int8_t *pcReadFrom;			/*< Points to the last place that a queued item was read from when the stru
  98:..\FreeRTOS10/queue.c **** 		UBaseType_t uxRecursiveCallCount;/*< Maintains a count of the number of times a recursive mutex h
  99:..\FreeRTOS10/queue.c **** 	} u;
 100:..\FreeRTOS10/queue.c **** 
 101:..\FreeRTOS10/queue.c **** 	List_t xTasksWaitingToSend;		/*< List of tasks that are blocked waiting to post onto this queue.  
 102:..\FreeRTOS10/queue.c **** 	List_t xTasksWaitingToReceive;	/*< List of tasks that are blocked waiting to read from this queue.
 103:..\FreeRTOS10/queue.c **** 
 104:..\FreeRTOS10/queue.c **** 	volatile UBaseType_t uxMessagesWaiting;/*< The number of items currently in the queue. */
 105:..\FreeRTOS10/queue.c **** 	UBaseType_t uxLength;			/*< The length of the queue defined as the number of items it will hold, n
 106:..\FreeRTOS10/queue.c **** 	UBaseType_t uxItemSize;			/*< The size of each items that the queue will hold. */
 107:..\FreeRTOS10/queue.c **** 
 108:..\FreeRTOS10/queue.c **** 	volatile int8_t cRxLock;		/*< Stores the number of items received from the queue (removed from the
 109:..\FreeRTOS10/queue.c **** 	volatile int8_t cTxLock;		/*< Stores the number of items transmitted to the queue (added to the qu
 110:..\FreeRTOS10/queue.c **** 
 111:..\FreeRTOS10/queue.c **** 	#if( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 112:..\FreeRTOS10/queue.c **** 		uint8_t ucStaticallyAllocated;	/*< Set to pdTRUE if the memory used by the queue was statically a
 113:..\FreeRTOS10/queue.c **** 	#endif
 114:..\FreeRTOS10/queue.c **** 
 115:..\FreeRTOS10/queue.c **** 	#if ( configUSE_QUEUE_SETS == 1 )
 116:..\FreeRTOS10/queue.c **** 		struct QueueDefinition *pxQueueSetContainer;
 117:..\FreeRTOS10/queue.c **** 	#endif
 118:..\FreeRTOS10/queue.c **** 
 119:..\FreeRTOS10/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 120:..\FreeRTOS10/queue.c **** 		UBaseType_t uxQueueNumber;
 121:..\FreeRTOS10/queue.c **** 		uint8_t ucQueueType;
 122:..\FreeRTOS10/queue.c **** 	#endif
 123:..\FreeRTOS10/queue.c **** 
 124:..\FreeRTOS10/queue.c **** } xQUEUE;
 125:..\FreeRTOS10/queue.c **** 
 126:..\FreeRTOS10/queue.c **** /* The old xQUEUE name is maintained above then typedefed to the new Queue_t
 127:..\FreeRTOS10/queue.c **** name below to enable the use of older kernel aware debuggers. */
 128:..\FreeRTOS10/queue.c **** typedef xQUEUE Queue_t;
 129:..\FreeRTOS10/queue.c **** 
 130:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 131:..\FreeRTOS10/queue.c **** 
 132:..\FreeRTOS10/queue.c **** /*
 133:..\FreeRTOS10/queue.c ****  * The queue registry is just a means for kernel aware debuggers to locate
 134:..\FreeRTOS10/queue.c ****  * queue structures.  It has no other purpose so is an optional component.
 135:..\FreeRTOS10/queue.c ****  */
 136:..\FreeRTOS10/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
 137:..\FreeRTOS10/queue.c **** 
 138:..\FreeRTOS10/queue.c **** 	/* The type stored within the queue registry array.  This allows a name
 139:..\FreeRTOS10/queue.c **** 	to be assigned to each queue making kernel aware debugging a little
 140:..\FreeRTOS10/queue.c **** 	more user friendly. */
 141:..\FreeRTOS10/queue.c **** 	typedef struct QUEUE_REGISTRY_ITEM
 142:..\FreeRTOS10/queue.c **** 	{
 143:..\FreeRTOS10/queue.c **** 		const char *pcQueueName; /*lint !e971 Unqualified char types are allowed for strings and single c
 144:..\FreeRTOS10/queue.c **** 		QueueHandle_t xHandle;
 145:..\FreeRTOS10/queue.c **** 	} xQueueRegistryItem;
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 4


 146:..\FreeRTOS10/queue.c **** 
 147:..\FreeRTOS10/queue.c **** 	/* The old xQueueRegistryItem name is maintained above then typedefed to the
 148:..\FreeRTOS10/queue.c **** 	new xQueueRegistryItem name below to enable the use of older kernel aware
 149:..\FreeRTOS10/queue.c **** 	debuggers. */
 150:..\FreeRTOS10/queue.c **** 	typedef xQueueRegistryItem QueueRegistryItem_t;
 151:..\FreeRTOS10/queue.c **** 
 152:..\FreeRTOS10/queue.c **** 	/* The queue registry is simply an array of QueueRegistryItem_t structures.
 153:..\FreeRTOS10/queue.c **** 	The pcQueueName member of a structure being NULL is indicative of the
 154:..\FreeRTOS10/queue.c **** 	array position being vacant. */
 155:..\FreeRTOS10/queue.c **** 	PRIVILEGED_DATA QueueRegistryItem_t xQueueRegistry[ configQUEUE_REGISTRY_SIZE ];
 156:..\FreeRTOS10/queue.c **** 
 157:..\FreeRTOS10/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
 158:..\FreeRTOS10/queue.c **** 
 159:..\FreeRTOS10/queue.c **** /*
 160:..\FreeRTOS10/queue.c ****  * Unlocks a queue locked by a call to prvLockQueue.  Locking a queue does not
 161:..\FreeRTOS10/queue.c ****  * prevent an ISR from adding or removing items to the queue, but does prevent
 162:..\FreeRTOS10/queue.c ****  * an ISR from removing tasks from the queue event lists.  If an ISR finds a
 163:..\FreeRTOS10/queue.c ****  * queue is locked it will instead increment the appropriate queue lock count
 164:..\FreeRTOS10/queue.c ****  * to indicate that a task may require unblocking.  When the queue in unlocked
 165:..\FreeRTOS10/queue.c ****  * these lock counts are inspected, and the appropriate action taken.
 166:..\FreeRTOS10/queue.c ****  */
 167:..\FreeRTOS10/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue ) PRIVILEGED_FUNCTION;
 168:..\FreeRTOS10/queue.c **** 
 169:..\FreeRTOS10/queue.c **** /*
 170:..\FreeRTOS10/queue.c ****  * Uses a critical section to determine if there is any data in a queue.
 171:..\FreeRTOS10/queue.c ****  *
 172:..\FreeRTOS10/queue.c ****  * @return pdTRUE if the queue contains no items, otherwise pdFALSE.
 173:..\FreeRTOS10/queue.c ****  */
 174:..\FreeRTOS10/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 175:..\FreeRTOS10/queue.c **** 
 176:..\FreeRTOS10/queue.c **** /*
 177:..\FreeRTOS10/queue.c ****  * Uses a critical section to determine if there is any space in a queue.
 178:..\FreeRTOS10/queue.c ****  *
 179:..\FreeRTOS10/queue.c ****  * @return pdTRUE if there is no space, otherwise pdFALSE;
 180:..\FreeRTOS10/queue.c ****  */
 181:..\FreeRTOS10/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue ) PRIVILEGED_FUNCTION;
 182:..\FreeRTOS10/queue.c **** 
 183:..\FreeRTOS10/queue.c **** /*
 184:..\FreeRTOS10/queue.c ****  * Copies an item into the queue, either at the front of the queue or the
 185:..\FreeRTOS10/queue.c ****  * back of the queue.
 186:..\FreeRTOS10/queue.c ****  */
 187:..\FreeRTOS10/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
 188:..\FreeRTOS10/queue.c **** 
 189:..\FreeRTOS10/queue.c **** /*
 190:..\FreeRTOS10/queue.c ****  * Copies an item out of a queue.
 191:..\FreeRTOS10/queue.c ****  */
 192:..\FreeRTOS10/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer ) PRIVILEGED_FUNCT
 193:..\FreeRTOS10/queue.c **** 
 194:..\FreeRTOS10/queue.c **** #if ( configUSE_QUEUE_SETS == 1 )
 195:..\FreeRTOS10/queue.c **** 	/*
 196:..\FreeRTOS10/queue.c **** 	 * Checks to see if a queue is a member of a queue set, and if so, notifies
 197:..\FreeRTOS10/queue.c **** 	 * the queue set that the queue contains data.
 198:..\FreeRTOS10/queue.c **** 	 */
 199:..\FreeRTOS10/queue.c **** 	static BaseType_t prvNotifyQueueSetContainer( const Queue_t * const pxQueue, const BaseType_t xCop
 200:..\FreeRTOS10/queue.c **** #endif
 201:..\FreeRTOS10/queue.c **** 
 202:..\FreeRTOS10/queue.c **** /*
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 5


 203:..\FreeRTOS10/queue.c ****  * Called after a Queue_t structure has been allocated either statically or
 204:..\FreeRTOS10/queue.c ****  * dynamically to fill in the structure's members.
 205:..\FreeRTOS10/queue.c ****  */
 206:..\FreeRTOS10/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 207:..\FreeRTOS10/queue.c **** 
 208:..\FreeRTOS10/queue.c **** /*
 209:..\FreeRTOS10/queue.c ****  * Mutexes are a special type of queue.  When a mutex is created, first the
 210:..\FreeRTOS10/queue.c ****  * queue is created, then prvInitialiseMutex() is called to configure the queue
 211:..\FreeRTOS10/queue.c ****  * as a mutex.
 212:..\FreeRTOS10/queue.c ****  */
 213:..\FreeRTOS10/queue.c **** #if( configUSE_MUTEXES == 1 )
 214:..\FreeRTOS10/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue ) PRIVILEGED_FUNCTION;
 215:..\FreeRTOS10/queue.c **** #endif
 216:..\FreeRTOS10/queue.c **** 
 217:..\FreeRTOS10/queue.c **** #if( configUSE_MUTEXES == 1 )
 218:..\FreeRTOS10/queue.c **** 	/*
 219:..\FreeRTOS10/queue.c **** 	 * If a task waiting for a mutex causes the mutex holder to inherit a
 220:..\FreeRTOS10/queue.c **** 	 * priority, but the waiting task times out, then the holder should
 221:..\FreeRTOS10/queue.c **** 	 * disinherit the priority - but only down to the highest priority of any
 222:..\FreeRTOS10/queue.c **** 	 * other tasks that are waiting for the same mutex.  This function returns
 223:..\FreeRTOS10/queue.c **** 	 * that priority.
 224:..\FreeRTOS10/queue.c **** 	 */
 225:..\FreeRTOS10/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue ) PRIVILEGE
 226:..\FreeRTOS10/queue.c **** #endif
 227:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 228:..\FreeRTOS10/queue.c **** 
 229:..\FreeRTOS10/queue.c **** /*
 230:..\FreeRTOS10/queue.c ****  * Macro to mark a queue as locked.  Locking a queue prevents an ISR from
 231:..\FreeRTOS10/queue.c ****  * accessing the queue event lists.
 232:..\FreeRTOS10/queue.c ****  */
 233:..\FreeRTOS10/queue.c **** #define prvLockQueue( pxQueue )								\
 234:..\FreeRTOS10/queue.c **** 	taskENTER_CRITICAL();									\
 235:..\FreeRTOS10/queue.c **** 	{														\
 236:..\FreeRTOS10/queue.c **** 		if( ( pxQueue )->cRxLock == queueUNLOCKED )			\
 237:..\FreeRTOS10/queue.c **** 		{													\
 238:..\FreeRTOS10/queue.c **** 			( pxQueue )->cRxLock = queueLOCKED_UNMODIFIED;	\
 239:..\FreeRTOS10/queue.c **** 		}													\
 240:..\FreeRTOS10/queue.c **** 		if( ( pxQueue )->cTxLock == queueUNLOCKED )			\
 241:..\FreeRTOS10/queue.c **** 		{													\
 242:..\FreeRTOS10/queue.c **** 			( pxQueue )->cTxLock = queueLOCKED_UNMODIFIED;	\
 243:..\FreeRTOS10/queue.c **** 		}													\
 244:..\FreeRTOS10/queue.c **** 	}														\
 245:..\FreeRTOS10/queue.c **** 	taskEXIT_CRITICAL()
 246:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 247:..\FreeRTOS10/queue.c **** 
 248:..\FreeRTOS10/queue.c **** BaseType_t xQueueGenericReset( QueueHandle_t xQueue, BaseType_t xNewQueue )
 249:..\FreeRTOS10/queue.c **** {
 250:..\FreeRTOS10/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 251:..\FreeRTOS10/queue.c **** 
 252:..\FreeRTOS10/queue.c **** 	configASSERT( pxQueue );
 253:..\FreeRTOS10/queue.c **** 
 254:..\FreeRTOS10/queue.c **** 	taskENTER_CRITICAL();
 255:..\FreeRTOS10/queue.c **** 	{
 256:..\FreeRTOS10/queue.c **** 		pxQueue->pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
 257:..\FreeRTOS10/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 258:..\FreeRTOS10/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 259:..\FreeRTOS10/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 6


 260:..\FreeRTOS10/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 261:..\FreeRTOS10/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 262:..\FreeRTOS10/queue.c **** 
 263:..\FreeRTOS10/queue.c **** 		if( xNewQueue == pdFALSE )
 264:..\FreeRTOS10/queue.c **** 		{
 265:..\FreeRTOS10/queue.c **** 			/* If there are tasks blocked waiting to read from the queue, then
 266:..\FreeRTOS10/queue.c **** 			the tasks will remain blocked as after this function exits the queue
 267:..\FreeRTOS10/queue.c **** 			will still be empty.  If there are tasks blocked waiting to write to
 268:..\FreeRTOS10/queue.c **** 			the queue, then one should be unblocked as after this function exits
 269:..\FreeRTOS10/queue.c **** 			it will be possible to write to it. */
 270:..\FreeRTOS10/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 271:..\FreeRTOS10/queue.c **** 			{
 272:..\FreeRTOS10/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 273:..\FreeRTOS10/queue.c **** 				{
 274:..\FreeRTOS10/queue.c **** 					queueYIELD_IF_USING_PREEMPTION();
 275:..\FreeRTOS10/queue.c **** 				}
 276:..\FreeRTOS10/queue.c **** 				else
 277:..\FreeRTOS10/queue.c **** 				{
 278:..\FreeRTOS10/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 279:..\FreeRTOS10/queue.c **** 				}
 280:..\FreeRTOS10/queue.c **** 			}
 281:..\FreeRTOS10/queue.c **** 			else
 282:..\FreeRTOS10/queue.c **** 			{
 283:..\FreeRTOS10/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 284:..\FreeRTOS10/queue.c **** 			}
 285:..\FreeRTOS10/queue.c **** 		}
 286:..\FreeRTOS10/queue.c **** 		else
 287:..\FreeRTOS10/queue.c **** 		{
 288:..\FreeRTOS10/queue.c **** 			/* Ensure the event queues start in the correct state. */
 289:..\FreeRTOS10/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 290:..\FreeRTOS10/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 291:..\FreeRTOS10/queue.c **** 		}
 292:..\FreeRTOS10/queue.c **** 	}
 293:..\FreeRTOS10/queue.c **** 	taskEXIT_CRITICAL();
 294:..\FreeRTOS10/queue.c **** 
 295:..\FreeRTOS10/queue.c **** 	/* A value is returned for calling semantic consistency with previous
 296:..\FreeRTOS10/queue.c **** 	versions. */
 297:..\FreeRTOS10/queue.c **** 	return pdPASS;
 298:..\FreeRTOS10/queue.c **** }
 299:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 300:..\FreeRTOS10/queue.c **** 
 301:..\FreeRTOS10/queue.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 302:..\FreeRTOS10/queue.c **** 
 303:..\FreeRTOS10/queue.c **** 	QueueHandle_t xQueueGenericCreateStatic( const UBaseType_t uxQueueLength, const UBaseType_t uxItem
 304:..\FreeRTOS10/queue.c **** 	{
 305:..\FreeRTOS10/queue.c **** 	Queue_t *pxNewQueue;
 306:..\FreeRTOS10/queue.c **** 
 307:..\FreeRTOS10/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 308:..\FreeRTOS10/queue.c **** 
 309:..\FreeRTOS10/queue.c **** 		/* The StaticQueue_t structure and the queue storage area must be
 310:..\FreeRTOS10/queue.c **** 		supplied. */
 311:..\FreeRTOS10/queue.c **** 		configASSERT( pxStaticQueue != NULL );
 312:..\FreeRTOS10/queue.c **** 
 313:..\FreeRTOS10/queue.c **** 		/* A queue storage area should be provided if the item size is not 0, and
 314:..\FreeRTOS10/queue.c **** 		should not be provided if the item size is 0. */
 315:..\FreeRTOS10/queue.c **** 		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 316:..\FreeRTOS10/queue.c **** 		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 7


 317:..\FreeRTOS10/queue.c **** 
 318:..\FreeRTOS10/queue.c **** 		#if( configASSERT_DEFINED == 1 )
 319:..\FreeRTOS10/queue.c **** 		{
 320:..\FreeRTOS10/queue.c **** 			/* Sanity check that the size of the structure used to declare a
 321:..\FreeRTOS10/queue.c **** 			variable of type StaticQueue_t or StaticSemaphore_t equals the size of
 322:..\FreeRTOS10/queue.c **** 			the real queue and semaphore structures. */
 323:..\FreeRTOS10/queue.c **** 			volatile size_t xSize = sizeof( StaticQueue_t );
 324:..\FreeRTOS10/queue.c **** 			configASSERT( xSize == sizeof( Queue_t ) );
 325:..\FreeRTOS10/queue.c **** 		}
 326:..\FreeRTOS10/queue.c **** 		#endif /* configASSERT_DEFINED */
 327:..\FreeRTOS10/queue.c **** 
 328:..\FreeRTOS10/queue.c **** 		/* The address of a statically allocated queue was passed in, use it.
 329:..\FreeRTOS10/queue.c **** 		The address of a statically allocated storage area was also passed in
 330:..\FreeRTOS10/queue.c **** 		but is already set. */
 331:..\FreeRTOS10/queue.c **** 		pxNewQueue = ( Queue_t * ) pxStaticQueue; /*lint !e740 Unusual cast is ok as the structures are d
 332:..\FreeRTOS10/queue.c **** 
 333:..\FreeRTOS10/queue.c **** 		if( pxNewQueue != NULL )
 334:..\FreeRTOS10/queue.c **** 		{
 335:..\FreeRTOS10/queue.c **** 			#if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 336:..\FreeRTOS10/queue.c **** 			{
 337:..\FreeRTOS10/queue.c **** 				/* Queues can be allocated wither statically or dynamically, so
 338:..\FreeRTOS10/queue.c **** 				note this queue was allocated statically in case the queue is
 339:..\FreeRTOS10/queue.c **** 				later deleted. */
 340:..\FreeRTOS10/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 341:..\FreeRTOS10/queue.c **** 			}
 342:..\FreeRTOS10/queue.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 343:..\FreeRTOS10/queue.c **** 
 344:..\FreeRTOS10/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 345:..\FreeRTOS10/queue.c **** 		}
 346:..\FreeRTOS10/queue.c **** 		else
 347:..\FreeRTOS10/queue.c **** 		{
 348:..\FreeRTOS10/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 349:..\FreeRTOS10/queue.c **** 		}
 350:..\FreeRTOS10/queue.c **** 
 351:..\FreeRTOS10/queue.c **** 		return pxNewQueue;
 352:..\FreeRTOS10/queue.c **** 	}
 353:..\FreeRTOS10/queue.c **** 
 354:..\FreeRTOS10/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 355:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 356:..\FreeRTOS10/queue.c **** 
 357:..\FreeRTOS10/queue.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 358:..\FreeRTOS10/queue.c **** 
 359:..\FreeRTOS10/queue.c **** 	QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, 
 360:..\FreeRTOS10/queue.c **** 	{
 361:..\FreeRTOS10/queue.c **** 	Queue_t *pxNewQueue;
 362:..\FreeRTOS10/queue.c **** 	size_t xQueueSizeInBytes;
 363:..\FreeRTOS10/queue.c **** 	uint8_t *pucQueueStorage;
 364:..\FreeRTOS10/queue.c **** 
 365:..\FreeRTOS10/queue.c **** 		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 366:..\FreeRTOS10/queue.c **** 
 367:..\FreeRTOS10/queue.c **** 		if( uxItemSize == ( UBaseType_t ) 0 )
 368:..\FreeRTOS10/queue.c **** 		{
 369:..\FreeRTOS10/queue.c **** 			/* There is not going to be a queue storage area. */
 370:..\FreeRTOS10/queue.c **** 			xQueueSizeInBytes = ( size_t ) 0;
 371:..\FreeRTOS10/queue.c **** 		}
 372:..\FreeRTOS10/queue.c **** 		else
 373:..\FreeRTOS10/queue.c **** 		{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 8


 374:..\FreeRTOS10/queue.c **** 			/* Allocate enough space to hold the maximum number of items that
 375:..\FreeRTOS10/queue.c **** 			can be in the queue at any time. */
 376:..\FreeRTOS10/queue.c **** 			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as t
 377:..\FreeRTOS10/queue.c **** 		}
 378:..\FreeRTOS10/queue.c **** 
 379:..\FreeRTOS10/queue.c **** 		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
 380:..\FreeRTOS10/queue.c **** 
 381:..\FreeRTOS10/queue.c **** 		if( pxNewQueue != NULL )
 382:..\FreeRTOS10/queue.c **** 		{
 383:..\FreeRTOS10/queue.c **** 			/* Jump past the queue structure to find the location of the queue
 384:..\FreeRTOS10/queue.c **** 			storage area. */
 385:..\FreeRTOS10/queue.c **** 			pucQueueStorage = ( ( uint8_t * ) pxNewQueue ) + sizeof( Queue_t );
 386:..\FreeRTOS10/queue.c **** 
 387:..\FreeRTOS10/queue.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 388:..\FreeRTOS10/queue.c **** 			{
 389:..\FreeRTOS10/queue.c **** 				/* Queues can be created either statically or dynamically, so
 390:..\FreeRTOS10/queue.c **** 				note this task was created dynamically in case it is later
 391:..\FreeRTOS10/queue.c **** 				deleted. */
 392:..\FreeRTOS10/queue.c **** 				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 393:..\FreeRTOS10/queue.c **** 			}
 394:..\FreeRTOS10/queue.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 395:..\FreeRTOS10/queue.c **** 
 396:..\FreeRTOS10/queue.c **** 			prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
 397:..\FreeRTOS10/queue.c **** 		}
 398:..\FreeRTOS10/queue.c **** 		else
 399:..\FreeRTOS10/queue.c **** 		{
 400:..\FreeRTOS10/queue.c **** 			traceQUEUE_CREATE_FAILED( ucQueueType );
 401:..\FreeRTOS10/queue.c **** 		}
 402:..\FreeRTOS10/queue.c **** 
 403:..\FreeRTOS10/queue.c **** 		return pxNewQueue;
 404:..\FreeRTOS10/queue.c **** 	}
 405:..\FreeRTOS10/queue.c **** 
 406:..\FreeRTOS10/queue.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 407:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 408:..\FreeRTOS10/queue.c **** 
 409:..\FreeRTOS10/queue.c **** static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength, const UBaseType_t uxItemSize, u
 410:..\FreeRTOS10/queue.c **** {
 411:..\FreeRTOS10/queue.c **** 	/* Remove compiler warnings about unused parameters should
 412:..\FreeRTOS10/queue.c **** 	configUSE_TRACE_FACILITY not be set to 1. */
 413:..\FreeRTOS10/queue.c **** 	( void ) ucQueueType;
 414:..\FreeRTOS10/queue.c **** 
 415:..\FreeRTOS10/queue.c **** 	if( uxItemSize == ( UBaseType_t ) 0 )
 416:..\FreeRTOS10/queue.c **** 	{
 417:..\FreeRTOS10/queue.c **** 		/* No RAM was allocated for the queue storage area, but PC head cannot
 418:..\FreeRTOS10/queue.c **** 		be set to NULL because NULL is used as a key to say the queue is used as
 419:..\FreeRTOS10/queue.c **** 		a mutex.  Therefore just set pcHead to point to the queue as a benign
 420:..\FreeRTOS10/queue.c **** 		value that is known to be within the memory map. */
 421:..\FreeRTOS10/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
 422:..\FreeRTOS10/queue.c **** 	}
 423:..\FreeRTOS10/queue.c **** 	else
 424:..\FreeRTOS10/queue.c **** 	{
 425:..\FreeRTOS10/queue.c **** 		/* Set the head to the start of the queue storage area. */
 426:..\FreeRTOS10/queue.c **** 		pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
 427:..\FreeRTOS10/queue.c **** 	}
 428:..\FreeRTOS10/queue.c **** 
 429:..\FreeRTOS10/queue.c **** 	/* Initialise the queue members as described where the queue type is
 430:..\FreeRTOS10/queue.c **** 	defined. */
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 9


 431:..\FreeRTOS10/queue.c **** 	pxNewQueue->uxLength = uxQueueLength;
 432:..\FreeRTOS10/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 433:..\FreeRTOS10/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 434:..\FreeRTOS10/queue.c **** 
 435:..\FreeRTOS10/queue.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 436:..\FreeRTOS10/queue.c **** 	{
 437:..\FreeRTOS10/queue.c **** 		pxNewQueue->ucQueueType = ucQueueType;
 438:..\FreeRTOS10/queue.c **** 	}
 439:..\FreeRTOS10/queue.c **** 	#endif /* configUSE_TRACE_FACILITY */
 440:..\FreeRTOS10/queue.c **** 
 441:..\FreeRTOS10/queue.c **** 	#if( configUSE_QUEUE_SETS == 1 )
 442:..\FreeRTOS10/queue.c **** 	{
 443:..\FreeRTOS10/queue.c **** 		pxNewQueue->pxQueueSetContainer = NULL;
 444:..\FreeRTOS10/queue.c **** 	}
 445:..\FreeRTOS10/queue.c **** 	#endif /* configUSE_QUEUE_SETS */
 446:..\FreeRTOS10/queue.c **** 
 447:..\FreeRTOS10/queue.c **** 	traceQUEUE_CREATE( pxNewQueue );
 448:..\FreeRTOS10/queue.c **** }
 449:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 450:..\FreeRTOS10/queue.c **** 
 451:..\FreeRTOS10/queue.c **** #if( configUSE_MUTEXES == 1 )
 452:..\FreeRTOS10/queue.c **** 
 453:..\FreeRTOS10/queue.c **** 	static void prvInitialiseMutex( Queue_t *pxNewQueue )
 454:..\FreeRTOS10/queue.c **** 	{
 455:..\FreeRTOS10/queue.c **** 		if( pxNewQueue != NULL )
 456:..\FreeRTOS10/queue.c **** 		{
 457:..\FreeRTOS10/queue.c **** 			/* The queue create function will set all the queue structure members
 458:..\FreeRTOS10/queue.c **** 			correctly for a generic queue, but this function is creating a
 459:..\FreeRTOS10/queue.c **** 			mutex.  Overwrite those members that need to be set differently -
 460:..\FreeRTOS10/queue.c **** 			in particular the information required for priority inheritance. */
 461:..\FreeRTOS10/queue.c **** 			pxNewQueue->pxMutexHolder = NULL;
 462:..\FreeRTOS10/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 463:..\FreeRTOS10/queue.c **** 
 464:..\FreeRTOS10/queue.c **** 			/* In case this is a recursive mutex. */
 465:..\FreeRTOS10/queue.c **** 			pxNewQueue->u.uxRecursiveCallCount = 0;
 466:..\FreeRTOS10/queue.c **** 
 467:..\FreeRTOS10/queue.c **** 			traceCREATE_MUTEX( pxNewQueue );
 468:..\FreeRTOS10/queue.c **** 
 469:..\FreeRTOS10/queue.c **** 			/* Start with the semaphore in the expected state. */
 470:..\FreeRTOS10/queue.c **** 			( void ) xQueueGenericSend( pxNewQueue, NULL, ( TickType_t ) 0U, queueSEND_TO_BACK );
 471:..\FreeRTOS10/queue.c **** 		}
 472:..\FreeRTOS10/queue.c **** 		else
 473:..\FreeRTOS10/queue.c **** 		{
 474:..\FreeRTOS10/queue.c **** 			traceCREATE_MUTEX_FAILED();
 475:..\FreeRTOS10/queue.c **** 		}
 476:..\FreeRTOS10/queue.c **** 	}
 477:..\FreeRTOS10/queue.c **** 
 478:..\FreeRTOS10/queue.c **** #endif /* configUSE_MUTEXES */
 479:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 480:..\FreeRTOS10/queue.c **** 
 481:..\FreeRTOS10/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 482:..\FreeRTOS10/queue.c **** 
 483:..\FreeRTOS10/queue.c **** 	QueueHandle_t xQueueCreateMutex( const uint8_t ucQueueType )
 484:..\FreeRTOS10/queue.c **** 	{
 485:..\FreeRTOS10/queue.c **** 	Queue_t *pxNewQueue;
 486:..\FreeRTOS10/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 487:..\FreeRTOS10/queue.c **** 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 10


 488:..\FreeRTOS10/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreate( uxMutexLength, uxMutexSize, ucQueueType );
 489:..\FreeRTOS10/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 490:..\FreeRTOS10/queue.c **** 
 491:..\FreeRTOS10/queue.c **** 		return pxNewQueue;
 492:..\FreeRTOS10/queue.c **** 	}
 493:..\FreeRTOS10/queue.c **** 
 494:..\FreeRTOS10/queue.c **** #endif /* configUSE_MUTEXES */
 495:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 496:..\FreeRTOS10/queue.c **** 
 497:..\FreeRTOS10/queue.c **** #if( ( configUSE_MUTEXES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 498:..\FreeRTOS10/queue.c **** 
 499:..\FreeRTOS10/queue.c **** 	QueueHandle_t xQueueCreateMutexStatic( const uint8_t ucQueueType, StaticQueue_t *pxStaticQueue )
 500:..\FreeRTOS10/queue.c **** 	{
 501:..\FreeRTOS10/queue.c **** 	Queue_t *pxNewQueue;
 502:..\FreeRTOS10/queue.c **** 	const UBaseType_t uxMutexLength = ( UBaseType_t ) 1, uxMutexSize = ( UBaseType_t ) 0;
 503:..\FreeRTOS10/queue.c **** 
 504:..\FreeRTOS10/queue.c **** 		/* Prevent compiler warnings about unused parameters if
 505:..\FreeRTOS10/queue.c **** 		configUSE_TRACE_FACILITY does not equal 1. */
 506:..\FreeRTOS10/queue.c **** 		( void ) ucQueueType;
 507:..\FreeRTOS10/queue.c **** 
 508:..\FreeRTOS10/queue.c **** 		pxNewQueue = ( Queue_t * ) xQueueGenericCreateStatic( uxMutexLength, uxMutexSize, NULL, pxStaticQ
 509:..\FreeRTOS10/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 510:..\FreeRTOS10/queue.c **** 
 511:..\FreeRTOS10/queue.c **** 		return pxNewQueue;
 512:..\FreeRTOS10/queue.c **** 	}
 513:..\FreeRTOS10/queue.c **** 
 514:..\FreeRTOS10/queue.c **** #endif /* configUSE_MUTEXES */
 515:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 516:..\FreeRTOS10/queue.c **** 
 517:..\FreeRTOS10/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 518:..\FreeRTOS10/queue.c **** 
 519:..\FreeRTOS10/queue.c **** 	void* xQueueGetMutexHolder( QueueHandle_t xSemaphore )
 520:..\FreeRTOS10/queue.c **** 	{
 521:..\FreeRTOS10/queue.c **** 	void *pxReturn;
 522:..\FreeRTOS10/queue.c **** 
 523:..\FreeRTOS10/queue.c **** 		/* This function is called by xSemaphoreGetMutexHolder(), and should not
 524:..\FreeRTOS10/queue.c **** 		be called directly.  Note:  This is a good way of determining if the
 525:..\FreeRTOS10/queue.c **** 		calling task is the mutex holder, but not a good way of determining the
 526:..\FreeRTOS10/queue.c **** 		identity of the mutex holder, as the holder may change between the
 527:..\FreeRTOS10/queue.c **** 		following critical section exiting and the function returning. */
 528:..\FreeRTOS10/queue.c **** 		taskENTER_CRITICAL();
 529:..\FreeRTOS10/queue.c **** 		{
 530:..\FreeRTOS10/queue.c **** 			if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 531:..\FreeRTOS10/queue.c **** 			{
 532:..\FreeRTOS10/queue.c **** 				pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 533:..\FreeRTOS10/queue.c **** 			}
 534:..\FreeRTOS10/queue.c **** 			else
 535:..\FreeRTOS10/queue.c **** 			{
 536:..\FreeRTOS10/queue.c **** 				pxReturn = NULL;
 537:..\FreeRTOS10/queue.c **** 			}
 538:..\FreeRTOS10/queue.c **** 		}
 539:..\FreeRTOS10/queue.c **** 		taskEXIT_CRITICAL();
 540:..\FreeRTOS10/queue.c **** 
 541:..\FreeRTOS10/queue.c **** 		return pxReturn;
 542:..\FreeRTOS10/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 543:..\FreeRTOS10/queue.c **** 
 544:..\FreeRTOS10/queue.c **** #endif
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 11


 545:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 546:..\FreeRTOS10/queue.c **** 
 547:..\FreeRTOS10/queue.c **** #if ( ( configUSE_MUTEXES == 1 ) && ( INCLUDE_xSemaphoreGetMutexHolder == 1 ) )
 548:..\FreeRTOS10/queue.c **** 
 549:..\FreeRTOS10/queue.c **** 	void* xQueueGetMutexHolderFromISR( QueueHandle_t xSemaphore )
 550:..\FreeRTOS10/queue.c **** 	{
 551:..\FreeRTOS10/queue.c **** 	void *pxReturn;
 552:..\FreeRTOS10/queue.c **** 
 553:..\FreeRTOS10/queue.c **** 		configASSERT( xSemaphore );
 554:..\FreeRTOS10/queue.c **** 
 555:..\FreeRTOS10/queue.c **** 		/* Mutexes cannot be used in interrupt service routines, so the mutex
 556:..\FreeRTOS10/queue.c **** 		holder should not change in an ISR, and therefore a critical section is
 557:..\FreeRTOS10/queue.c **** 		not required here. */
 558:..\FreeRTOS10/queue.c **** 		if( ( ( Queue_t * ) xSemaphore )->uxQueueType == queueQUEUE_IS_MUTEX )
 559:..\FreeRTOS10/queue.c **** 		{
 560:..\FreeRTOS10/queue.c **** 			pxReturn = ( void * ) ( ( Queue_t * ) xSemaphore )->pxMutexHolder;
 561:..\FreeRTOS10/queue.c **** 		}
 562:..\FreeRTOS10/queue.c **** 		else
 563:..\FreeRTOS10/queue.c **** 		{
 564:..\FreeRTOS10/queue.c **** 			pxReturn = NULL;
 565:..\FreeRTOS10/queue.c **** 		}
 566:..\FreeRTOS10/queue.c **** 
 567:..\FreeRTOS10/queue.c **** 		return pxReturn;
 568:..\FreeRTOS10/queue.c **** 	} /*lint !e818 xSemaphore cannot be a pointer to const because it is a typedef. */
 569:..\FreeRTOS10/queue.c **** 
 570:..\FreeRTOS10/queue.c **** #endif
 571:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 572:..\FreeRTOS10/queue.c **** 
 573:..\FreeRTOS10/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 574:..\FreeRTOS10/queue.c **** 
 575:..\FreeRTOS10/queue.c **** 	BaseType_t xQueueGiveMutexRecursive( QueueHandle_t xMutex )
 576:..\FreeRTOS10/queue.c **** 	{
 577:..\FreeRTOS10/queue.c **** 	BaseType_t xReturn;
 578:..\FreeRTOS10/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 579:..\FreeRTOS10/queue.c **** 
 580:..\FreeRTOS10/queue.c **** 		configASSERT( pxMutex );
 581:..\FreeRTOS10/queue.c **** 
 582:..\FreeRTOS10/queue.c **** 		/* If this is the task that holds the mutex then pxMutexHolder will not
 583:..\FreeRTOS10/queue.c **** 		change outside of this task.  If this task does not hold the mutex then
 584:..\FreeRTOS10/queue.c **** 		pxMutexHolder can never coincidentally equal the tasks handle, and as
 585:..\FreeRTOS10/queue.c **** 		this is the only condition we are interested in it does not matter if
 586:..\FreeRTOS10/queue.c **** 		pxMutexHolder is accessed simultaneously by another task.  Therefore no
 587:..\FreeRTOS10/queue.c **** 		mutual exclusion is required to test the pxMutexHolder variable. */
 588:..\FreeRTOS10/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Not a redunda
 589:..\FreeRTOS10/queue.c **** 		{
 590:..\FreeRTOS10/queue.c **** 			traceGIVE_MUTEX_RECURSIVE( pxMutex );
 591:..\FreeRTOS10/queue.c **** 
 592:..\FreeRTOS10/queue.c **** 			/* uxRecursiveCallCount cannot be zero if pxMutexHolder is equal to
 593:..\FreeRTOS10/queue.c **** 			the task handle, therefore no underflow check is required.  Also,
 594:..\FreeRTOS10/queue.c **** 			uxRecursiveCallCount is only modified by the mutex holder, and as
 595:..\FreeRTOS10/queue.c **** 			there can only be one, no mutual exclusion is required to modify the
 596:..\FreeRTOS10/queue.c **** 			uxRecursiveCallCount member. */
 597:..\FreeRTOS10/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )--;
 598:..\FreeRTOS10/queue.c **** 
 599:..\FreeRTOS10/queue.c **** 			/* Has the recursive call count unwound to 0? */
 600:..\FreeRTOS10/queue.c **** 			if( pxMutex->u.uxRecursiveCallCount == ( UBaseType_t ) 0 )
 601:..\FreeRTOS10/queue.c **** 			{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 12


 602:..\FreeRTOS10/queue.c **** 				/* Return the mutex.  This will automatically unblock any other
 603:..\FreeRTOS10/queue.c **** 				task that might be waiting to access the mutex. */
 604:..\FreeRTOS10/queue.c **** 				( void ) xQueueGenericSend( pxMutex, NULL, queueMUTEX_GIVE_BLOCK_TIME, queueSEND_TO_BACK );
 605:..\FreeRTOS10/queue.c **** 			}
 606:..\FreeRTOS10/queue.c **** 			else
 607:..\FreeRTOS10/queue.c **** 			{
 608:..\FreeRTOS10/queue.c **** 				mtCOVERAGE_TEST_MARKER();
 609:..\FreeRTOS10/queue.c **** 			}
 610:..\FreeRTOS10/queue.c **** 
 611:..\FreeRTOS10/queue.c **** 			xReturn = pdPASS;
 612:..\FreeRTOS10/queue.c **** 		}
 613:..\FreeRTOS10/queue.c **** 		else
 614:..\FreeRTOS10/queue.c **** 		{
 615:..\FreeRTOS10/queue.c **** 			/* The mutex cannot be given because the calling task is not the
 616:..\FreeRTOS10/queue.c **** 			holder. */
 617:..\FreeRTOS10/queue.c **** 			xReturn = pdFAIL;
 618:..\FreeRTOS10/queue.c **** 
 619:..\FreeRTOS10/queue.c **** 			traceGIVE_MUTEX_RECURSIVE_FAILED( pxMutex );
 620:..\FreeRTOS10/queue.c **** 		}
 621:..\FreeRTOS10/queue.c **** 
 622:..\FreeRTOS10/queue.c **** 		return xReturn;
 623:..\FreeRTOS10/queue.c **** 	}
 624:..\FreeRTOS10/queue.c **** 
 625:..\FreeRTOS10/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 626:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 627:..\FreeRTOS10/queue.c **** 
 628:..\FreeRTOS10/queue.c **** #if ( configUSE_RECURSIVE_MUTEXES == 1 )
 629:..\FreeRTOS10/queue.c **** 
 630:..\FreeRTOS10/queue.c **** 	BaseType_t xQueueTakeMutexRecursive( QueueHandle_t xMutex, TickType_t xTicksToWait )
 631:..\FreeRTOS10/queue.c **** 	{
 632:..\FreeRTOS10/queue.c **** 	BaseType_t xReturn;
 633:..\FreeRTOS10/queue.c **** 	Queue_t * const pxMutex = ( Queue_t * ) xMutex;
 634:..\FreeRTOS10/queue.c **** 
 635:..\FreeRTOS10/queue.c **** 		configASSERT( pxMutex );
 636:..\FreeRTOS10/queue.c **** 
 637:..\FreeRTOS10/queue.c **** 		/* Comments regarding mutual exclusion as per those within
 638:..\FreeRTOS10/queue.c **** 		xQueueGiveMutexRecursive(). */
 639:..\FreeRTOS10/queue.c **** 
 640:..\FreeRTOS10/queue.c **** 		traceTAKE_MUTEX_RECURSIVE( pxMutex );
 641:..\FreeRTOS10/queue.c **** 
 642:..\FreeRTOS10/queue.c **** 		if( pxMutex->pxMutexHolder == ( void * ) xTaskGetCurrentTaskHandle() ) /*lint !e961 Cast is not r
 643:..\FreeRTOS10/queue.c **** 		{
 644:..\FreeRTOS10/queue.c **** 			( pxMutex->u.uxRecursiveCallCount )++;
 645:..\FreeRTOS10/queue.c **** 			xReturn = pdPASS;
 646:..\FreeRTOS10/queue.c **** 		}
 647:..\FreeRTOS10/queue.c **** 		else
 648:..\FreeRTOS10/queue.c **** 		{
 649:..\FreeRTOS10/queue.c **** 			xReturn = xQueueSemaphoreTake( pxMutex, xTicksToWait );
 650:..\FreeRTOS10/queue.c **** 
 651:..\FreeRTOS10/queue.c **** 			/* pdPASS will only be returned if the mutex was successfully
 652:..\FreeRTOS10/queue.c **** 			obtained.  The calling task may have entered the Blocked state
 653:..\FreeRTOS10/queue.c **** 			before reaching here. */
 654:..\FreeRTOS10/queue.c **** 			if( xReturn != pdFAIL )
 655:..\FreeRTOS10/queue.c **** 			{
 656:..\FreeRTOS10/queue.c **** 				( pxMutex->u.uxRecursiveCallCount )++;
 657:..\FreeRTOS10/queue.c **** 			}
 658:..\FreeRTOS10/queue.c **** 			else
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 13


 659:..\FreeRTOS10/queue.c **** 			{
 660:..\FreeRTOS10/queue.c **** 				traceTAKE_MUTEX_RECURSIVE_FAILED( pxMutex );
 661:..\FreeRTOS10/queue.c **** 			}
 662:..\FreeRTOS10/queue.c **** 		}
 663:..\FreeRTOS10/queue.c **** 
 664:..\FreeRTOS10/queue.c **** 		return xReturn;
 665:..\FreeRTOS10/queue.c **** 	}
 666:..\FreeRTOS10/queue.c **** 
 667:..\FreeRTOS10/queue.c **** #endif /* configUSE_RECURSIVE_MUTEXES */
 668:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 669:..\FreeRTOS10/queue.c **** 
 670:..\FreeRTOS10/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 671:..\FreeRTOS10/queue.c **** 
 672:..\FreeRTOS10/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphoreStatic( const UBaseType_t uxMaxCount, const UBaseType_t
 673:..\FreeRTOS10/queue.c **** 	{
 674:..\FreeRTOS10/queue.c **** 	QueueHandle_t xHandle;
 675:..\FreeRTOS10/queue.c **** 
 676:..\FreeRTOS10/queue.c **** 		configASSERT( uxMaxCount != 0 );
 677:..\FreeRTOS10/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 678:..\FreeRTOS10/queue.c **** 
 679:..\FreeRTOS10/queue.c **** 		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStatic
 680:..\FreeRTOS10/queue.c **** 
 681:..\FreeRTOS10/queue.c **** 		if( xHandle != NULL )
 682:..\FreeRTOS10/queue.c **** 		{
 683:..\FreeRTOS10/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 684:..\FreeRTOS10/queue.c **** 
 685:..\FreeRTOS10/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 686:..\FreeRTOS10/queue.c **** 		}
 687:..\FreeRTOS10/queue.c **** 		else
 688:..\FreeRTOS10/queue.c **** 		{
 689:..\FreeRTOS10/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 690:..\FreeRTOS10/queue.c **** 		}
 691:..\FreeRTOS10/queue.c **** 
 692:..\FreeRTOS10/queue.c **** 		return xHandle;
 693:..\FreeRTOS10/queue.c **** 	}
 694:..\FreeRTOS10/queue.c **** 
 695:..\FreeRTOS10/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 696:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 697:..\FreeRTOS10/queue.c **** 
 698:..\FreeRTOS10/queue.c **** #if( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 699:..\FreeRTOS10/queue.c **** 
 700:..\FreeRTOS10/queue.c **** 	QueueHandle_t xQueueCreateCountingSemaphore( const UBaseType_t uxMaxCount, const UBaseType_t uxIni
 701:..\FreeRTOS10/queue.c **** 	{
 702:..\FreeRTOS10/queue.c **** 	QueueHandle_t xHandle;
 703:..\FreeRTOS10/queue.c **** 
 704:..\FreeRTOS10/queue.c **** 		configASSERT( uxMaxCount != 0 );
 705:..\FreeRTOS10/queue.c **** 		configASSERT( uxInitialCount <= uxMaxCount );
 706:..\FreeRTOS10/queue.c **** 
 707:..\FreeRTOS10/queue.c **** 		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUN
 708:..\FreeRTOS10/queue.c **** 
 709:..\FreeRTOS10/queue.c **** 		if( xHandle != NULL )
 710:..\FreeRTOS10/queue.c **** 		{
 711:..\FreeRTOS10/queue.c **** 			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 712:..\FreeRTOS10/queue.c **** 
 713:..\FreeRTOS10/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE();
 714:..\FreeRTOS10/queue.c **** 		}
 715:..\FreeRTOS10/queue.c **** 		else
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 14


 716:..\FreeRTOS10/queue.c **** 		{
 717:..\FreeRTOS10/queue.c **** 			traceCREATE_COUNTING_SEMAPHORE_FAILED();
 718:..\FreeRTOS10/queue.c **** 		}
 719:..\FreeRTOS10/queue.c **** 
 720:..\FreeRTOS10/queue.c **** 		return xHandle;
 721:..\FreeRTOS10/queue.c **** 	}
 722:..\FreeRTOS10/queue.c **** 
 723:..\FreeRTOS10/queue.c **** #endif /* ( ( configUSE_COUNTING_SEMAPHORES == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) ) *
 724:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 725:..\FreeRTOS10/queue.c **** 
 726:..\FreeRTOS10/queue.c **** BaseType_t xQueueGenericSend( QueueHandle_t xQueue, const void * const pvItemToQueue, TickType_t xT
 727:..\FreeRTOS10/queue.c **** {
 728:..\FreeRTOS10/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 729:..\FreeRTOS10/queue.c **** TimeOut_t xTimeOut;
 730:..\FreeRTOS10/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 731:..\FreeRTOS10/queue.c **** 
 732:..\FreeRTOS10/queue.c **** 	configASSERT( pxQueue );
 733:..\FreeRTOS10/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 734:..\FreeRTOS10/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 735:..\FreeRTOS10/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
 736:..\FreeRTOS10/queue.c **** 	{
 737:..\FreeRTOS10/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
 738:..\FreeRTOS10/queue.c **** 	}
 739:..\FreeRTOS10/queue.c **** 	#endif
 740:..\FreeRTOS10/queue.c **** 
 741:..\FreeRTOS10/queue.c **** 
 742:..\FreeRTOS10/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
 743:..\FreeRTOS10/queue.c **** 	statements within the function itself.  This is done in the interest
 744:..\FreeRTOS10/queue.c **** 	of execution time efficiency. */
 745:..\FreeRTOS10/queue.c **** 	for( ;; )
 746:..\FreeRTOS10/queue.c **** 	{
 747:..\FreeRTOS10/queue.c **** 		taskENTER_CRITICAL();
 748:..\FreeRTOS10/queue.c **** 		{
 749:..\FreeRTOS10/queue.c **** 			/* Is there room on the queue now?  The running task must be the
 750:..\FreeRTOS10/queue.c **** 			highest priority task wanting to access the queue.  If the head item
 751:..\FreeRTOS10/queue.c **** 			in the queue is to be overwritten then it does not matter if the
 752:..\FreeRTOS10/queue.c **** 			queue is full. */
 753:..\FreeRTOS10/queue.c **** 			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 754:..\FreeRTOS10/queue.c **** 			{
 755:..\FreeRTOS10/queue.c **** 				traceQUEUE_SEND( pxQueue );
 756:..\FreeRTOS10/queue.c **** 				xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 757:..\FreeRTOS10/queue.c **** 
 758:..\FreeRTOS10/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 759:..\FreeRTOS10/queue.c **** 				{
 760:..\FreeRTOS10/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 761:..\FreeRTOS10/queue.c **** 					{
 762:..\FreeRTOS10/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 763:..\FreeRTOS10/queue.c **** 						{
 764:..\FreeRTOS10/queue.c **** 							/* The queue is a member of a queue set, and posting
 765:..\FreeRTOS10/queue.c **** 							to the queue set caused a higher priority task to
 766:..\FreeRTOS10/queue.c **** 							unblock. A context switch is required. */
 767:..\FreeRTOS10/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 768:..\FreeRTOS10/queue.c **** 						}
 769:..\FreeRTOS10/queue.c **** 						else
 770:..\FreeRTOS10/queue.c **** 						{
 771:..\FreeRTOS10/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 772:..\FreeRTOS10/queue.c **** 						}
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 15


 773:..\FreeRTOS10/queue.c **** 					}
 774:..\FreeRTOS10/queue.c **** 					else
 775:..\FreeRTOS10/queue.c **** 					{
 776:..\FreeRTOS10/queue.c **** 						/* If there was a task waiting for data to arrive on the
 777:..\FreeRTOS10/queue.c **** 						queue then unblock it now. */
 778:..\FreeRTOS10/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 779:..\FreeRTOS10/queue.c **** 						{
 780:..\FreeRTOS10/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 781:..\FreeRTOS10/queue.c **** 							{
 782:..\FreeRTOS10/queue.c **** 								/* The unblocked task has a priority higher than
 783:..\FreeRTOS10/queue.c **** 								our own so yield immediately.  Yes it is ok to
 784:..\FreeRTOS10/queue.c **** 								do this from within the critical section - the
 785:..\FreeRTOS10/queue.c **** 								kernel takes care of that. */
 786:..\FreeRTOS10/queue.c **** 								queueYIELD_IF_USING_PREEMPTION();
 787:..\FreeRTOS10/queue.c **** 							}
 788:..\FreeRTOS10/queue.c **** 							else
 789:..\FreeRTOS10/queue.c **** 							{
 790:..\FreeRTOS10/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 791:..\FreeRTOS10/queue.c **** 							}
 792:..\FreeRTOS10/queue.c **** 						}
 793:..\FreeRTOS10/queue.c **** 						else if( xYieldRequired != pdFALSE )
 794:..\FreeRTOS10/queue.c **** 						{
 795:..\FreeRTOS10/queue.c **** 							/* This path is a special case that will only get
 796:..\FreeRTOS10/queue.c **** 							executed if the task was holding multiple mutexes
 797:..\FreeRTOS10/queue.c **** 							and the mutexes were given back in an order that is
 798:..\FreeRTOS10/queue.c **** 							different to that in which they were taken. */
 799:..\FreeRTOS10/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 800:..\FreeRTOS10/queue.c **** 						}
 801:..\FreeRTOS10/queue.c **** 						else
 802:..\FreeRTOS10/queue.c **** 						{
 803:..\FreeRTOS10/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 804:..\FreeRTOS10/queue.c **** 						}
 805:..\FreeRTOS10/queue.c **** 					}
 806:..\FreeRTOS10/queue.c **** 				}
 807:..\FreeRTOS10/queue.c **** 				#else /* configUSE_QUEUE_SETS */
 808:..\FreeRTOS10/queue.c **** 				{
 809:..\FreeRTOS10/queue.c **** 					/* If there was a task waiting for data to arrive on the
 810:..\FreeRTOS10/queue.c **** 					queue then unblock it now. */
 811:..\FreeRTOS10/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 812:..\FreeRTOS10/queue.c **** 					{
 813:..\FreeRTOS10/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 814:..\FreeRTOS10/queue.c **** 						{
 815:..\FreeRTOS10/queue.c **** 							/* The unblocked task has a priority higher than
 816:..\FreeRTOS10/queue.c **** 							our own so yield immediately.  Yes it is ok to do
 817:..\FreeRTOS10/queue.c **** 							this from within the critical section - the kernel
 818:..\FreeRTOS10/queue.c **** 							takes care of that. */
 819:..\FreeRTOS10/queue.c **** 							queueYIELD_IF_USING_PREEMPTION();
 820:..\FreeRTOS10/queue.c **** 						}
 821:..\FreeRTOS10/queue.c **** 						else
 822:..\FreeRTOS10/queue.c **** 						{
 823:..\FreeRTOS10/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 824:..\FreeRTOS10/queue.c **** 						}
 825:..\FreeRTOS10/queue.c **** 					}
 826:..\FreeRTOS10/queue.c **** 					else if( xYieldRequired != pdFALSE )
 827:..\FreeRTOS10/queue.c **** 					{
 828:..\FreeRTOS10/queue.c **** 						/* This path is a special case that will only get
 829:..\FreeRTOS10/queue.c **** 						executed if the task was holding multiple mutexes and
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 16


 830:..\FreeRTOS10/queue.c **** 						the mutexes were given back in an order that is
 831:..\FreeRTOS10/queue.c **** 						different to that in which they were taken. */
 832:..\FreeRTOS10/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
 833:..\FreeRTOS10/queue.c **** 					}
 834:..\FreeRTOS10/queue.c **** 					else
 835:..\FreeRTOS10/queue.c **** 					{
 836:..\FreeRTOS10/queue.c **** 						mtCOVERAGE_TEST_MARKER();
 837:..\FreeRTOS10/queue.c **** 					}
 838:..\FreeRTOS10/queue.c **** 				}
 839:..\FreeRTOS10/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
 840:..\FreeRTOS10/queue.c **** 
 841:..\FreeRTOS10/queue.c **** 				taskEXIT_CRITICAL();
 842:..\FreeRTOS10/queue.c **** 				return pdPASS;
 843:..\FreeRTOS10/queue.c **** 			}
 844:..\FreeRTOS10/queue.c **** 			else
 845:..\FreeRTOS10/queue.c **** 			{
 846:..\FreeRTOS10/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
 847:..\FreeRTOS10/queue.c **** 				{
 848:..\FreeRTOS10/queue.c **** 					/* The queue was full and no block time is specified (or
 849:..\FreeRTOS10/queue.c **** 					the block time has expired) so leave now. */
 850:..\FreeRTOS10/queue.c **** 					taskEXIT_CRITICAL();
 851:..\FreeRTOS10/queue.c **** 
 852:..\FreeRTOS10/queue.c **** 					/* Return to the original privilege level before exiting
 853:..\FreeRTOS10/queue.c **** 					the function. */
 854:..\FreeRTOS10/queue.c **** 					traceQUEUE_SEND_FAILED( pxQueue );
 855:..\FreeRTOS10/queue.c **** 					return errQUEUE_FULL;
 856:..\FreeRTOS10/queue.c **** 				}
 857:..\FreeRTOS10/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
 858:..\FreeRTOS10/queue.c **** 				{
 859:..\FreeRTOS10/queue.c **** 					/* The queue was full and a block time was specified so
 860:..\FreeRTOS10/queue.c **** 					configure the timeout structure. */
 861:..\FreeRTOS10/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
 862:..\FreeRTOS10/queue.c **** 					xEntryTimeSet = pdTRUE;
 863:..\FreeRTOS10/queue.c **** 				}
 864:..\FreeRTOS10/queue.c **** 				else
 865:..\FreeRTOS10/queue.c **** 				{
 866:..\FreeRTOS10/queue.c **** 					/* Entry time was already set. */
 867:..\FreeRTOS10/queue.c **** 					mtCOVERAGE_TEST_MARKER();
 868:..\FreeRTOS10/queue.c **** 				}
 869:..\FreeRTOS10/queue.c **** 			}
 870:..\FreeRTOS10/queue.c **** 		}
 871:..\FreeRTOS10/queue.c **** 		taskEXIT_CRITICAL();
 872:..\FreeRTOS10/queue.c **** 
 873:..\FreeRTOS10/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
 874:..\FreeRTOS10/queue.c **** 		now the critical section has been exited. */
 875:..\FreeRTOS10/queue.c **** 
 876:..\FreeRTOS10/queue.c **** 		vTaskSuspendAll();
 877:..\FreeRTOS10/queue.c **** 		prvLockQueue( pxQueue );
 878:..\FreeRTOS10/queue.c **** 
 879:..\FreeRTOS10/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
 880:..\FreeRTOS10/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 881:..\FreeRTOS10/queue.c **** 		{
 882:..\FreeRTOS10/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
 883:..\FreeRTOS10/queue.c **** 			{
 884:..\FreeRTOS10/queue.c **** 				traceBLOCKING_ON_QUEUE_SEND( pxQueue );
 885:..\FreeRTOS10/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 886:..\FreeRTOS10/queue.c **** 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 17


 887:..\FreeRTOS10/queue.c **** 				/* Unlocking the queue means queue events can effect the
 888:..\FreeRTOS10/queue.c **** 				event list.  It is possible that interrupts occurring now
 889:..\FreeRTOS10/queue.c **** 				remove this task from the event list again - but as the
 890:..\FreeRTOS10/queue.c **** 				scheduler is suspended the task will go onto the pending
 891:..\FreeRTOS10/queue.c **** 				ready last instead of the actual ready list. */
 892:..\FreeRTOS10/queue.c **** 				prvUnlockQueue( pxQueue );
 893:..\FreeRTOS10/queue.c **** 
 894:..\FreeRTOS10/queue.c **** 				/* Resuming the scheduler will move tasks from the pending
 895:..\FreeRTOS10/queue.c **** 				ready list into the ready list - so it is feasible that this
 896:..\FreeRTOS10/queue.c **** 				task is already in a ready list before it yields - in which
 897:..\FreeRTOS10/queue.c **** 				case the yield will not cause a context switch unless there
 898:..\FreeRTOS10/queue.c **** 				is also a higher priority task in the pending ready list. */
 899:..\FreeRTOS10/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 900:..\FreeRTOS10/queue.c **** 				{
 901:..\FreeRTOS10/queue.c **** 					portYIELD_WITHIN_API();
 902:..\FreeRTOS10/queue.c **** 				}
 903:..\FreeRTOS10/queue.c **** 			}
 904:..\FreeRTOS10/queue.c **** 			else
 905:..\FreeRTOS10/queue.c **** 			{
 906:..\FreeRTOS10/queue.c **** 				/* Try again. */
 907:..\FreeRTOS10/queue.c **** 				prvUnlockQueue( pxQueue );
 908:..\FreeRTOS10/queue.c **** 				( void ) xTaskResumeAll();
 909:..\FreeRTOS10/queue.c **** 			}
 910:..\FreeRTOS10/queue.c **** 		}
 911:..\FreeRTOS10/queue.c **** 		else
 912:..\FreeRTOS10/queue.c **** 		{
 913:..\FreeRTOS10/queue.c **** 			/* The timeout has expired. */
 914:..\FreeRTOS10/queue.c **** 			prvUnlockQueue( pxQueue );
 915:..\FreeRTOS10/queue.c **** 			( void ) xTaskResumeAll();
 916:..\FreeRTOS10/queue.c **** 
 917:..\FreeRTOS10/queue.c **** 			traceQUEUE_SEND_FAILED( pxQueue );
 918:..\FreeRTOS10/queue.c **** 			return errQUEUE_FULL;
 919:..\FreeRTOS10/queue.c **** 		}
 920:..\FreeRTOS10/queue.c **** 	}
 921:..\FreeRTOS10/queue.c **** }
 922:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 923:..\FreeRTOS10/queue.c **** 
 924:..\FreeRTOS10/queue.c **** BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue, const void * const pvItemToQueue, BaseTy
 925:..\FreeRTOS10/queue.c **** {
 926:..\FreeRTOS10/queue.c **** BaseType_t xReturn;
 927:..\FreeRTOS10/queue.c **** UBaseType_t uxSavedInterruptStatus;
 928:..\FreeRTOS10/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 929:..\FreeRTOS10/queue.c **** 
 930:..\FreeRTOS10/queue.c **** 	configASSERT( pxQueue );
 931:..\FreeRTOS10/queue.c **** 	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 932:..\FreeRTOS10/queue.c **** 	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 933:..\FreeRTOS10/queue.c **** 
 934:..\FreeRTOS10/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
 935:..\FreeRTOS10/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
 936:..\FreeRTOS10/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
 937:..\FreeRTOS10/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
 938:..\FreeRTOS10/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
 939:..\FreeRTOS10/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
 940:..\FreeRTOS10/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
 941:..\FreeRTOS10/queue.c **** 	assigned a priority above the configured maximum system call priority.
 942:..\FreeRTOS10/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
 943:..\FreeRTOS10/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 18


 944:..\FreeRTOS10/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
 945:..\FreeRTOS10/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
 946:..\FreeRTOS10/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
 947:..\FreeRTOS10/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
 948:..\FreeRTOS10/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 949:..\FreeRTOS10/queue.c **** 
 950:..\FreeRTOS10/queue.c **** 	/* Similar to xQueueGenericSend, except without blocking if there is no room
 951:..\FreeRTOS10/queue.c **** 	in the queue.  Also don't directly wake a task that was blocked on a queue
 952:..\FreeRTOS10/queue.c **** 	read, instead return a flag to say whether a context switch is required or
 953:..\FreeRTOS10/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
 954:..\FreeRTOS10/queue.c **** 	post). */
 955:..\FreeRTOS10/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 956:..\FreeRTOS10/queue.c **** 	{
 957:..\FreeRTOS10/queue.c **** 		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 958:..\FreeRTOS10/queue.c **** 		{
 959:..\FreeRTOS10/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
 960:..\FreeRTOS10/queue.c **** 
 961:..\FreeRTOS10/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
 962:..\FreeRTOS10/queue.c **** 
 963:..\FreeRTOS10/queue.c **** 			/* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
 964:..\FreeRTOS10/queue.c **** 			semaphore or mutex.  That means prvCopyDataToQueue() cannot result
 965:..\FreeRTOS10/queue.c **** 			in a task disinheriting a priority and prvCopyDataToQueue() can be
 966:..\FreeRTOS10/queue.c **** 			called here even though the disinherit function does not check if
 967:..\FreeRTOS10/queue.c **** 			the scheduler is suspended before accessing the ready lists. */
 968:..\FreeRTOS10/queue.c **** 			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 969:..\FreeRTOS10/queue.c **** 
 970:..\FreeRTOS10/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
 971:..\FreeRTOS10/queue.c **** 			be done when the queue is unlocked later. */
 972:..\FreeRTOS10/queue.c **** 			if( cTxLock == queueUNLOCKED )
 973:..\FreeRTOS10/queue.c **** 			{
 974:..\FreeRTOS10/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
 975:..\FreeRTOS10/queue.c **** 				{
 976:..\FreeRTOS10/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
 977:..\FreeRTOS10/queue.c **** 					{
 978:..\FreeRTOS10/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, xCopyPosition ) != pdFALSE )
 979:..\FreeRTOS10/queue.c **** 						{
 980:..\FreeRTOS10/queue.c **** 							/* The queue is a member of a queue set, and posting
 981:..\FreeRTOS10/queue.c **** 							to the queue set caused a higher priority task to
 982:..\FreeRTOS10/queue.c **** 							unblock.  A context switch is required. */
 983:..\FreeRTOS10/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
 984:..\FreeRTOS10/queue.c **** 							{
 985:..\FreeRTOS10/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
 986:..\FreeRTOS10/queue.c **** 							}
 987:..\FreeRTOS10/queue.c **** 							else
 988:..\FreeRTOS10/queue.c **** 							{
 989:..\FreeRTOS10/queue.c **** 								mtCOVERAGE_TEST_MARKER();
 990:..\FreeRTOS10/queue.c **** 							}
 991:..\FreeRTOS10/queue.c **** 						}
 992:..\FreeRTOS10/queue.c **** 						else
 993:..\FreeRTOS10/queue.c **** 						{
 994:..\FreeRTOS10/queue.c **** 							mtCOVERAGE_TEST_MARKER();
 995:..\FreeRTOS10/queue.c **** 						}
 996:..\FreeRTOS10/queue.c **** 					}
 997:..\FreeRTOS10/queue.c **** 					else
 998:..\FreeRTOS10/queue.c **** 					{
 999:..\FreeRTOS10/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1000:..\FreeRTOS10/queue.c **** 						{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 19


1001:..\FreeRTOS10/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1002:..\FreeRTOS10/queue.c **** 							{
1003:..\FreeRTOS10/queue.c **** 								/* The task waiting has a higher priority so
1004:..\FreeRTOS10/queue.c **** 								record that a context switch is required. */
1005:..\FreeRTOS10/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1006:..\FreeRTOS10/queue.c **** 								{
1007:..\FreeRTOS10/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1008:..\FreeRTOS10/queue.c **** 								}
1009:..\FreeRTOS10/queue.c **** 								else
1010:..\FreeRTOS10/queue.c **** 								{
1011:..\FreeRTOS10/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1012:..\FreeRTOS10/queue.c **** 								}
1013:..\FreeRTOS10/queue.c **** 							}
1014:..\FreeRTOS10/queue.c **** 							else
1015:..\FreeRTOS10/queue.c **** 							{
1016:..\FreeRTOS10/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1017:..\FreeRTOS10/queue.c **** 							}
1018:..\FreeRTOS10/queue.c **** 						}
1019:..\FreeRTOS10/queue.c **** 						else
1020:..\FreeRTOS10/queue.c **** 						{
1021:..\FreeRTOS10/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1022:..\FreeRTOS10/queue.c **** 						}
1023:..\FreeRTOS10/queue.c **** 					}
1024:..\FreeRTOS10/queue.c **** 				}
1025:..\FreeRTOS10/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1026:..\FreeRTOS10/queue.c **** 				{
1027:..\FreeRTOS10/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1028:..\FreeRTOS10/queue.c **** 					{
1029:..\FreeRTOS10/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1030:..\FreeRTOS10/queue.c **** 						{
1031:..\FreeRTOS10/queue.c **** 							/* The task waiting has a higher priority so record that a
1032:..\FreeRTOS10/queue.c **** 							context	switch is required. */
1033:..\FreeRTOS10/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1034:..\FreeRTOS10/queue.c **** 							{
1035:..\FreeRTOS10/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1036:..\FreeRTOS10/queue.c **** 							}
1037:..\FreeRTOS10/queue.c **** 							else
1038:..\FreeRTOS10/queue.c **** 							{
1039:..\FreeRTOS10/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1040:..\FreeRTOS10/queue.c **** 							}
1041:..\FreeRTOS10/queue.c **** 						}
1042:..\FreeRTOS10/queue.c **** 						else
1043:..\FreeRTOS10/queue.c **** 						{
1044:..\FreeRTOS10/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1045:..\FreeRTOS10/queue.c **** 						}
1046:..\FreeRTOS10/queue.c **** 					}
1047:..\FreeRTOS10/queue.c **** 					else
1048:..\FreeRTOS10/queue.c **** 					{
1049:..\FreeRTOS10/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1050:..\FreeRTOS10/queue.c **** 					}
1051:..\FreeRTOS10/queue.c **** 				}
1052:..\FreeRTOS10/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1053:..\FreeRTOS10/queue.c **** 			}
1054:..\FreeRTOS10/queue.c **** 			else
1055:..\FreeRTOS10/queue.c **** 			{
1056:..\FreeRTOS10/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1057:..\FreeRTOS10/queue.c **** 				knows that data was posted while it was locked. */
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 20


1058:..\FreeRTOS10/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1059:..\FreeRTOS10/queue.c **** 			}
1060:..\FreeRTOS10/queue.c **** 
1061:..\FreeRTOS10/queue.c **** 			xReturn = pdPASS;
1062:..\FreeRTOS10/queue.c **** 		}
1063:..\FreeRTOS10/queue.c **** 		else
1064:..\FreeRTOS10/queue.c **** 		{
1065:..\FreeRTOS10/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1066:..\FreeRTOS10/queue.c **** 			xReturn = errQUEUE_FULL;
1067:..\FreeRTOS10/queue.c **** 		}
1068:..\FreeRTOS10/queue.c **** 	}
1069:..\FreeRTOS10/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1070:..\FreeRTOS10/queue.c **** 
1071:..\FreeRTOS10/queue.c **** 	return xReturn;
1072:..\FreeRTOS10/queue.c **** }
1073:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
1074:..\FreeRTOS10/queue.c **** 
1075:..\FreeRTOS10/queue.c **** BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue, BaseType_t * const pxHigherPriorityTaskWoken )
1076:..\FreeRTOS10/queue.c **** {
1077:..\FreeRTOS10/queue.c **** BaseType_t xReturn;
1078:..\FreeRTOS10/queue.c **** UBaseType_t uxSavedInterruptStatus;
1079:..\FreeRTOS10/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1080:..\FreeRTOS10/queue.c **** 
1081:..\FreeRTOS10/queue.c **** 	/* Similar to xQueueGenericSendFromISR() but used with semaphores where the
1082:..\FreeRTOS10/queue.c **** 	item size is 0.  Don't directly wake a task that was blocked on a queue
1083:..\FreeRTOS10/queue.c **** 	read, instead return a flag to say whether a context switch is required or
1084:..\FreeRTOS10/queue.c **** 	not (i.e. has a task with a higher priority than us been woken by this
1085:..\FreeRTOS10/queue.c **** 	post). */
1086:..\FreeRTOS10/queue.c **** 
1087:..\FreeRTOS10/queue.c **** 	configASSERT( pxQueue );
1088:..\FreeRTOS10/queue.c **** 
1089:..\FreeRTOS10/queue.c **** 	/* xQueueGenericSendFromISR() should be used instead of xQueueGiveFromISR()
1090:..\FreeRTOS10/queue.c **** 	if the item size is not 0. */
1091:..\FreeRTOS10/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1092:..\FreeRTOS10/queue.c **** 
1093:..\FreeRTOS10/queue.c **** 	/* Normally a mutex would not be given from an interrupt, especially if
1094:..\FreeRTOS10/queue.c **** 	there is a mutex holder, as priority inheritance makes no sense for an
1095:..\FreeRTOS10/queue.c **** 	interrupts, only tasks. */
1096:..\FreeRTOS10/queue.c **** 	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->pxMutexHolder != NU
1097:..\FreeRTOS10/queue.c **** 
1098:..\FreeRTOS10/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1099:..\FreeRTOS10/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1100:..\FreeRTOS10/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1101:..\FreeRTOS10/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1102:..\FreeRTOS10/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1103:..\FreeRTOS10/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1104:..\FreeRTOS10/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1105:..\FreeRTOS10/queue.c **** 	assigned a priority above the configured maximum system call priority.
1106:..\FreeRTOS10/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1107:..\FreeRTOS10/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1108:..\FreeRTOS10/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1109:..\FreeRTOS10/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1110:..\FreeRTOS10/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1111:..\FreeRTOS10/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1112:..\FreeRTOS10/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1113:..\FreeRTOS10/queue.c **** 
1114:..\FreeRTOS10/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 21


1115:..\FreeRTOS10/queue.c **** 	{
1116:..\FreeRTOS10/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1117:..\FreeRTOS10/queue.c **** 
1118:..\FreeRTOS10/queue.c **** 		/* When the queue is used to implement a semaphore no data is ever
1119:..\FreeRTOS10/queue.c **** 		moved through the queue but it is still valid to see if the queue 'has
1120:..\FreeRTOS10/queue.c **** 		space'. */
1121:..\FreeRTOS10/queue.c **** 		if( uxMessagesWaiting < pxQueue->uxLength )
1122:..\FreeRTOS10/queue.c **** 		{
1123:..\FreeRTOS10/queue.c **** 			const int8_t cTxLock = pxQueue->cTxLock;
1124:..\FreeRTOS10/queue.c **** 
1125:..\FreeRTOS10/queue.c **** 			traceQUEUE_SEND_FROM_ISR( pxQueue );
1126:..\FreeRTOS10/queue.c **** 
1127:..\FreeRTOS10/queue.c **** 			/* A task can only have an inherited priority if it is a mutex
1128:..\FreeRTOS10/queue.c **** 			holder - and if there is a mutex holder then the mutex cannot be
1129:..\FreeRTOS10/queue.c **** 			given from an ISR.  As this is the ISR version of the function it
1130:..\FreeRTOS10/queue.c **** 			can be assumed there is no mutex holder and no need to determine if
1131:..\FreeRTOS10/queue.c **** 			priority disinheritance is needed.  Simply increase the count of
1132:..\FreeRTOS10/queue.c **** 			messages (semaphores) available. */
1133:..\FreeRTOS10/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
1134:..\FreeRTOS10/queue.c **** 
1135:..\FreeRTOS10/queue.c **** 			/* The event list is not altered if the queue is locked.  This will
1136:..\FreeRTOS10/queue.c **** 			be done when the queue is unlocked later. */
1137:..\FreeRTOS10/queue.c **** 			if( cTxLock == queueUNLOCKED )
1138:..\FreeRTOS10/queue.c **** 			{
1139:..\FreeRTOS10/queue.c **** 				#if ( configUSE_QUEUE_SETS == 1 )
1140:..\FreeRTOS10/queue.c **** 				{
1141:..\FreeRTOS10/queue.c **** 					if( pxQueue->pxQueueSetContainer != NULL )
1142:..\FreeRTOS10/queue.c **** 					{
1143:..\FreeRTOS10/queue.c **** 						if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
1144:..\FreeRTOS10/queue.c **** 						{
1145:..\FreeRTOS10/queue.c **** 							/* The semaphore is a member of a queue set, and
1146:..\FreeRTOS10/queue.c **** 							posting	to the queue set caused a higher priority
1147:..\FreeRTOS10/queue.c **** 							task to	unblock.  A context switch is required. */
1148:..\FreeRTOS10/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1149:..\FreeRTOS10/queue.c **** 							{
1150:..\FreeRTOS10/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1151:..\FreeRTOS10/queue.c **** 							}
1152:..\FreeRTOS10/queue.c **** 							else
1153:..\FreeRTOS10/queue.c **** 							{
1154:..\FreeRTOS10/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1155:..\FreeRTOS10/queue.c **** 							}
1156:..\FreeRTOS10/queue.c **** 						}
1157:..\FreeRTOS10/queue.c **** 						else
1158:..\FreeRTOS10/queue.c **** 						{
1159:..\FreeRTOS10/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1160:..\FreeRTOS10/queue.c **** 						}
1161:..\FreeRTOS10/queue.c **** 					}
1162:..\FreeRTOS10/queue.c **** 					else
1163:..\FreeRTOS10/queue.c **** 					{
1164:..\FreeRTOS10/queue.c **** 						if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1165:..\FreeRTOS10/queue.c **** 						{
1166:..\FreeRTOS10/queue.c **** 							if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1167:..\FreeRTOS10/queue.c **** 							{
1168:..\FreeRTOS10/queue.c **** 								/* The task waiting has a higher priority so
1169:..\FreeRTOS10/queue.c **** 								record that a context switch is required. */
1170:..\FreeRTOS10/queue.c **** 								if( pxHigherPriorityTaskWoken != NULL )
1171:..\FreeRTOS10/queue.c **** 								{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 22


1172:..\FreeRTOS10/queue.c **** 									*pxHigherPriorityTaskWoken = pdTRUE;
1173:..\FreeRTOS10/queue.c **** 								}
1174:..\FreeRTOS10/queue.c **** 								else
1175:..\FreeRTOS10/queue.c **** 								{
1176:..\FreeRTOS10/queue.c **** 									mtCOVERAGE_TEST_MARKER();
1177:..\FreeRTOS10/queue.c **** 								}
1178:..\FreeRTOS10/queue.c **** 							}
1179:..\FreeRTOS10/queue.c **** 							else
1180:..\FreeRTOS10/queue.c **** 							{
1181:..\FreeRTOS10/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1182:..\FreeRTOS10/queue.c **** 							}
1183:..\FreeRTOS10/queue.c **** 						}
1184:..\FreeRTOS10/queue.c **** 						else
1185:..\FreeRTOS10/queue.c **** 						{
1186:..\FreeRTOS10/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1187:..\FreeRTOS10/queue.c **** 						}
1188:..\FreeRTOS10/queue.c **** 					}
1189:..\FreeRTOS10/queue.c **** 				}
1190:..\FreeRTOS10/queue.c **** 				#else /* configUSE_QUEUE_SETS */
1191:..\FreeRTOS10/queue.c **** 				{
1192:..\FreeRTOS10/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1193:..\FreeRTOS10/queue.c **** 					{
1194:..\FreeRTOS10/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1195:..\FreeRTOS10/queue.c **** 						{
1196:..\FreeRTOS10/queue.c **** 							/* The task waiting has a higher priority so record that a
1197:..\FreeRTOS10/queue.c **** 							context	switch is required. */
1198:..\FreeRTOS10/queue.c **** 							if( pxHigherPriorityTaskWoken != NULL )
1199:..\FreeRTOS10/queue.c **** 							{
1200:..\FreeRTOS10/queue.c **** 								*pxHigherPriorityTaskWoken = pdTRUE;
1201:..\FreeRTOS10/queue.c **** 							}
1202:..\FreeRTOS10/queue.c **** 							else
1203:..\FreeRTOS10/queue.c **** 							{
1204:..\FreeRTOS10/queue.c **** 								mtCOVERAGE_TEST_MARKER();
1205:..\FreeRTOS10/queue.c **** 							}
1206:..\FreeRTOS10/queue.c **** 						}
1207:..\FreeRTOS10/queue.c **** 						else
1208:..\FreeRTOS10/queue.c **** 						{
1209:..\FreeRTOS10/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1210:..\FreeRTOS10/queue.c **** 						}
1211:..\FreeRTOS10/queue.c **** 					}
1212:..\FreeRTOS10/queue.c **** 					else
1213:..\FreeRTOS10/queue.c **** 					{
1214:..\FreeRTOS10/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1215:..\FreeRTOS10/queue.c **** 					}
1216:..\FreeRTOS10/queue.c **** 				}
1217:..\FreeRTOS10/queue.c **** 				#endif /* configUSE_QUEUE_SETS */
1218:..\FreeRTOS10/queue.c **** 			}
1219:..\FreeRTOS10/queue.c **** 			else
1220:..\FreeRTOS10/queue.c **** 			{
1221:..\FreeRTOS10/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1222:..\FreeRTOS10/queue.c **** 				knows that data was posted while it was locked. */
1223:..\FreeRTOS10/queue.c **** 				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
1224:..\FreeRTOS10/queue.c **** 			}
1225:..\FreeRTOS10/queue.c **** 
1226:..\FreeRTOS10/queue.c **** 			xReturn = pdPASS;
1227:..\FreeRTOS10/queue.c **** 		}
1228:..\FreeRTOS10/queue.c **** 		else
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 23


1229:..\FreeRTOS10/queue.c **** 		{
1230:..\FreeRTOS10/queue.c **** 			traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
1231:..\FreeRTOS10/queue.c **** 			xReturn = errQUEUE_FULL;
1232:..\FreeRTOS10/queue.c **** 		}
1233:..\FreeRTOS10/queue.c **** 	}
1234:..\FreeRTOS10/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1235:..\FreeRTOS10/queue.c **** 
1236:..\FreeRTOS10/queue.c **** 	return xReturn;
1237:..\FreeRTOS10/queue.c **** }
1238:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
1239:..\FreeRTOS10/queue.c **** 
1240:..\FreeRTOS10/queue.c **** BaseType_t xQueueReceive( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1241:..\FreeRTOS10/queue.c **** {
1242:..\FreeRTOS10/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1243:..\FreeRTOS10/queue.c **** TimeOut_t xTimeOut;
1244:..\FreeRTOS10/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1245:..\FreeRTOS10/queue.c **** 
1246:..\FreeRTOS10/queue.c **** 	/* Check the pointer is not NULL. */
1247:..\FreeRTOS10/queue.c **** 	configASSERT( ( pxQueue ) );
1248:..\FreeRTOS10/queue.c **** 
1249:..\FreeRTOS10/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1250:..\FreeRTOS10/queue.c **** 	is zero (so no data is copied into the buffer. */
1251:..\FreeRTOS10/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1252:..\FreeRTOS10/queue.c **** 
1253:..\FreeRTOS10/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1254:..\FreeRTOS10/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1255:..\FreeRTOS10/queue.c **** 	{
1256:..\FreeRTOS10/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1257:..\FreeRTOS10/queue.c **** 	}
1258:..\FreeRTOS10/queue.c **** 	#endif
1259:..\FreeRTOS10/queue.c **** 
1260:..\FreeRTOS10/queue.c **** 
1261:..\FreeRTOS10/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1262:..\FreeRTOS10/queue.c **** 	statements within the function itself.  This is done in the interest
1263:..\FreeRTOS10/queue.c **** 	of execution time efficiency. */
1264:..\FreeRTOS10/queue.c **** 
1265:..\FreeRTOS10/queue.c **** 	for( ;; )
1266:..\FreeRTOS10/queue.c **** 	{
1267:..\FreeRTOS10/queue.c **** 		taskENTER_CRITICAL();
1268:..\FreeRTOS10/queue.c **** 		{
1269:..\FreeRTOS10/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1270:..\FreeRTOS10/queue.c **** 
1271:..\FreeRTOS10/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1272:..\FreeRTOS10/queue.c **** 			must be the highest priority task wanting to access the queue. */
1273:..\FreeRTOS10/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1274:..\FreeRTOS10/queue.c **** 			{
1275:..\FreeRTOS10/queue.c **** 				/* Data available, remove one item. */
1276:..\FreeRTOS10/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1277:..\FreeRTOS10/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1278:..\FreeRTOS10/queue.c **** 				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1279:..\FreeRTOS10/queue.c **** 
1280:..\FreeRTOS10/queue.c **** 				/* There is now space in the queue, were any tasks waiting to
1281:..\FreeRTOS10/queue.c **** 				post to the queue?  If so, unblock the highest priority waiting
1282:..\FreeRTOS10/queue.c **** 				task. */
1283:..\FreeRTOS10/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1284:..\FreeRTOS10/queue.c **** 				{
1285:..\FreeRTOS10/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 24


1286:..\FreeRTOS10/queue.c **** 					{
1287:..\FreeRTOS10/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1288:..\FreeRTOS10/queue.c **** 					}
1289:..\FreeRTOS10/queue.c **** 					else
1290:..\FreeRTOS10/queue.c **** 					{
1291:..\FreeRTOS10/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1292:..\FreeRTOS10/queue.c **** 					}
1293:..\FreeRTOS10/queue.c **** 				}
1294:..\FreeRTOS10/queue.c **** 				else
1295:..\FreeRTOS10/queue.c **** 				{
1296:..\FreeRTOS10/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1297:..\FreeRTOS10/queue.c **** 				}
1298:..\FreeRTOS10/queue.c **** 
1299:..\FreeRTOS10/queue.c **** 				taskEXIT_CRITICAL();
1300:..\FreeRTOS10/queue.c **** 				return pdPASS;
1301:..\FreeRTOS10/queue.c **** 			}
1302:..\FreeRTOS10/queue.c **** 			else
1303:..\FreeRTOS10/queue.c **** 			{
1304:..\FreeRTOS10/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1305:..\FreeRTOS10/queue.c **** 				{
1306:..\FreeRTOS10/queue.c **** 					/* The queue was empty and no block time is specified (or
1307:..\FreeRTOS10/queue.c **** 					the block time has expired) so leave now. */
1308:..\FreeRTOS10/queue.c **** 					taskEXIT_CRITICAL();
1309:..\FreeRTOS10/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1310:..\FreeRTOS10/queue.c **** 					return errQUEUE_EMPTY;
1311:..\FreeRTOS10/queue.c **** 				}
1312:..\FreeRTOS10/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1313:..\FreeRTOS10/queue.c **** 				{
1314:..\FreeRTOS10/queue.c **** 					/* The queue was empty and a block time was specified so
1315:..\FreeRTOS10/queue.c **** 					configure the timeout structure. */
1316:..\FreeRTOS10/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1317:..\FreeRTOS10/queue.c **** 					xEntryTimeSet = pdTRUE;
1318:..\FreeRTOS10/queue.c **** 				}
1319:..\FreeRTOS10/queue.c **** 				else
1320:..\FreeRTOS10/queue.c **** 				{
1321:..\FreeRTOS10/queue.c **** 					/* Entry time was already set. */
1322:..\FreeRTOS10/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1323:..\FreeRTOS10/queue.c **** 				}
1324:..\FreeRTOS10/queue.c **** 			}
1325:..\FreeRTOS10/queue.c **** 		}
1326:..\FreeRTOS10/queue.c **** 		taskEXIT_CRITICAL();
1327:..\FreeRTOS10/queue.c **** 
1328:..\FreeRTOS10/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1329:..\FreeRTOS10/queue.c **** 		now the critical section has been exited. */
1330:..\FreeRTOS10/queue.c **** 
1331:..\FreeRTOS10/queue.c **** 		vTaskSuspendAll();
1332:..\FreeRTOS10/queue.c **** 		prvLockQueue( pxQueue );
1333:..\FreeRTOS10/queue.c **** 
1334:..\FreeRTOS10/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1335:..\FreeRTOS10/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1336:..\FreeRTOS10/queue.c **** 		{
1337:..\FreeRTOS10/queue.c **** 			/* The timeout has not expired.  If the queue is still empty place
1338:..\FreeRTOS10/queue.c **** 			the task on the list of tasks waiting to receive from the queue. */
1339:..\FreeRTOS10/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1340:..\FreeRTOS10/queue.c **** 			{
1341:..\FreeRTOS10/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1342:..\FreeRTOS10/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 25


1343:..\FreeRTOS10/queue.c **** 				prvUnlockQueue( pxQueue );
1344:..\FreeRTOS10/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1345:..\FreeRTOS10/queue.c **** 				{
1346:..\FreeRTOS10/queue.c **** 					portYIELD_WITHIN_API();
1347:..\FreeRTOS10/queue.c **** 				}
1348:..\FreeRTOS10/queue.c **** 				else
1349:..\FreeRTOS10/queue.c **** 				{
1350:..\FreeRTOS10/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1351:..\FreeRTOS10/queue.c **** 				}
1352:..\FreeRTOS10/queue.c **** 			}
1353:..\FreeRTOS10/queue.c **** 			else
1354:..\FreeRTOS10/queue.c **** 			{
1355:..\FreeRTOS10/queue.c **** 				/* The queue contains data again.  Loop back to try and read the
1356:..\FreeRTOS10/queue.c **** 				data. */
1357:..\FreeRTOS10/queue.c **** 				prvUnlockQueue( pxQueue );
1358:..\FreeRTOS10/queue.c **** 				( void ) xTaskResumeAll();
1359:..\FreeRTOS10/queue.c **** 			}
1360:..\FreeRTOS10/queue.c **** 		}
1361:..\FreeRTOS10/queue.c **** 		else
1362:..\FreeRTOS10/queue.c **** 		{
1363:..\FreeRTOS10/queue.c **** 			/* Timed out.  If there is no data in the queue exit, otherwise loop
1364:..\FreeRTOS10/queue.c **** 			back and attempt to read the data. */
1365:..\FreeRTOS10/queue.c **** 			prvUnlockQueue( pxQueue );
1366:..\FreeRTOS10/queue.c **** 			( void ) xTaskResumeAll();
1367:..\FreeRTOS10/queue.c **** 
1368:..\FreeRTOS10/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1369:..\FreeRTOS10/queue.c **** 			{
1370:..\FreeRTOS10/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1371:..\FreeRTOS10/queue.c **** 				return errQUEUE_EMPTY;
1372:..\FreeRTOS10/queue.c **** 			}
1373:..\FreeRTOS10/queue.c **** 			else
1374:..\FreeRTOS10/queue.c **** 			{
1375:..\FreeRTOS10/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1376:..\FreeRTOS10/queue.c **** 			}
1377:..\FreeRTOS10/queue.c **** 		}
1378:..\FreeRTOS10/queue.c **** 	}
1379:..\FreeRTOS10/queue.c **** }
1380:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
1381:..\FreeRTOS10/queue.c **** 
1382:..\FreeRTOS10/queue.c **** BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue, TickType_t xTicksToWait )
1383:..\FreeRTOS10/queue.c **** {
1384:..\FreeRTOS10/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1385:..\FreeRTOS10/queue.c **** TimeOut_t xTimeOut;
1386:..\FreeRTOS10/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1387:..\FreeRTOS10/queue.c **** 
1388:..\FreeRTOS10/queue.c **** #if( configUSE_MUTEXES == 1 )
1389:..\FreeRTOS10/queue.c **** 	BaseType_t xInheritanceOccurred = pdFALSE;
1390:..\FreeRTOS10/queue.c **** #endif
1391:..\FreeRTOS10/queue.c **** 
1392:..\FreeRTOS10/queue.c **** 	/* Check the queue pointer is not NULL. */
1393:..\FreeRTOS10/queue.c **** 	configASSERT( ( pxQueue ) );
1394:..\FreeRTOS10/queue.c **** 
1395:..\FreeRTOS10/queue.c **** 	/* Check this really is a semaphore, in which case the item size will be
1396:..\FreeRTOS10/queue.c **** 	0. */
1397:..\FreeRTOS10/queue.c **** 	configASSERT( pxQueue->uxItemSize == 0 );
1398:..\FreeRTOS10/queue.c **** 
1399:..\FreeRTOS10/queue.c **** 	/* Cannot block if the scheduler is suspended. */
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 26


1400:..\FreeRTOS10/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1401:..\FreeRTOS10/queue.c **** 	{
1402:..\FreeRTOS10/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1403:..\FreeRTOS10/queue.c **** 	}
1404:..\FreeRTOS10/queue.c **** 	#endif
1405:..\FreeRTOS10/queue.c **** 
1406:..\FreeRTOS10/queue.c **** 
1407:..\FreeRTOS10/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1408:..\FreeRTOS10/queue.c **** 	statements within the function itself.  This is done in the interest
1409:..\FreeRTOS10/queue.c **** 	of execution time efficiency. */
1410:..\FreeRTOS10/queue.c **** 
1411:..\FreeRTOS10/queue.c **** 	for( ;; )
1412:..\FreeRTOS10/queue.c **** 	{
1413:..\FreeRTOS10/queue.c **** 		taskENTER_CRITICAL();
1414:..\FreeRTOS10/queue.c **** 		{
1415:..\FreeRTOS10/queue.c **** 			/* Semaphores are queues with an item size of 0, and where the
1416:..\FreeRTOS10/queue.c **** 			number of messages in the queue is the semaphore's count value. */
1417:..\FreeRTOS10/queue.c **** 			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
1418:..\FreeRTOS10/queue.c **** 
1419:..\FreeRTOS10/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1420:..\FreeRTOS10/queue.c **** 			must be the highest priority task wanting to access the queue. */
1421:..\FreeRTOS10/queue.c **** 			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
1422:..\FreeRTOS10/queue.c **** 			{
1423:..\FreeRTOS10/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
1424:..\FreeRTOS10/queue.c **** 
1425:..\FreeRTOS10/queue.c **** 				/* Semaphores are queues with a data size of zero and where the
1426:..\FreeRTOS10/queue.c **** 				messages waiting is the semaphore's count.  Reduce the count. */
1427:..\FreeRTOS10/queue.c **** 				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
1428:..\FreeRTOS10/queue.c **** 
1429:..\FreeRTOS10/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1430:..\FreeRTOS10/queue.c **** 				{
1431:..\FreeRTOS10/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1432:..\FreeRTOS10/queue.c **** 					{
1433:..\FreeRTOS10/queue.c **** 						/* Record the information required to implement
1434:..\FreeRTOS10/queue.c **** 						priority inheritance should it become necessary. */
1435:..\FreeRTOS10/queue.c **** 						pxQueue->pxMutexHolder = ( int8_t * ) pvTaskIncrementMutexHeldCount(); /*lint !e961 Cast is n
1436:..\FreeRTOS10/queue.c **** 					}
1437:..\FreeRTOS10/queue.c **** 					else
1438:..\FreeRTOS10/queue.c **** 					{
1439:..\FreeRTOS10/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1440:..\FreeRTOS10/queue.c **** 					}
1441:..\FreeRTOS10/queue.c **** 				}
1442:..\FreeRTOS10/queue.c **** 				#endif /* configUSE_MUTEXES */
1443:..\FreeRTOS10/queue.c **** 
1444:..\FreeRTOS10/queue.c **** 				/* Check to see if other tasks are blocked waiting to give the
1445:..\FreeRTOS10/queue.c **** 				semaphore, and if so, unblock the highest priority such task. */
1446:..\FreeRTOS10/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1447:..\FreeRTOS10/queue.c **** 				{
1448:..\FreeRTOS10/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
1449:..\FreeRTOS10/queue.c **** 					{
1450:..\FreeRTOS10/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1451:..\FreeRTOS10/queue.c **** 					}
1452:..\FreeRTOS10/queue.c **** 					else
1453:..\FreeRTOS10/queue.c **** 					{
1454:..\FreeRTOS10/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1455:..\FreeRTOS10/queue.c **** 					}
1456:..\FreeRTOS10/queue.c **** 				}
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 27


1457:..\FreeRTOS10/queue.c **** 				else
1458:..\FreeRTOS10/queue.c **** 				{
1459:..\FreeRTOS10/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1460:..\FreeRTOS10/queue.c **** 				}
1461:..\FreeRTOS10/queue.c **** 
1462:..\FreeRTOS10/queue.c **** 				taskEXIT_CRITICAL();
1463:..\FreeRTOS10/queue.c **** 				return pdPASS;
1464:..\FreeRTOS10/queue.c **** 			}
1465:..\FreeRTOS10/queue.c **** 			else
1466:..\FreeRTOS10/queue.c **** 			{
1467:..\FreeRTOS10/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1468:..\FreeRTOS10/queue.c **** 				{
1469:..\FreeRTOS10/queue.c **** 					/* For inheritance to have occurred there must have been an
1470:..\FreeRTOS10/queue.c **** 					initial timeout, and an adjusted timeout cannot become 0, as
1471:..\FreeRTOS10/queue.c **** 					if it were 0 the function would have exited. */
1472:..\FreeRTOS10/queue.c **** 					#if( configUSE_MUTEXES == 1 )
1473:..\FreeRTOS10/queue.c **** 					{
1474:..\FreeRTOS10/queue.c **** 						configASSERT( xInheritanceOccurred == pdFALSE );
1475:..\FreeRTOS10/queue.c **** 					}
1476:..\FreeRTOS10/queue.c **** 					#endif /* configUSE_MUTEXES */
1477:..\FreeRTOS10/queue.c **** 
1478:..\FreeRTOS10/queue.c **** 					/* The semaphore count was 0 and no block time is specified
1479:..\FreeRTOS10/queue.c **** 					(or the block time has expired) so exit now. */
1480:..\FreeRTOS10/queue.c **** 					taskEXIT_CRITICAL();
1481:..\FreeRTOS10/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
1482:..\FreeRTOS10/queue.c **** 					return errQUEUE_EMPTY;
1483:..\FreeRTOS10/queue.c **** 				}
1484:..\FreeRTOS10/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1485:..\FreeRTOS10/queue.c **** 				{
1486:..\FreeRTOS10/queue.c **** 					/* The semaphore count was 0 and a block time was specified
1487:..\FreeRTOS10/queue.c **** 					so configure the timeout structure ready to block. */
1488:..\FreeRTOS10/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1489:..\FreeRTOS10/queue.c **** 					xEntryTimeSet = pdTRUE;
1490:..\FreeRTOS10/queue.c **** 				}
1491:..\FreeRTOS10/queue.c **** 				else
1492:..\FreeRTOS10/queue.c **** 				{
1493:..\FreeRTOS10/queue.c **** 					/* Entry time was already set. */
1494:..\FreeRTOS10/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1495:..\FreeRTOS10/queue.c **** 				}
1496:..\FreeRTOS10/queue.c **** 			}
1497:..\FreeRTOS10/queue.c **** 		}
1498:..\FreeRTOS10/queue.c **** 		taskEXIT_CRITICAL();
1499:..\FreeRTOS10/queue.c **** 
1500:..\FreeRTOS10/queue.c **** 		/* Interrupts and other tasks can give to and take from the semaphore
1501:..\FreeRTOS10/queue.c **** 		now the critical section has been exited. */
1502:..\FreeRTOS10/queue.c **** 
1503:..\FreeRTOS10/queue.c **** 		vTaskSuspendAll();
1504:..\FreeRTOS10/queue.c **** 		prvLockQueue( pxQueue );
1505:..\FreeRTOS10/queue.c **** 
1506:..\FreeRTOS10/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1507:..\FreeRTOS10/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1508:..\FreeRTOS10/queue.c **** 		{
1509:..\FreeRTOS10/queue.c **** 			/* A block time is specified and not expired.  If the semaphore
1510:..\FreeRTOS10/queue.c **** 			count is 0 then enter the Blocked state to wait for a semaphore to
1511:..\FreeRTOS10/queue.c **** 			become available.  As semaphores are implemented with queues the
1512:..\FreeRTOS10/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1513:..\FreeRTOS10/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 28


1514:..\FreeRTOS10/queue.c **** 			{
1515:..\FreeRTOS10/queue.c **** 				traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
1516:..\FreeRTOS10/queue.c **** 
1517:..\FreeRTOS10/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1518:..\FreeRTOS10/queue.c **** 				{
1519:..\FreeRTOS10/queue.c **** 					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
1520:..\FreeRTOS10/queue.c **** 					{
1521:..\FreeRTOS10/queue.c **** 						taskENTER_CRITICAL();
1522:..\FreeRTOS10/queue.c **** 						{
1523:..\FreeRTOS10/queue.c **** 							xInheritanceOccurred = xTaskPriorityInherit( ( void * ) pxQueue->pxMutexHolder );
1524:..\FreeRTOS10/queue.c **** 						}
1525:..\FreeRTOS10/queue.c **** 						taskEXIT_CRITICAL();
1526:..\FreeRTOS10/queue.c **** 					}
1527:..\FreeRTOS10/queue.c **** 					else
1528:..\FreeRTOS10/queue.c **** 					{
1529:..\FreeRTOS10/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1530:..\FreeRTOS10/queue.c **** 					}
1531:..\FreeRTOS10/queue.c **** 				}
1532:..\FreeRTOS10/queue.c **** 				#endif
1533:..\FreeRTOS10/queue.c **** 
1534:..\FreeRTOS10/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1535:..\FreeRTOS10/queue.c **** 				prvUnlockQueue( pxQueue );
1536:..\FreeRTOS10/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1537:..\FreeRTOS10/queue.c **** 				{
1538:..\FreeRTOS10/queue.c **** 					portYIELD_WITHIN_API();
1539:..\FreeRTOS10/queue.c **** 				}
1540:..\FreeRTOS10/queue.c **** 				else
1541:..\FreeRTOS10/queue.c **** 				{
1542:..\FreeRTOS10/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1543:..\FreeRTOS10/queue.c **** 				}
1544:..\FreeRTOS10/queue.c **** 			}
1545:..\FreeRTOS10/queue.c **** 			else
1546:..\FreeRTOS10/queue.c **** 			{
1547:..\FreeRTOS10/queue.c **** 				/* There was no timeout and the semaphore count was not 0, so
1548:..\FreeRTOS10/queue.c **** 				attempt to take the semaphore again. */
1549:..\FreeRTOS10/queue.c **** 				prvUnlockQueue( pxQueue );
1550:..\FreeRTOS10/queue.c **** 				( void ) xTaskResumeAll();
1551:..\FreeRTOS10/queue.c **** 			}
1552:..\FreeRTOS10/queue.c **** 		}
1553:..\FreeRTOS10/queue.c **** 		else
1554:..\FreeRTOS10/queue.c **** 		{
1555:..\FreeRTOS10/queue.c **** 			/* Timed out. */
1556:..\FreeRTOS10/queue.c **** 			prvUnlockQueue( pxQueue );
1557:..\FreeRTOS10/queue.c **** 			( void ) xTaskResumeAll();
1558:..\FreeRTOS10/queue.c **** 
1559:..\FreeRTOS10/queue.c **** 			/* If the semaphore count is 0 exit now as the timeout has
1560:..\FreeRTOS10/queue.c **** 			expired.  Otherwise return to attempt to take the semaphore that is
1561:..\FreeRTOS10/queue.c **** 			known to be available.  As semaphores are implemented by queues the
1562:..\FreeRTOS10/queue.c **** 			queue being empty is equivalent to the semaphore count being 0. */
1563:..\FreeRTOS10/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1564:..\FreeRTOS10/queue.c **** 			{
1565:..\FreeRTOS10/queue.c **** 				#if ( configUSE_MUTEXES == 1 )
1566:..\FreeRTOS10/queue.c **** 				{
1567:..\FreeRTOS10/queue.c **** 					/* xInheritanceOccurred could only have be set if
1568:..\FreeRTOS10/queue.c **** 					pxQueue->uxQueueType == queueQUEUE_IS_MUTEX so no need to
1569:..\FreeRTOS10/queue.c **** 					test the mutex type again to check it is actually a mutex. */
1570:..\FreeRTOS10/queue.c **** 					if( xInheritanceOccurred != pdFALSE )
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 29


1571:..\FreeRTOS10/queue.c **** 					{
1572:..\FreeRTOS10/queue.c **** 						taskENTER_CRITICAL();
1573:..\FreeRTOS10/queue.c **** 						{
1574:..\FreeRTOS10/queue.c **** 							UBaseType_t uxHighestWaitingPriority;
1575:..\FreeRTOS10/queue.c **** 
1576:..\FreeRTOS10/queue.c **** 							/* This task blocking on the mutex caused another
1577:..\FreeRTOS10/queue.c **** 							task to inherit this task's priority.  Now this task
1578:..\FreeRTOS10/queue.c **** 							has timed out the priority should be disinherited
1579:..\FreeRTOS10/queue.c **** 							again, but only as low as the next highest priority
1580:..\FreeRTOS10/queue.c **** 							task that is waiting for the same mutex. */
1581:..\FreeRTOS10/queue.c **** 							uxHighestWaitingPriority = prvGetDisinheritPriorityAfterTimeout( pxQueue );
1582:..\FreeRTOS10/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
1583:..\FreeRTOS10/queue.c **** 						}
1584:..\FreeRTOS10/queue.c **** 						taskEXIT_CRITICAL();
1585:..\FreeRTOS10/queue.c **** 					}
1586:..\FreeRTOS10/queue.c **** 				}
1587:..\FreeRTOS10/queue.c **** 				#endif /* configUSE_MUTEXES */
1588:..\FreeRTOS10/queue.c **** 
1589:..\FreeRTOS10/queue.c **** 				traceQUEUE_RECEIVE_FAILED( pxQueue );
1590:..\FreeRTOS10/queue.c **** 				return errQUEUE_EMPTY;
1591:..\FreeRTOS10/queue.c **** 			}
1592:..\FreeRTOS10/queue.c **** 			else
1593:..\FreeRTOS10/queue.c **** 			{
1594:..\FreeRTOS10/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1595:..\FreeRTOS10/queue.c **** 			}
1596:..\FreeRTOS10/queue.c **** 		}
1597:..\FreeRTOS10/queue.c **** 	}
1598:..\FreeRTOS10/queue.c **** }
1599:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
1600:..\FreeRTOS10/queue.c **** 
1601:..\FreeRTOS10/queue.c **** BaseType_t xQueuePeek( QueueHandle_t xQueue, void * const pvBuffer, TickType_t xTicksToWait )
1602:..\FreeRTOS10/queue.c **** {
1603:..\FreeRTOS10/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
1604:..\FreeRTOS10/queue.c **** TimeOut_t xTimeOut;
1605:..\FreeRTOS10/queue.c **** int8_t *pcOriginalReadPosition;
1606:..\FreeRTOS10/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1607:..\FreeRTOS10/queue.c **** 
1608:..\FreeRTOS10/queue.c **** 	/* Check the pointer is not NULL. */
1609:..\FreeRTOS10/queue.c **** 	configASSERT( ( pxQueue ) );
1610:..\FreeRTOS10/queue.c **** 
1611:..\FreeRTOS10/queue.c **** 	/* The buffer into which data is received can only be NULL if the data size
1612:..\FreeRTOS10/queue.c **** 	is zero (so no data is copied into the buffer. */
1613:..\FreeRTOS10/queue.c **** 	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) )
1614:..\FreeRTOS10/queue.c **** 
1615:..\FreeRTOS10/queue.c **** 	/* Cannot block if the scheduler is suspended. */
1616:..\FreeRTOS10/queue.c **** 	#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
1617:..\FreeRTOS10/queue.c **** 	{
1618:..\FreeRTOS10/queue.c **** 		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 )
1619:..\FreeRTOS10/queue.c **** 	}
1620:..\FreeRTOS10/queue.c **** 	#endif
1621:..\FreeRTOS10/queue.c **** 
1622:..\FreeRTOS10/queue.c **** 
1623:..\FreeRTOS10/queue.c **** 	/* This function relaxes the coding standard somewhat to allow return
1624:..\FreeRTOS10/queue.c **** 	statements within the function itself.  This is done in the interest
1625:..\FreeRTOS10/queue.c **** 	of execution time efficiency. */
1626:..\FreeRTOS10/queue.c **** 
1627:..\FreeRTOS10/queue.c **** 	for( ;; )
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 30


1628:..\FreeRTOS10/queue.c **** 	{
1629:..\FreeRTOS10/queue.c **** 		taskENTER_CRITICAL();
1630:..\FreeRTOS10/queue.c **** 		{
1631:..\FreeRTOS10/queue.c **** 			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1632:..\FreeRTOS10/queue.c **** 
1633:..\FreeRTOS10/queue.c **** 			/* Is there data in the queue now?  To be running the calling task
1634:..\FreeRTOS10/queue.c **** 			must be the highest priority task wanting to access the queue. */
1635:..\FreeRTOS10/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1636:..\FreeRTOS10/queue.c **** 			{
1637:..\FreeRTOS10/queue.c **** 				/* Remember the read position so it can be reset after the data
1638:..\FreeRTOS10/queue.c **** 				is read from the queue as this function is only peeking the
1639:..\FreeRTOS10/queue.c **** 				data, not removing it. */
1640:..\FreeRTOS10/queue.c **** 				pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1641:..\FreeRTOS10/queue.c **** 
1642:..\FreeRTOS10/queue.c **** 				prvCopyDataFromQueue( pxQueue, pvBuffer );
1643:..\FreeRTOS10/queue.c **** 				traceQUEUE_PEEK( pxQueue );
1644:..\FreeRTOS10/queue.c **** 
1645:..\FreeRTOS10/queue.c **** 				/* The data is not being removed, so reset the read pointer. */
1646:..\FreeRTOS10/queue.c **** 				pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1647:..\FreeRTOS10/queue.c **** 
1648:..\FreeRTOS10/queue.c **** 				/* The data is being left in the queue, so see if there are
1649:..\FreeRTOS10/queue.c **** 				any other tasks waiting for the data. */
1650:..\FreeRTOS10/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
1651:..\FreeRTOS10/queue.c **** 				{
1652:..\FreeRTOS10/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
1653:..\FreeRTOS10/queue.c **** 					{
1654:..\FreeRTOS10/queue.c **** 						/* The task waiting has a higher priority than this task. */
1655:..\FreeRTOS10/queue.c **** 						queueYIELD_IF_USING_PREEMPTION();
1656:..\FreeRTOS10/queue.c **** 					}
1657:..\FreeRTOS10/queue.c **** 					else
1658:..\FreeRTOS10/queue.c **** 					{
1659:..\FreeRTOS10/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1660:..\FreeRTOS10/queue.c **** 					}
1661:..\FreeRTOS10/queue.c **** 				}
1662:..\FreeRTOS10/queue.c **** 				else
1663:..\FreeRTOS10/queue.c **** 				{
1664:..\FreeRTOS10/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1665:..\FreeRTOS10/queue.c **** 				}
1666:..\FreeRTOS10/queue.c **** 
1667:..\FreeRTOS10/queue.c **** 				taskEXIT_CRITICAL();
1668:..\FreeRTOS10/queue.c **** 				return pdPASS;
1669:..\FreeRTOS10/queue.c **** 			}
1670:..\FreeRTOS10/queue.c **** 			else
1671:..\FreeRTOS10/queue.c **** 			{
1672:..\FreeRTOS10/queue.c **** 				if( xTicksToWait == ( TickType_t ) 0 )
1673:..\FreeRTOS10/queue.c **** 				{
1674:..\FreeRTOS10/queue.c **** 					/* The queue was empty and no block time is specified (or
1675:..\FreeRTOS10/queue.c **** 					the block time has expired) so leave now. */
1676:..\FreeRTOS10/queue.c **** 					taskEXIT_CRITICAL();
1677:..\FreeRTOS10/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
1678:..\FreeRTOS10/queue.c **** 					return errQUEUE_EMPTY;
1679:..\FreeRTOS10/queue.c **** 				}
1680:..\FreeRTOS10/queue.c **** 				else if( xEntryTimeSet == pdFALSE )
1681:..\FreeRTOS10/queue.c **** 				{
1682:..\FreeRTOS10/queue.c **** 					/* The queue was empty and a block time was specified so
1683:..\FreeRTOS10/queue.c **** 					configure the timeout structure ready to enter the blocked
1684:..\FreeRTOS10/queue.c **** 					state. */
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 31


1685:..\FreeRTOS10/queue.c **** 					vTaskInternalSetTimeOutState( &xTimeOut );
1686:..\FreeRTOS10/queue.c **** 					xEntryTimeSet = pdTRUE;
1687:..\FreeRTOS10/queue.c **** 				}
1688:..\FreeRTOS10/queue.c **** 				else
1689:..\FreeRTOS10/queue.c **** 				{
1690:..\FreeRTOS10/queue.c **** 					/* Entry time was already set. */
1691:..\FreeRTOS10/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1692:..\FreeRTOS10/queue.c **** 				}
1693:..\FreeRTOS10/queue.c **** 			}
1694:..\FreeRTOS10/queue.c **** 		}
1695:..\FreeRTOS10/queue.c **** 		taskEXIT_CRITICAL();
1696:..\FreeRTOS10/queue.c **** 
1697:..\FreeRTOS10/queue.c **** 		/* Interrupts and other tasks can send to and receive from the queue
1698:..\FreeRTOS10/queue.c **** 		now the critical section has been exited. */
1699:..\FreeRTOS10/queue.c **** 
1700:..\FreeRTOS10/queue.c **** 		vTaskSuspendAll();
1701:..\FreeRTOS10/queue.c **** 		prvLockQueue( pxQueue );
1702:..\FreeRTOS10/queue.c **** 
1703:..\FreeRTOS10/queue.c **** 		/* Update the timeout state to see if it has expired yet. */
1704:..\FreeRTOS10/queue.c **** 		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
1705:..\FreeRTOS10/queue.c **** 		{
1706:..\FreeRTOS10/queue.c **** 			/* Timeout has not expired yet, check to see if there is data in the
1707:..\FreeRTOS10/queue.c **** 			queue now, and if not enter the Blocked state to wait for data. */
1708:..\FreeRTOS10/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1709:..\FreeRTOS10/queue.c **** 			{
1710:..\FreeRTOS10/queue.c **** 				traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
1711:..\FreeRTOS10/queue.c **** 				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
1712:..\FreeRTOS10/queue.c **** 				prvUnlockQueue( pxQueue );
1713:..\FreeRTOS10/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
1714:..\FreeRTOS10/queue.c **** 				{
1715:..\FreeRTOS10/queue.c **** 					portYIELD_WITHIN_API();
1716:..\FreeRTOS10/queue.c **** 				}
1717:..\FreeRTOS10/queue.c **** 				else
1718:..\FreeRTOS10/queue.c **** 				{
1719:..\FreeRTOS10/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1720:..\FreeRTOS10/queue.c **** 				}
1721:..\FreeRTOS10/queue.c **** 			}
1722:..\FreeRTOS10/queue.c **** 			else
1723:..\FreeRTOS10/queue.c **** 			{
1724:..\FreeRTOS10/queue.c **** 				/* There is data in the queue now, so don't enter the blocked
1725:..\FreeRTOS10/queue.c **** 				state, instead return to try and obtain the data. */
1726:..\FreeRTOS10/queue.c **** 				prvUnlockQueue( pxQueue );
1727:..\FreeRTOS10/queue.c **** 				( void ) xTaskResumeAll();
1728:..\FreeRTOS10/queue.c **** 			}
1729:..\FreeRTOS10/queue.c **** 		}
1730:..\FreeRTOS10/queue.c **** 		else
1731:..\FreeRTOS10/queue.c **** 		{
1732:..\FreeRTOS10/queue.c **** 			/* The timeout has expired.  If there is still no data in the queue
1733:..\FreeRTOS10/queue.c **** 			exit, otherwise go back and try to read the data again. */
1734:..\FreeRTOS10/queue.c **** 			prvUnlockQueue( pxQueue );
1735:..\FreeRTOS10/queue.c **** 			( void ) xTaskResumeAll();
1736:..\FreeRTOS10/queue.c **** 
1737:..\FreeRTOS10/queue.c **** 			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
1738:..\FreeRTOS10/queue.c **** 			{
1739:..\FreeRTOS10/queue.c **** 				traceQUEUE_PEEK_FAILED( pxQueue );
1740:..\FreeRTOS10/queue.c **** 				return errQUEUE_EMPTY;
1741:..\FreeRTOS10/queue.c **** 			}
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 32


1742:..\FreeRTOS10/queue.c **** 			else
1743:..\FreeRTOS10/queue.c **** 			{
1744:..\FreeRTOS10/queue.c **** 				mtCOVERAGE_TEST_MARKER();
1745:..\FreeRTOS10/queue.c **** 			}
1746:..\FreeRTOS10/queue.c **** 		}
1747:..\FreeRTOS10/queue.c **** 	}
1748:..\FreeRTOS10/queue.c **** }
1749:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
1750:..\FreeRTOS10/queue.c **** 
1751:..\FreeRTOS10/queue.c **** BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue, void * const pvBuffer, BaseType_t * const px
1752:..\FreeRTOS10/queue.c **** {
1753:..\FreeRTOS10/queue.c **** BaseType_t xReturn;
1754:..\FreeRTOS10/queue.c **** UBaseType_t uxSavedInterruptStatus;
1755:..\FreeRTOS10/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1756:..\FreeRTOS10/queue.c **** 
1757:..\FreeRTOS10/queue.c **** 	configASSERT( pxQueue );
1758:..\FreeRTOS10/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1759:..\FreeRTOS10/queue.c **** 
1760:..\FreeRTOS10/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1761:..\FreeRTOS10/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1762:..\FreeRTOS10/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
1763:..\FreeRTOS10/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1764:..\FreeRTOS10/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1765:..\FreeRTOS10/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1766:..\FreeRTOS10/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1767:..\FreeRTOS10/queue.c **** 	assigned a priority above the configured maximum system call priority.
1768:..\FreeRTOS10/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1769:..\FreeRTOS10/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1770:..\FreeRTOS10/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1771:..\FreeRTOS10/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1772:..\FreeRTOS10/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1773:..\FreeRTOS10/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1774:..\FreeRTOS10/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1775:..\FreeRTOS10/queue.c **** 
1776:..\FreeRTOS10/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1777:..\FreeRTOS10/queue.c **** 	{
1778:..\FreeRTOS10/queue.c **** 		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
1779:..\FreeRTOS10/queue.c **** 
1780:..\FreeRTOS10/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1781:..\FreeRTOS10/queue.c **** 		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
1782:..\FreeRTOS10/queue.c **** 		{
1783:..\FreeRTOS10/queue.c **** 			const int8_t cRxLock = pxQueue->cRxLock;
1784:..\FreeRTOS10/queue.c **** 
1785:..\FreeRTOS10/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR( pxQueue );
1786:..\FreeRTOS10/queue.c **** 
1787:..\FreeRTOS10/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1788:..\FreeRTOS10/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
1789:..\FreeRTOS10/queue.c **** 
1790:..\FreeRTOS10/queue.c **** 			/* If the queue is locked the event list will not be modified.
1791:..\FreeRTOS10/queue.c **** 			Instead update the lock count so the task that unlocks the queue
1792:..\FreeRTOS10/queue.c **** 			will know that an ISR has removed data while the queue was
1793:..\FreeRTOS10/queue.c **** 			locked. */
1794:..\FreeRTOS10/queue.c **** 			if( cRxLock == queueUNLOCKED )
1795:..\FreeRTOS10/queue.c **** 			{
1796:..\FreeRTOS10/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
1797:..\FreeRTOS10/queue.c **** 				{
1798:..\FreeRTOS10/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 33


1799:..\FreeRTOS10/queue.c **** 					{
1800:..\FreeRTOS10/queue.c **** 						/* The task waiting has a higher priority than us so
1801:..\FreeRTOS10/queue.c **** 						force a context switch. */
1802:..\FreeRTOS10/queue.c **** 						if( pxHigherPriorityTaskWoken != NULL )
1803:..\FreeRTOS10/queue.c **** 						{
1804:..\FreeRTOS10/queue.c **** 							*pxHigherPriorityTaskWoken = pdTRUE;
1805:..\FreeRTOS10/queue.c **** 						}
1806:..\FreeRTOS10/queue.c **** 						else
1807:..\FreeRTOS10/queue.c **** 						{
1808:..\FreeRTOS10/queue.c **** 							mtCOVERAGE_TEST_MARKER();
1809:..\FreeRTOS10/queue.c **** 						}
1810:..\FreeRTOS10/queue.c **** 					}
1811:..\FreeRTOS10/queue.c **** 					else
1812:..\FreeRTOS10/queue.c **** 					{
1813:..\FreeRTOS10/queue.c **** 						mtCOVERAGE_TEST_MARKER();
1814:..\FreeRTOS10/queue.c **** 					}
1815:..\FreeRTOS10/queue.c **** 				}
1816:..\FreeRTOS10/queue.c **** 				else
1817:..\FreeRTOS10/queue.c **** 				{
1818:..\FreeRTOS10/queue.c **** 					mtCOVERAGE_TEST_MARKER();
1819:..\FreeRTOS10/queue.c **** 				}
1820:..\FreeRTOS10/queue.c **** 			}
1821:..\FreeRTOS10/queue.c **** 			else
1822:..\FreeRTOS10/queue.c **** 			{
1823:..\FreeRTOS10/queue.c **** 				/* Increment the lock count so the task that unlocks the queue
1824:..\FreeRTOS10/queue.c **** 				knows that data was removed while it was locked. */
1825:..\FreeRTOS10/queue.c **** 				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
1826:..\FreeRTOS10/queue.c **** 			}
1827:..\FreeRTOS10/queue.c **** 
1828:..\FreeRTOS10/queue.c **** 			xReturn = pdPASS;
1829:..\FreeRTOS10/queue.c **** 		}
1830:..\FreeRTOS10/queue.c **** 		else
1831:..\FreeRTOS10/queue.c **** 		{
1832:..\FreeRTOS10/queue.c **** 			xReturn = pdFAIL;
1833:..\FreeRTOS10/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
1834:..\FreeRTOS10/queue.c **** 		}
1835:..\FreeRTOS10/queue.c **** 	}
1836:..\FreeRTOS10/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1837:..\FreeRTOS10/queue.c **** 
1838:..\FreeRTOS10/queue.c **** 	return xReturn;
1839:..\FreeRTOS10/queue.c **** }
1840:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
1841:..\FreeRTOS10/queue.c **** 
1842:..\FreeRTOS10/queue.c **** BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,  void * const pvBuffer )
1843:..\FreeRTOS10/queue.c **** {
1844:..\FreeRTOS10/queue.c **** BaseType_t xReturn;
1845:..\FreeRTOS10/queue.c **** UBaseType_t uxSavedInterruptStatus;
1846:..\FreeRTOS10/queue.c **** int8_t *pcOriginalReadPosition;
1847:..\FreeRTOS10/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1848:..\FreeRTOS10/queue.c **** 
1849:..\FreeRTOS10/queue.c **** 	configASSERT( pxQueue );
1850:..\FreeRTOS10/queue.c **** 	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
1851:..\FreeRTOS10/queue.c **** 	configASSERT( pxQueue->uxItemSize != 0 ); /* Can't peek a semaphore. */
1852:..\FreeRTOS10/queue.c **** 
1853:..\FreeRTOS10/queue.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
1854:..\FreeRTOS10/queue.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
1855:..\FreeRTOS10/queue.c **** 	above the maximum system call priority are kept permanently enabled, even
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 34


1856:..\FreeRTOS10/queue.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
1857:..\FreeRTOS10/queue.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
1858:..\FreeRTOS10/queue.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1859:..\FreeRTOS10/queue.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
1860:..\FreeRTOS10/queue.c **** 	assigned a priority above the configured maximum system call priority.
1861:..\FreeRTOS10/queue.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
1862:..\FreeRTOS10/queue.c **** 	that have been assigned a priority at or (logically) below the maximum
1863:..\FreeRTOS10/queue.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
1864:..\FreeRTOS10/queue.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
1865:..\FreeRTOS10/queue.c **** 	More information (albeit Cortex-M specific) is provided on the following
1866:..\FreeRTOS10/queue.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1867:..\FreeRTOS10/queue.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1868:..\FreeRTOS10/queue.c **** 
1869:..\FreeRTOS10/queue.c **** 	uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1870:..\FreeRTOS10/queue.c **** 	{
1871:..\FreeRTOS10/queue.c **** 		/* Cannot block in an ISR, so check there is data available. */
1872:..\FreeRTOS10/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
1873:..\FreeRTOS10/queue.c **** 		{
1874:..\FreeRTOS10/queue.c **** 			traceQUEUE_PEEK_FROM_ISR( pxQueue );
1875:..\FreeRTOS10/queue.c **** 
1876:..\FreeRTOS10/queue.c **** 			/* Remember the read position so it can be reset as nothing is
1877:..\FreeRTOS10/queue.c **** 			actually being removed from the queue. */
1878:..\FreeRTOS10/queue.c **** 			pcOriginalReadPosition = pxQueue->u.pcReadFrom;
1879:..\FreeRTOS10/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
1880:..\FreeRTOS10/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
1881:..\FreeRTOS10/queue.c **** 
1882:..\FreeRTOS10/queue.c **** 			xReturn = pdPASS;
1883:..\FreeRTOS10/queue.c **** 		}
1884:..\FreeRTOS10/queue.c **** 		else
1885:..\FreeRTOS10/queue.c **** 		{
1886:..\FreeRTOS10/queue.c **** 			xReturn = pdFAIL;
1887:..\FreeRTOS10/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
1888:..\FreeRTOS10/queue.c **** 		}
1889:..\FreeRTOS10/queue.c **** 	}
1890:..\FreeRTOS10/queue.c **** 	portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1891:..\FreeRTOS10/queue.c **** 
1892:..\FreeRTOS10/queue.c **** 	return xReturn;
1893:..\FreeRTOS10/queue.c **** }
1894:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
1895:..\FreeRTOS10/queue.c **** 
1896:..\FreeRTOS10/queue.c **** UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
1897:..\FreeRTOS10/queue.c **** {
1898:..\FreeRTOS10/queue.c **** UBaseType_t uxReturn;
1899:..\FreeRTOS10/queue.c **** 
1900:..\FreeRTOS10/queue.c **** 	configASSERT( xQueue );
1901:..\FreeRTOS10/queue.c **** 
1902:..\FreeRTOS10/queue.c **** 	taskENTER_CRITICAL();
1903:..\FreeRTOS10/queue.c **** 	{
1904:..\FreeRTOS10/queue.c **** 		uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1905:..\FreeRTOS10/queue.c **** 	}
1906:..\FreeRTOS10/queue.c **** 	taskEXIT_CRITICAL();
1907:..\FreeRTOS10/queue.c **** 
1908:..\FreeRTOS10/queue.c **** 	return uxReturn;
1909:..\FreeRTOS10/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1910:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
1911:..\FreeRTOS10/queue.c **** 
1912:..\FreeRTOS10/queue.c **** UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 35


1913:..\FreeRTOS10/queue.c **** {
1914:..\FreeRTOS10/queue.c **** UBaseType_t uxReturn;
1915:..\FreeRTOS10/queue.c **** Queue_t *pxQueue;
1916:..\FreeRTOS10/queue.c **** 
1917:..\FreeRTOS10/queue.c **** 	pxQueue = ( Queue_t * ) xQueue;
1918:..\FreeRTOS10/queue.c **** 	configASSERT( pxQueue );
1919:..\FreeRTOS10/queue.c **** 
1920:..\FreeRTOS10/queue.c **** 	taskENTER_CRITICAL();
1921:..\FreeRTOS10/queue.c **** 	{
1922:..\FreeRTOS10/queue.c **** 		uxReturn = pxQueue->uxLength - pxQueue->uxMessagesWaiting;
1923:..\FreeRTOS10/queue.c **** 	}
1924:..\FreeRTOS10/queue.c **** 	taskEXIT_CRITICAL();
1925:..\FreeRTOS10/queue.c **** 
1926:..\FreeRTOS10/queue.c **** 	return uxReturn;
1927:..\FreeRTOS10/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1928:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
1929:..\FreeRTOS10/queue.c **** 
1930:..\FreeRTOS10/queue.c **** UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
1931:..\FreeRTOS10/queue.c **** {
1932:..\FreeRTOS10/queue.c **** UBaseType_t uxReturn;
1933:..\FreeRTOS10/queue.c **** 
1934:..\FreeRTOS10/queue.c **** 	configASSERT( xQueue );
1935:..\FreeRTOS10/queue.c **** 
1936:..\FreeRTOS10/queue.c **** 	uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
1937:..\FreeRTOS10/queue.c **** 
1938:..\FreeRTOS10/queue.c **** 	return uxReturn;
1939:..\FreeRTOS10/queue.c **** } /*lint !e818 Pointer cannot be declared const as xQueue is a typedef not pointer. */
1940:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
1941:..\FreeRTOS10/queue.c **** 
1942:..\FreeRTOS10/queue.c **** void vQueueDelete( QueueHandle_t xQueue )
1943:..\FreeRTOS10/queue.c **** {
1944:..\FreeRTOS10/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
1945:..\FreeRTOS10/queue.c **** 
1946:..\FreeRTOS10/queue.c **** 	configASSERT( pxQueue );
1947:..\FreeRTOS10/queue.c **** 	traceQUEUE_DELETE( pxQueue );
1948:..\FreeRTOS10/queue.c **** 
1949:..\FreeRTOS10/queue.c **** 	#if ( configQUEUE_REGISTRY_SIZE > 0 )
1950:..\FreeRTOS10/queue.c **** 	{
1951:..\FreeRTOS10/queue.c **** 		vQueueUnregisterQueue( pxQueue );
1952:..\FreeRTOS10/queue.c **** 	}
1953:..\FreeRTOS10/queue.c **** 	#endif
1954:..\FreeRTOS10/queue.c **** 
1955:..\FreeRTOS10/queue.c **** 	#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
1956:..\FreeRTOS10/queue.c **** 	{
1957:..\FreeRTOS10/queue.c **** 		/* The queue can only have been allocated dynamically - free it
1958:..\FreeRTOS10/queue.c **** 		again. */
1959:..\FreeRTOS10/queue.c **** 		vPortFree( pxQueue );
1960:..\FreeRTOS10/queue.c **** 	}
1961:..\FreeRTOS10/queue.c **** 	#elif( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
1962:..\FreeRTOS10/queue.c **** 	{
1963:..\FreeRTOS10/queue.c **** 		/* The queue could have been allocated statically or dynamically, so
1964:..\FreeRTOS10/queue.c **** 		check before attempting to free the memory. */
1965:..\FreeRTOS10/queue.c **** 		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
1966:..\FreeRTOS10/queue.c **** 		{
1967:..\FreeRTOS10/queue.c **** 			vPortFree( pxQueue );
1968:..\FreeRTOS10/queue.c **** 		}
1969:..\FreeRTOS10/queue.c **** 		else
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 36


1970:..\FreeRTOS10/queue.c **** 		{
1971:..\FreeRTOS10/queue.c **** 			mtCOVERAGE_TEST_MARKER();
1972:..\FreeRTOS10/queue.c **** 		}
1973:..\FreeRTOS10/queue.c **** 	}
1974:..\FreeRTOS10/queue.c **** 	#else
1975:..\FreeRTOS10/queue.c **** 	{
1976:..\FreeRTOS10/queue.c **** 		/* The queue must have been statically allocated, so is not going to be
1977:..\FreeRTOS10/queue.c **** 		deleted.  Avoid compiler warnings about the unused parameter. */
1978:..\FreeRTOS10/queue.c **** 		( void ) pxQueue;
1979:..\FreeRTOS10/queue.c **** 	}
1980:..\FreeRTOS10/queue.c **** 	#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
1981:..\FreeRTOS10/queue.c **** }
1982:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
1983:..\FreeRTOS10/queue.c **** 
1984:..\FreeRTOS10/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1985:..\FreeRTOS10/queue.c **** 
1986:..\FreeRTOS10/queue.c **** 	UBaseType_t uxQueueGetQueueNumber( QueueHandle_t xQueue )
1987:..\FreeRTOS10/queue.c **** 	{
1988:..\FreeRTOS10/queue.c **** 		return ( ( Queue_t * ) xQueue )->uxQueueNumber;
1989:..\FreeRTOS10/queue.c **** 	}
1990:..\FreeRTOS10/queue.c **** 
1991:..\FreeRTOS10/queue.c **** #endif /* configUSE_TRACE_FACILITY */
1992:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
1993:..\FreeRTOS10/queue.c **** 
1994:..\FreeRTOS10/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1995:..\FreeRTOS10/queue.c **** 
1996:..\FreeRTOS10/queue.c **** 	void vQueueSetQueueNumber( QueueHandle_t xQueue, UBaseType_t uxQueueNumber )
1997:..\FreeRTOS10/queue.c **** 	{
1998:..\FreeRTOS10/queue.c **** 		( ( Queue_t * ) xQueue )->uxQueueNumber = uxQueueNumber;
1999:..\FreeRTOS10/queue.c **** 	}
2000:..\FreeRTOS10/queue.c **** 
2001:..\FreeRTOS10/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2002:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
2003:..\FreeRTOS10/queue.c **** 
2004:..\FreeRTOS10/queue.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2005:..\FreeRTOS10/queue.c **** 
2006:..\FreeRTOS10/queue.c **** 	uint8_t ucQueueGetQueueType( QueueHandle_t xQueue )
2007:..\FreeRTOS10/queue.c **** 	{
2008:..\FreeRTOS10/queue.c **** 		return ( ( Queue_t * ) xQueue )->ucQueueType;
2009:..\FreeRTOS10/queue.c **** 	}
2010:..\FreeRTOS10/queue.c **** 
2011:..\FreeRTOS10/queue.c **** #endif /* configUSE_TRACE_FACILITY */
2012:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
2013:..\FreeRTOS10/queue.c **** 
2014:..\FreeRTOS10/queue.c **** #if( configUSE_MUTEXES == 1 )
2015:..\FreeRTOS10/queue.c **** 
2016:..\FreeRTOS10/queue.c **** 	static UBaseType_t prvGetDisinheritPriorityAfterTimeout( const Queue_t * const pxQueue )
2017:..\FreeRTOS10/queue.c **** 	{
  27              		.loc 1 2017 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
2018:..\FreeRTOS10/queue.c **** 	UBaseType_t uxHighestPriorityOfWaitingTasks;
2019:..\FreeRTOS10/queue.c **** 
2020:..\FreeRTOS10/queue.c **** 		/* If a task waiting for a mutex causes the mutex holder to inherit a
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 37


2021:..\FreeRTOS10/queue.c **** 		priority, but the waiting task times out, then the holder should
2022:..\FreeRTOS10/queue.c **** 		disinherit the priority - but only down to the highest priority of any
2023:..\FreeRTOS10/queue.c **** 		other tasks that are waiting for the same mutex.  For this purpose,
2024:..\FreeRTOS10/queue.c **** 		return the priority of the highest priority task that is waiting for the
2025:..\FreeRTOS10/queue.c **** 		mutex. */
2026:..\FreeRTOS10/queue.c **** 		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0 )
  33              		.loc 1 2026 0
  34 0000 436A     		ldr	r3, [r0, #36]
  35 0002 002B     		cmp	r3, #0
  36 0004 04D0     		beq	.L3
2027:..\FreeRTOS10/queue.c **** 		{
2028:..\FreeRTOS10/queue.c **** 			uxHighestPriorityOfWaitingTasks = configMAX_PRIORITIES - listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( px
  37              		.loc 1 2028 0
  38 0006 036B     		ldr	r3, [r0, #48]
  39 0008 1868     		ldr	r0, [r3]
  40              	.LVL1:
  41 000a 0523     		movs	r3, #5
  42 000c 181A     		subs	r0, r3, r0
  43              	.LVL2:
  44 000e 00E0     		b	.L2
  45              	.LVL3:
  46              	.L3:
2029:..\FreeRTOS10/queue.c **** 		}
2030:..\FreeRTOS10/queue.c **** 		else
2031:..\FreeRTOS10/queue.c **** 		{
2032:..\FreeRTOS10/queue.c **** 			uxHighestPriorityOfWaitingTasks = tskIDLE_PRIORITY;
  47              		.loc 1 2032 0
  48 0010 0020     		movs	r0, #0
  49              	.LVL4:
  50              	.L2:
2033:..\FreeRTOS10/queue.c **** 		}
2034:..\FreeRTOS10/queue.c **** 
2035:..\FreeRTOS10/queue.c **** 		return uxHighestPriorityOfWaitingTasks;
2036:..\FreeRTOS10/queue.c **** 	}
  51              		.loc 1 2036 0
  52              		@ sp needed
  53 0012 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE52:
  56              		.size	prvGetDisinheritPriorityAfterTimeout, .-prvGetDisinheritPriorityAfterTimeout
  57              		.section	.text.prvIsQueueFull,"ax",%progbits
  58              		.align	2
  59              		.code	16
  60              		.thumb_func
  61              		.type	prvIsQueueFull, %function
  62              	prvIsQueueFull:
  63              	.LFB58:
2037:..\FreeRTOS10/queue.c **** 
2038:..\FreeRTOS10/queue.c **** #endif /* configUSE_MUTEXES */
2039:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
2040:..\FreeRTOS10/queue.c **** 
2041:..\FreeRTOS10/queue.c **** static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue, const void *pvItemToQueue, const Bas
2042:..\FreeRTOS10/queue.c **** {
2043:..\FreeRTOS10/queue.c **** BaseType_t xReturn = pdFALSE;
2044:..\FreeRTOS10/queue.c **** UBaseType_t uxMessagesWaiting;
2045:..\FreeRTOS10/queue.c **** 
2046:..\FreeRTOS10/queue.c **** 	/* This function is called from a critical section. */
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 38


2047:..\FreeRTOS10/queue.c **** 
2048:..\FreeRTOS10/queue.c **** 	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
2049:..\FreeRTOS10/queue.c **** 
2050:..\FreeRTOS10/queue.c **** 	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
2051:..\FreeRTOS10/queue.c **** 	{
2052:..\FreeRTOS10/queue.c **** 		#if ( configUSE_MUTEXES == 1 )
2053:..\FreeRTOS10/queue.c **** 		{
2054:..\FreeRTOS10/queue.c **** 			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
2055:..\FreeRTOS10/queue.c **** 			{
2056:..\FreeRTOS10/queue.c **** 				/* The mutex is no longer being held. */
2057:..\FreeRTOS10/queue.c **** 				xReturn = xTaskPriorityDisinherit( ( void * ) pxQueue->pxMutexHolder );
2058:..\FreeRTOS10/queue.c **** 				pxQueue->pxMutexHolder = NULL;
2059:..\FreeRTOS10/queue.c **** 			}
2060:..\FreeRTOS10/queue.c **** 			else
2061:..\FreeRTOS10/queue.c **** 			{
2062:..\FreeRTOS10/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2063:..\FreeRTOS10/queue.c **** 			}
2064:..\FreeRTOS10/queue.c **** 		}
2065:..\FreeRTOS10/queue.c **** 		#endif /* configUSE_MUTEXES */
2066:..\FreeRTOS10/queue.c **** 	}
2067:..\FreeRTOS10/queue.c **** 	else if( xPosition == queueSEND_TO_BACK )
2068:..\FreeRTOS10/queue.c **** 	{
2069:..\FreeRTOS10/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); 
2070:..\FreeRTOS10/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
2071:..\FreeRTOS10/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
2072:..\FreeRTOS10/queue.c **** 		{
2073:..\FreeRTOS10/queue.c **** 			pxQueue->pcWriteTo = pxQueue->pcHead;
2074:..\FreeRTOS10/queue.c **** 		}
2075:..\FreeRTOS10/queue.c **** 		else
2076:..\FreeRTOS10/queue.c **** 		{
2077:..\FreeRTOS10/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2078:..\FreeRTOS10/queue.c **** 		}
2079:..\FreeRTOS10/queue.c **** 	}
2080:..\FreeRTOS10/queue.c **** 	else
2081:..\FreeRTOS10/queue.c **** 	{
2082:..\FreeRTOS10/queue.c **** 		( void ) memcpy( ( void * ) pxQueue->u.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize 
2083:..\FreeRTOS10/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
2084:..\FreeRTOS10/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
2085:..\FreeRTOS10/queue.c **** 		{
2086:..\FreeRTOS10/queue.c **** 			pxQueue->u.pcReadFrom = ( pxQueue->pcTail - pxQueue->uxItemSize );
2087:..\FreeRTOS10/queue.c **** 		}
2088:..\FreeRTOS10/queue.c **** 		else
2089:..\FreeRTOS10/queue.c **** 		{
2090:..\FreeRTOS10/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2091:..\FreeRTOS10/queue.c **** 		}
2092:..\FreeRTOS10/queue.c **** 
2093:..\FreeRTOS10/queue.c **** 		if( xPosition == queueOVERWRITE )
2094:..\FreeRTOS10/queue.c **** 		{
2095:..\FreeRTOS10/queue.c **** 			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
2096:..\FreeRTOS10/queue.c **** 			{
2097:..\FreeRTOS10/queue.c **** 				/* An item is not being added but overwritten, so subtract
2098:..\FreeRTOS10/queue.c **** 				one from the recorded number of items in the queue so when
2099:..\FreeRTOS10/queue.c **** 				one is added again below the number of recorded items remains
2100:..\FreeRTOS10/queue.c **** 				correct. */
2101:..\FreeRTOS10/queue.c **** 				--uxMessagesWaiting;
2102:..\FreeRTOS10/queue.c **** 			}
2103:..\FreeRTOS10/queue.c **** 			else
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 39


2104:..\FreeRTOS10/queue.c **** 			{
2105:..\FreeRTOS10/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2106:..\FreeRTOS10/queue.c **** 			}
2107:..\FreeRTOS10/queue.c **** 		}
2108:..\FreeRTOS10/queue.c **** 		else
2109:..\FreeRTOS10/queue.c **** 		{
2110:..\FreeRTOS10/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2111:..\FreeRTOS10/queue.c **** 		}
2112:..\FreeRTOS10/queue.c **** 	}
2113:..\FreeRTOS10/queue.c **** 
2114:..\FreeRTOS10/queue.c **** 	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
2115:..\FreeRTOS10/queue.c **** 
2116:..\FreeRTOS10/queue.c **** 	return xReturn;
2117:..\FreeRTOS10/queue.c **** }
2118:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
2119:..\FreeRTOS10/queue.c **** 
2120:..\FreeRTOS10/queue.c **** static void prvCopyDataFromQueue( Queue_t * const pxQueue, void * const pvBuffer )
2121:..\FreeRTOS10/queue.c **** {
2122:..\FreeRTOS10/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
2123:..\FreeRTOS10/queue.c **** 	{
2124:..\FreeRTOS10/queue.c **** 		pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2125:..\FreeRTOS10/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
2126:..\FreeRTOS10/queue.c **** 		{
2127:..\FreeRTOS10/queue.c **** 			pxQueue->u.pcReadFrom = pxQueue->pcHead;
2128:..\FreeRTOS10/queue.c **** 		}
2129:..\FreeRTOS10/queue.c **** 		else
2130:..\FreeRTOS10/queue.c **** 		{
2131:..\FreeRTOS10/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2132:..\FreeRTOS10/queue.c **** 		}
2133:..\FreeRTOS10/queue.c **** 		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( size_t ) pxQueue->uxIte
2134:..\FreeRTOS10/queue.c **** 	}
2135:..\FreeRTOS10/queue.c **** }
2136:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
2137:..\FreeRTOS10/queue.c **** 
2138:..\FreeRTOS10/queue.c **** static void prvUnlockQueue( Queue_t * const pxQueue )
2139:..\FreeRTOS10/queue.c **** {
2140:..\FreeRTOS10/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
2141:..\FreeRTOS10/queue.c **** 
2142:..\FreeRTOS10/queue.c **** 	/* The lock counts contains the number of extra data items placed or
2143:..\FreeRTOS10/queue.c **** 	removed from the queue while the queue was locked.  When a queue is
2144:..\FreeRTOS10/queue.c **** 	locked items can be added or removed, but the event lists cannot be
2145:..\FreeRTOS10/queue.c **** 	updated. */
2146:..\FreeRTOS10/queue.c **** 	taskENTER_CRITICAL();
2147:..\FreeRTOS10/queue.c **** 	{
2148:..\FreeRTOS10/queue.c **** 		int8_t cTxLock = pxQueue->cTxLock;
2149:..\FreeRTOS10/queue.c **** 
2150:..\FreeRTOS10/queue.c **** 		/* See if data was added to the queue while it was locked. */
2151:..\FreeRTOS10/queue.c **** 		while( cTxLock > queueLOCKED_UNMODIFIED )
2152:..\FreeRTOS10/queue.c **** 		{
2153:..\FreeRTOS10/queue.c **** 			/* Data was posted while the queue was locked.  Are any tasks
2154:..\FreeRTOS10/queue.c **** 			blocked waiting for data to become available? */
2155:..\FreeRTOS10/queue.c **** 			#if ( configUSE_QUEUE_SETS == 1 )
2156:..\FreeRTOS10/queue.c **** 			{
2157:..\FreeRTOS10/queue.c **** 				if( pxQueue->pxQueueSetContainer != NULL )
2158:..\FreeRTOS10/queue.c **** 				{
2159:..\FreeRTOS10/queue.c **** 					if( prvNotifyQueueSetContainer( pxQueue, queueSEND_TO_BACK ) != pdFALSE )
2160:..\FreeRTOS10/queue.c **** 					{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 40


2161:..\FreeRTOS10/queue.c **** 						/* The queue is a member of a queue set, and posting to
2162:..\FreeRTOS10/queue.c **** 						the queue set caused a higher priority task to unblock.
2163:..\FreeRTOS10/queue.c **** 						A context switch is required. */
2164:..\FreeRTOS10/queue.c **** 						vTaskMissedYield();
2165:..\FreeRTOS10/queue.c **** 					}
2166:..\FreeRTOS10/queue.c **** 					else
2167:..\FreeRTOS10/queue.c **** 					{
2168:..\FreeRTOS10/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2169:..\FreeRTOS10/queue.c **** 					}
2170:..\FreeRTOS10/queue.c **** 				}
2171:..\FreeRTOS10/queue.c **** 				else
2172:..\FreeRTOS10/queue.c **** 				{
2173:..\FreeRTOS10/queue.c **** 					/* Tasks that are removed from the event list will get
2174:..\FreeRTOS10/queue.c **** 					added to the pending ready list as the scheduler is still
2175:..\FreeRTOS10/queue.c **** 					suspended. */
2176:..\FreeRTOS10/queue.c **** 					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2177:..\FreeRTOS10/queue.c **** 					{
2178:..\FreeRTOS10/queue.c **** 						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2179:..\FreeRTOS10/queue.c **** 						{
2180:..\FreeRTOS10/queue.c **** 							/* The task waiting has a higher priority so record that a
2181:..\FreeRTOS10/queue.c **** 							context	switch is required. */
2182:..\FreeRTOS10/queue.c **** 							vTaskMissedYield();
2183:..\FreeRTOS10/queue.c **** 						}
2184:..\FreeRTOS10/queue.c **** 						else
2185:..\FreeRTOS10/queue.c **** 						{
2186:..\FreeRTOS10/queue.c **** 							mtCOVERAGE_TEST_MARKER();
2187:..\FreeRTOS10/queue.c **** 						}
2188:..\FreeRTOS10/queue.c **** 					}
2189:..\FreeRTOS10/queue.c **** 					else
2190:..\FreeRTOS10/queue.c **** 					{
2191:..\FreeRTOS10/queue.c **** 						break;
2192:..\FreeRTOS10/queue.c **** 					}
2193:..\FreeRTOS10/queue.c **** 				}
2194:..\FreeRTOS10/queue.c **** 			}
2195:..\FreeRTOS10/queue.c **** 			#else /* configUSE_QUEUE_SETS */
2196:..\FreeRTOS10/queue.c **** 			{
2197:..\FreeRTOS10/queue.c **** 				/* Tasks that are removed from the event list will get added to
2198:..\FreeRTOS10/queue.c **** 				the pending ready list as the scheduler is still suspended. */
2199:..\FreeRTOS10/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2200:..\FreeRTOS10/queue.c **** 				{
2201:..\FreeRTOS10/queue.c **** 					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2202:..\FreeRTOS10/queue.c **** 					{
2203:..\FreeRTOS10/queue.c **** 						/* The task waiting has a higher priority so record that
2204:..\FreeRTOS10/queue.c **** 						a context switch is required. */
2205:..\FreeRTOS10/queue.c **** 						vTaskMissedYield();
2206:..\FreeRTOS10/queue.c **** 					}
2207:..\FreeRTOS10/queue.c **** 					else
2208:..\FreeRTOS10/queue.c **** 					{
2209:..\FreeRTOS10/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2210:..\FreeRTOS10/queue.c **** 					}
2211:..\FreeRTOS10/queue.c **** 				}
2212:..\FreeRTOS10/queue.c **** 				else
2213:..\FreeRTOS10/queue.c **** 				{
2214:..\FreeRTOS10/queue.c **** 					break;
2215:..\FreeRTOS10/queue.c **** 				}
2216:..\FreeRTOS10/queue.c **** 			}
2217:..\FreeRTOS10/queue.c **** 			#endif /* configUSE_QUEUE_SETS */
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 41


2218:..\FreeRTOS10/queue.c **** 
2219:..\FreeRTOS10/queue.c **** 			--cTxLock;
2220:..\FreeRTOS10/queue.c **** 		}
2221:..\FreeRTOS10/queue.c **** 
2222:..\FreeRTOS10/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
2223:..\FreeRTOS10/queue.c **** 	}
2224:..\FreeRTOS10/queue.c **** 	taskEXIT_CRITICAL();
2225:..\FreeRTOS10/queue.c **** 
2226:..\FreeRTOS10/queue.c **** 	/* Do the same for the Rx lock. */
2227:..\FreeRTOS10/queue.c **** 	taskENTER_CRITICAL();
2228:..\FreeRTOS10/queue.c **** 	{
2229:..\FreeRTOS10/queue.c **** 		int8_t cRxLock = pxQueue->cRxLock;
2230:..\FreeRTOS10/queue.c **** 
2231:..\FreeRTOS10/queue.c **** 		while( cRxLock > queueLOCKED_UNMODIFIED )
2232:..\FreeRTOS10/queue.c **** 		{
2233:..\FreeRTOS10/queue.c **** 			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2234:..\FreeRTOS10/queue.c **** 			{
2235:..\FreeRTOS10/queue.c **** 				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2236:..\FreeRTOS10/queue.c **** 				{
2237:..\FreeRTOS10/queue.c **** 					vTaskMissedYield();
2238:..\FreeRTOS10/queue.c **** 				}
2239:..\FreeRTOS10/queue.c **** 				else
2240:..\FreeRTOS10/queue.c **** 				{
2241:..\FreeRTOS10/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2242:..\FreeRTOS10/queue.c **** 				}
2243:..\FreeRTOS10/queue.c **** 
2244:..\FreeRTOS10/queue.c **** 				--cRxLock;
2245:..\FreeRTOS10/queue.c **** 			}
2246:..\FreeRTOS10/queue.c **** 			else
2247:..\FreeRTOS10/queue.c **** 			{
2248:..\FreeRTOS10/queue.c **** 				break;
2249:..\FreeRTOS10/queue.c **** 			}
2250:..\FreeRTOS10/queue.c **** 		}
2251:..\FreeRTOS10/queue.c **** 
2252:..\FreeRTOS10/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
2253:..\FreeRTOS10/queue.c **** 	}
2254:..\FreeRTOS10/queue.c **** 	taskEXIT_CRITICAL();
2255:..\FreeRTOS10/queue.c **** }
2256:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
2257:..\FreeRTOS10/queue.c **** 
2258:..\FreeRTOS10/queue.c **** static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
2259:..\FreeRTOS10/queue.c **** {
2260:..\FreeRTOS10/queue.c **** BaseType_t xReturn;
2261:..\FreeRTOS10/queue.c **** 
2262:..\FreeRTOS10/queue.c **** 	taskENTER_CRITICAL();
2263:..\FreeRTOS10/queue.c **** 	{
2264:..\FreeRTOS10/queue.c **** 		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
2265:..\FreeRTOS10/queue.c **** 		{
2266:..\FreeRTOS10/queue.c **** 			xReturn = pdTRUE;
2267:..\FreeRTOS10/queue.c **** 		}
2268:..\FreeRTOS10/queue.c **** 		else
2269:..\FreeRTOS10/queue.c **** 		{
2270:..\FreeRTOS10/queue.c **** 			xReturn = pdFALSE;
2271:..\FreeRTOS10/queue.c **** 		}
2272:..\FreeRTOS10/queue.c **** 	}
2273:..\FreeRTOS10/queue.c **** 	taskEXIT_CRITICAL();
2274:..\FreeRTOS10/queue.c **** 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 42


2275:..\FreeRTOS10/queue.c **** 	return xReturn;
2276:..\FreeRTOS10/queue.c **** }
2277:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
2278:..\FreeRTOS10/queue.c **** 
2279:..\FreeRTOS10/queue.c **** BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
2280:..\FreeRTOS10/queue.c **** {
2281:..\FreeRTOS10/queue.c **** BaseType_t xReturn;
2282:..\FreeRTOS10/queue.c **** 
2283:..\FreeRTOS10/queue.c **** 	configASSERT( xQueue );
2284:..\FreeRTOS10/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( UBaseType_t ) 0 )
2285:..\FreeRTOS10/queue.c **** 	{
2286:..\FreeRTOS10/queue.c **** 		xReturn = pdTRUE;
2287:..\FreeRTOS10/queue.c **** 	}
2288:..\FreeRTOS10/queue.c **** 	else
2289:..\FreeRTOS10/queue.c **** 	{
2290:..\FreeRTOS10/queue.c **** 		xReturn = pdFALSE;
2291:..\FreeRTOS10/queue.c **** 	}
2292:..\FreeRTOS10/queue.c **** 
2293:..\FreeRTOS10/queue.c **** 	return xReturn;
2294:..\FreeRTOS10/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
2295:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
2296:..\FreeRTOS10/queue.c **** 
2297:..\FreeRTOS10/queue.c **** static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
2298:..\FreeRTOS10/queue.c **** {
  64              		.loc 1 2298 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              	.LVL5:
  69 0000 10B5     		push	{r4, lr}
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 4, -8
  72              		.cfi_offset 14, -4
  73 0002 0400     		movs	r4, r0
2299:..\FreeRTOS10/queue.c **** BaseType_t xReturn;
2300:..\FreeRTOS10/queue.c **** 
2301:..\FreeRTOS10/queue.c **** 	taskENTER_CRITICAL();
  74              		.loc 1 2301 0
  75 0004 FFF7FEFF 		bl	vPortEnterCritical
  76              	.LVL6:
2302:..\FreeRTOS10/queue.c **** 	{
2303:..\FreeRTOS10/queue.c **** 		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
  77              		.loc 1 2303 0
  78 0008 A26B     		ldr	r2, [r4, #56]
  79 000a E36B     		ldr	r3, [r4, #60]
  80 000c 9A42     		cmp	r2, r3
  81 000e 01D1     		bne	.L6
2304:..\FreeRTOS10/queue.c **** 		{
2305:..\FreeRTOS10/queue.c **** 			xReturn = pdTRUE;
  82              		.loc 1 2305 0
  83 0010 0124     		movs	r4, #1
  84              	.LVL7:
  85 0012 00E0     		b	.L5
  86              	.LVL8:
  87              	.L6:
2306:..\FreeRTOS10/queue.c **** 		}
2307:..\FreeRTOS10/queue.c **** 		else
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 43


2308:..\FreeRTOS10/queue.c **** 		{
2309:..\FreeRTOS10/queue.c **** 			xReturn = pdFALSE;
  88              		.loc 1 2309 0
  89 0014 0024     		movs	r4, #0
  90              	.LVL9:
  91              	.L5:
2310:..\FreeRTOS10/queue.c **** 		}
2311:..\FreeRTOS10/queue.c **** 	}
2312:..\FreeRTOS10/queue.c **** 	taskEXIT_CRITICAL();
  92              		.loc 1 2312 0
  93 0016 FFF7FEFF 		bl	vPortExitCritical
  94              	.LVL10:
2313:..\FreeRTOS10/queue.c **** 
2314:..\FreeRTOS10/queue.c **** 	return xReturn;
2315:..\FreeRTOS10/queue.c **** }
  95              		.loc 1 2315 0
  96 001a 2000     		movs	r0, r4
  97              		@ sp needed
  98              	.LVL11:
  99 001c 10BD     		pop	{r4, pc}
 100              		.cfi_endproc
 101              	.LFE58:
 102              		.size	prvIsQueueFull, .-prvIsQueueFull
 103 001e C046     		.section	.text.prvIsQueueEmpty,"ax",%progbits
 104              		.align	2
 105              		.code	16
 106              		.thumb_func
 107              		.type	prvIsQueueEmpty, %function
 108              	prvIsQueueEmpty:
 109              	.LFB56:
2259:..\FreeRTOS10/queue.c **** BaseType_t xReturn;
 110              		.loc 1 2259 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              	.LVL12:
 115 0000 10B5     		push	{r4, lr}
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 4, -8
 118              		.cfi_offset 14, -4
 119 0002 0400     		movs	r4, r0
2262:..\FreeRTOS10/queue.c **** 	{
 120              		.loc 1 2262 0
 121 0004 FFF7FEFF 		bl	vPortEnterCritical
 122              	.LVL13:
2264:..\FreeRTOS10/queue.c **** 		{
 123              		.loc 1 2264 0
 124 0008 A36B     		ldr	r3, [r4, #56]
 125 000a 002B     		cmp	r3, #0
 126 000c 01D1     		bne	.L9
2266:..\FreeRTOS10/queue.c **** 		}
 127              		.loc 1 2266 0
 128 000e 0124     		movs	r4, #1
 129              	.LVL14:
 130 0010 00E0     		b	.L8
 131              	.LVL15:
 132              	.L9:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 44


2270:..\FreeRTOS10/queue.c **** 		}
 133              		.loc 1 2270 0
 134 0012 0024     		movs	r4, #0
 135              	.LVL16:
 136              	.L8:
2273:..\FreeRTOS10/queue.c **** 
 137              		.loc 1 2273 0
 138 0014 FFF7FEFF 		bl	vPortExitCritical
 139              	.LVL17:
2276:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 140              		.loc 1 2276 0
 141 0018 2000     		movs	r0, r4
 142              		@ sp needed
 143              	.LVL18:
 144 001a 10BD     		pop	{r4, pc}
 145              		.cfi_endproc
 146              	.LFE56:
 147              		.size	prvIsQueueEmpty, .-prvIsQueueEmpty
 148              		.section	.text.prvCopyDataToQueue,"ax",%progbits
 149              		.align	2
 150              		.code	16
 151              		.thumb_func
 152              		.type	prvCopyDataToQueue, %function
 153              	prvCopyDataToQueue:
 154              	.LFB53:
2042:..\FreeRTOS10/queue.c **** BaseType_t xReturn = pdFALSE;
 155              		.loc 1 2042 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              	.LVL19:
 160 0000 70B5     		push	{r4, r5, r6, lr}
 161              		.cfi_def_cfa_offset 16
 162              		.cfi_offset 4, -16
 163              		.cfi_offset 5, -12
 164              		.cfi_offset 6, -8
 165              		.cfi_offset 14, -4
 166 0002 0400     		movs	r4, r0
 167 0004 1600     		movs	r6, r2
 168              	.LVL20:
2048:..\FreeRTOS10/queue.c **** 
 169              		.loc 1 2048 0
 170 0006 856B     		ldr	r5, [r0, #56]
 171              	.LVL21:
2050:..\FreeRTOS10/queue.c **** 	{
 172              		.loc 1 2050 0
 173 0008 026C     		ldr	r2, [r0, #64]
 174              	.LVL22:
 175 000a 002A     		cmp	r2, #0
 176 000c 08D1     		bne	.L11
2054:..\FreeRTOS10/queue.c **** 			{
 177              		.loc 1 2054 0
 178 000e 0368     		ldr	r3, [r0]
 179 0010 002B     		cmp	r3, #0
 180 0012 2CD1     		bne	.L15
2057:..\FreeRTOS10/queue.c **** 				pxQueue->pxMutexHolder = NULL;
 181              		.loc 1 2057 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 45


 182 0014 4068     		ldr	r0, [r0, #4]
 183              	.LVL23:
 184 0016 FFF7FEFF 		bl	xTaskPriorityDisinherit
 185              	.LVL24:
2058:..\FreeRTOS10/queue.c **** 			}
 186              		.loc 1 2058 0
 187 001a 0023     		movs	r3, #0
 188 001c 6360     		str	r3, [r4, #4]
 189 001e 2DE0     		b	.L12
 190              	.LVL25:
 191              	.L11:
2067:..\FreeRTOS10/queue.c **** 	{
 192              		.loc 1 2067 0
 193 0020 002E     		cmp	r6, #0
 194 0022 0ED1     		bne	.L13
2069:..\FreeRTOS10/queue.c **** 		pxQueue->pcWriteTo += pxQueue->uxItemSize;
 195              		.loc 1 2069 0
 196 0024 8068     		ldr	r0, [r0, #8]
 197              	.LVL26:
 198 0026 FFF7FEFF 		bl	memcpy
 199              	.LVL27:
2070:..\FreeRTOS10/queue.c **** 		if( pxQueue->pcWriteTo >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as comparison 
 200              		.loc 1 2070 0
 201 002a A368     		ldr	r3, [r4, #8]
 202 002c 226C     		ldr	r2, [r4, #64]
 203 002e 9446     		mov	ip, r2
 204 0030 6344     		add	r3, r3, ip
 205 0032 A360     		str	r3, [r4, #8]
2071:..\FreeRTOS10/queue.c **** 		{
 206              		.loc 1 2071 0
 207 0034 6268     		ldr	r2, [r4, #4]
 208 0036 9342     		cmp	r3, r2
 209 0038 1BD3     		bcc	.L16
2073:..\FreeRTOS10/queue.c **** 		}
 210              		.loc 1 2073 0
 211 003a 2368     		ldr	r3, [r4]
 212 003c A360     		str	r3, [r4, #8]
2043:..\FreeRTOS10/queue.c **** UBaseType_t uxMessagesWaiting;
 213              		.loc 1 2043 0
 214 003e 0020     		movs	r0, #0
 215 0040 1CE0     		b	.L12
 216              	.LVL28:
 217              	.L13:
2082:..\FreeRTOS10/queue.c **** 		pxQueue->u.pcReadFrom -= pxQueue->uxItemSize;
 218              		.loc 1 2082 0
 219 0042 C068     		ldr	r0, [r0, #12]
 220              	.LVL29:
 221 0044 FFF7FEFF 		bl	memcpy
 222              	.LVL30:
2083:..\FreeRTOS10/queue.c **** 		if( pxQueue->u.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as compariso
 223              		.loc 1 2083 0
 224 0048 236C     		ldr	r3, [r4, #64]
 225 004a 5B42     		rsbs	r3, r3, #0
 226 004c E268     		ldr	r2, [r4, #12]
 227 004e D218     		adds	r2, r2, r3
 228 0050 E260     		str	r2, [r4, #12]
2084:..\FreeRTOS10/queue.c **** 		{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 46


 229              		.loc 1 2084 0
 230 0052 2168     		ldr	r1, [r4]
 231 0054 8A42     		cmp	r2, r1
 232 0056 03D2     		bcs	.L14
2086:..\FreeRTOS10/queue.c **** 		}
 233              		.loc 1 2086 0
 234 0058 6268     		ldr	r2, [r4, #4]
 235 005a 9446     		mov	ip, r2
 236 005c 6344     		add	r3, r3, ip
 237 005e E360     		str	r3, [r4, #12]
 238              	.L14:
2093:..\FreeRTOS10/queue.c **** 		{
 239              		.loc 1 2093 0
 240 0060 022E     		cmp	r6, #2
 241 0062 08D1     		bne	.L17
2095:..\FreeRTOS10/queue.c **** 			{
 242              		.loc 1 2095 0
 243 0064 002D     		cmp	r5, #0
 244 0066 08D0     		beq	.L18
2101:..\FreeRTOS10/queue.c **** 			}
 245              		.loc 1 2101 0
 246 0068 013D     		subs	r5, r5, #1
 247              	.LVL31:
2043:..\FreeRTOS10/queue.c **** UBaseType_t uxMessagesWaiting;
 248              		.loc 1 2043 0
 249 006a 0020     		movs	r0, #0
 250 006c 06E0     		b	.L12
 251              	.LVL32:
 252              	.L15:
 253 006e 0020     		movs	r0, #0
 254              	.LVL33:
 255 0070 04E0     		b	.L12
 256              	.LVL34:
 257              	.L16:
 258 0072 0020     		movs	r0, #0
 259 0074 02E0     		b	.L12
 260              	.L17:
 261 0076 0020     		movs	r0, #0
 262 0078 00E0     		b	.L12
 263              	.L18:
 264 007a 0020     		movs	r0, #0
 265              	.LVL35:
 266              	.L12:
2114:..\FreeRTOS10/queue.c **** 
 267              		.loc 1 2114 0
 268 007c 0135     		adds	r5, r5, #1
 269              	.LVL36:
 270 007e A563     		str	r5, [r4, #56]
2117:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 271              		.loc 1 2117 0
 272              		@ sp needed
 273              	.LVL37:
 274              	.LVL38:
 275              	.LVL39:
 276 0080 70BD     		pop	{r4, r5, r6, pc}
 277              		.cfi_endproc
 278              	.LFE53:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 47


 279              		.size	prvCopyDataToQueue, .-prvCopyDataToQueue
 280 0082 C046     		.section	.text.prvCopyDataFromQueue,"ax",%progbits
 281              		.align	2
 282              		.code	16
 283              		.thumb_func
 284              		.type	prvCopyDataFromQueue, %function
 285              	prvCopyDataFromQueue:
 286              	.LFB54:
2121:..\FreeRTOS10/queue.c **** 	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 287              		.loc 1 2121 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              	.LVL40:
 292 0000 10B5     		push	{r4, lr}
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 4, -8
 295              		.cfi_offset 14, -4
 296 0002 0C00     		movs	r4, r1
2122:..\FreeRTOS10/queue.c **** 	{
 297              		.loc 1 2122 0
 298 0004 026C     		ldr	r2, [r0, #64]
 299 0006 002A     		cmp	r2, #0
 300 0008 0BD0     		beq	.L19
2124:..\FreeRTOS10/queue.c **** 		if( pxQueue->u.pcReadFrom >= pxQueue->pcTail ) /*lint !e946 MISRA exception justified as use of t
 301              		.loc 1 2124 0
 302 000a C368     		ldr	r3, [r0, #12]
 303 000c 9B18     		adds	r3, r3, r2
 304 000e C360     		str	r3, [r0, #12]
2125:..\FreeRTOS10/queue.c **** 		{
 305              		.loc 1 2125 0
 306 0010 4168     		ldr	r1, [r0, #4]
 307              	.LVL41:
 308 0012 8B42     		cmp	r3, r1
 309 0014 01D3     		bcc	.L21
2127:..\FreeRTOS10/queue.c **** 		}
 310              		.loc 1 2127 0
 311 0016 0368     		ldr	r3, [r0]
 312 0018 C360     		str	r3, [r0, #12]
 313              	.L21:
2133:..\FreeRTOS10/queue.c **** 	}
 314              		.loc 1 2133 0
 315 001a C168     		ldr	r1, [r0, #12]
 316 001c 2000     		movs	r0, r4
 317              	.LVL42:
 318 001e FFF7FEFF 		bl	memcpy
 319              	.LVL43:
 320              	.L19:
2135:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 321              		.loc 1 2135 0
 322              		@ sp needed
 323              	.LVL44:
 324 0022 10BD     		pop	{r4, pc}
 325              		.cfi_endproc
 326              	.LFE54:
 327              		.size	prvCopyDataFromQueue, .-prvCopyDataFromQueue
 328              		.section	.text.prvUnlockQueue,"ax",%progbits
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 48


 329              		.align	2
 330              		.code	16
 331              		.thumb_func
 332              		.type	prvUnlockQueue, %function
 333              	prvUnlockQueue:
 334              	.LFB55:
2139:..\FreeRTOS10/queue.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED. */
 335              		.loc 1 2139 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              	.LVL45:
 340 0000 70B5     		push	{r4, r5, r6, lr}
 341              		.cfi_def_cfa_offset 16
 342              		.cfi_offset 4, -16
 343              		.cfi_offset 5, -12
 344              		.cfi_offset 6, -8
 345              		.cfi_offset 14, -4
 346 0002 0500     		movs	r5, r0
2146:..\FreeRTOS10/queue.c **** 	{
 347              		.loc 1 2146 0
 348 0004 FFF7FEFF 		bl	vPortEnterCritical
 349              	.LVL46:
 350              	.LBB2:
2148:..\FreeRTOS10/queue.c **** 
 351              		.loc 1 2148 0
 352 0008 4523     		movs	r3, #69
 353 000a EC5C     		ldrb	r4, [r5, r3]
 354 000c 64B2     		sxtb	r4, r4
 355              	.LVL47:
2151:..\FreeRTOS10/queue.c **** 		{
 356              		.loc 1 2151 0
 357 000e 0CE0     		b	.L23
 358              	.L26:
2199:..\FreeRTOS10/queue.c **** 				{
 359              		.loc 1 2199 0
 360 0010 6B6A     		ldr	r3, [r5, #36]
 361 0012 002B     		cmp	r3, #0
 362 0014 0BD0     		beq	.L24
2201:..\FreeRTOS10/queue.c **** 					{
 363              		.loc 1 2201 0
 364 0016 2800     		movs	r0, r5
 365 0018 2430     		adds	r0, r0, #36
 366 001a FFF7FEFF 		bl	xTaskRemoveFromEventList
 367              	.LVL48:
 368 001e 0028     		cmp	r0, #0
 369 0020 01D0     		beq	.L25
2205:..\FreeRTOS10/queue.c **** 					}
 370              		.loc 1 2205 0
 371 0022 FFF7FEFF 		bl	vTaskMissedYield
 372              	.LVL49:
 373              	.L25:
2219:..\FreeRTOS10/queue.c **** 		}
 374              		.loc 1 2219 0
 375 0026 013C     		subs	r4, r4, #1
 376              	.LVL50:
 377 0028 64B2     		sxtb	r4, r4
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 49


 378              	.LVL51:
 379              	.L23:
2151:..\FreeRTOS10/queue.c **** 		{
 380              		.loc 1 2151 0
 381 002a 002C     		cmp	r4, #0
 382 002c F0DC     		bgt	.L26
 383              	.L24:
2222:..\FreeRTOS10/queue.c **** 	}
 384              		.loc 1 2222 0
 385 002e FF22     		movs	r2, #255
 386 0030 4523     		movs	r3, #69
 387 0032 EA54     		strb	r2, [r5, r3]
 388              	.LBE2:
2224:..\FreeRTOS10/queue.c **** 
 389              		.loc 1 2224 0
 390 0034 FFF7FEFF 		bl	vPortExitCritical
 391              	.LVL52:
2227:..\FreeRTOS10/queue.c **** 	{
 392              		.loc 1 2227 0
 393 0038 FFF7FEFF 		bl	vPortEnterCritical
 394              	.LVL53:
 395              	.LBB3:
2229:..\FreeRTOS10/queue.c **** 
 396              		.loc 1 2229 0
 397 003c 4423     		movs	r3, #68
 398 003e EC5C     		ldrb	r4, [r5, r3]
 399              	.LVL54:
 400 0040 64B2     		sxtb	r4, r4
 401              	.LVL55:
2231:..\FreeRTOS10/queue.c **** 		{
 402              		.loc 1 2231 0
 403 0042 0CE0     		b	.L27
 404              	.L30:
2233:..\FreeRTOS10/queue.c **** 			{
 405              		.loc 1 2233 0
 406 0044 2B69     		ldr	r3, [r5, #16]
 407 0046 002B     		cmp	r3, #0
 408 0048 0BD0     		beq	.L28
2235:..\FreeRTOS10/queue.c **** 				{
 409              		.loc 1 2235 0
 410 004a 2800     		movs	r0, r5
 411 004c 1030     		adds	r0, r0, #16
 412 004e FFF7FEFF 		bl	xTaskRemoveFromEventList
 413              	.LVL56:
 414 0052 0028     		cmp	r0, #0
 415 0054 01D0     		beq	.L29
2237:..\FreeRTOS10/queue.c **** 				}
 416              		.loc 1 2237 0
 417 0056 FFF7FEFF 		bl	vTaskMissedYield
 418              	.LVL57:
 419              	.L29:
2244:..\FreeRTOS10/queue.c **** 			}
 420              		.loc 1 2244 0
 421 005a 013C     		subs	r4, r4, #1
 422              	.LVL58:
 423 005c 64B2     		sxtb	r4, r4
 424              	.LVL59:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 50


 425              	.L27:
2231:..\FreeRTOS10/queue.c **** 		{
 426              		.loc 1 2231 0
 427 005e 002C     		cmp	r4, #0
 428 0060 F0DC     		bgt	.L30
 429              	.L28:
2252:..\FreeRTOS10/queue.c **** 	}
 430              		.loc 1 2252 0
 431 0062 FF22     		movs	r2, #255
 432 0064 4423     		movs	r3, #68
 433 0066 EA54     		strb	r2, [r5, r3]
 434              	.LBE3:
2254:..\FreeRTOS10/queue.c **** }
 435              		.loc 1 2254 0
 436 0068 FFF7FEFF 		bl	vPortExitCritical
 437              	.LVL60:
2255:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 438              		.loc 1 2255 0
 439              		@ sp needed
 440              	.LVL61:
 441              	.LVL62:
 442 006c 70BD     		pop	{r4, r5, r6, pc}
 443              		.cfi_endproc
 444              	.LFE55:
 445              		.size	prvUnlockQueue, .-prvUnlockQueue
 446 006e C046     		.section	.text.xQueueGenericReset,"ax",%progbits
 447              		.align	2
 448              		.global	xQueueGenericReset
 449              		.code	16
 450              		.thumb_func
 451              		.type	xQueueGenericReset, %function
 452              	xQueueGenericReset:
 453              	.LFB32:
 249:..\FreeRTOS10/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 454              		.loc 1 249 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 0, uses_anonymous_args = 0
 458              	.LVL63:
 459 0000 70B5     		push	{r4, r5, r6, lr}
 460              		.cfi_def_cfa_offset 16
 461              		.cfi_offset 4, -16
 462              		.cfi_offset 5, -12
 463              		.cfi_offset 6, -8
 464              		.cfi_offset 14, -4
 465 0002 0400     		movs	r4, r0
 466 0004 0D00     		movs	r5, r1
 467              	.LVL64:
 254:..\FreeRTOS10/queue.c **** 	{
 468              		.loc 1 254 0
 469 0006 FFF7FEFF 		bl	vPortEnterCritical
 470              	.LVL65:
 256:..\FreeRTOS10/queue.c **** 		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 471              		.loc 1 256 0
 472 000a 2268     		ldr	r2, [r4]
 473 000c E36B     		ldr	r3, [r4, #60]
 474 000e 206C     		ldr	r0, [r4, #64]
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 51


 475 0010 0100     		movs	r1, r0
 476 0012 5943     		muls	r1, r3
 477 0014 5118     		adds	r1, r2, r1
 478 0016 6160     		str	r1, [r4, #4]
 257:..\FreeRTOS10/queue.c **** 		pxQueue->pcWriteTo = pxQueue->pcHead;
 479              		.loc 1 257 0
 480 0018 0021     		movs	r1, #0
 481 001a A163     		str	r1, [r4, #56]
 258:..\FreeRTOS10/queue.c **** 		pxQueue->u.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - ( UBaseType_t ) 1U ) * pxQueue-
 482              		.loc 1 258 0
 483 001c A260     		str	r2, [r4, #8]
 259:..\FreeRTOS10/queue.c **** 		pxQueue->cRxLock = queueUNLOCKED;
 484              		.loc 1 259 0
 485 001e 013B     		subs	r3, r3, #1
 486 0020 4343     		muls	r3, r0
 487 0022 D318     		adds	r3, r2, r3
 488 0024 E360     		str	r3, [r4, #12]
 260:..\FreeRTOS10/queue.c **** 		pxQueue->cTxLock = queueUNLOCKED;
 489              		.loc 1 260 0
 490 0026 FF23     		movs	r3, #255
 491 0028 4422     		movs	r2, #68
 492 002a A354     		strb	r3, [r4, r2]
 261:..\FreeRTOS10/queue.c **** 
 493              		.loc 1 261 0
 494 002c 0132     		adds	r2, r2, #1
 495 002e A354     		strb	r3, [r4, r2]
 263:..\FreeRTOS10/queue.c **** 		{
 496              		.loc 1 263 0
 497 0030 002D     		cmp	r5, #0
 498 0032 0BD1     		bne	.L32
 270:..\FreeRTOS10/queue.c **** 			{
 499              		.loc 1 270 0
 500 0034 2369     		ldr	r3, [r4, #16]
 501 0036 002B     		cmp	r3, #0
 502 0038 10D0     		beq	.L33
 272:..\FreeRTOS10/queue.c **** 				{
 503              		.loc 1 272 0
 504 003a 2000     		movs	r0, r4
 505 003c 1030     		adds	r0, r0, #16
 506 003e FFF7FEFF 		bl	xTaskRemoveFromEventList
 507              	.LVL66:
 508 0042 0028     		cmp	r0, #0
 509 0044 0AD0     		beq	.L33
 274:..\FreeRTOS10/queue.c **** 				}
 510              		.loc 1 274 0
 511 0046 FFF7FEFF 		bl	vPortYield
 512              	.LVL67:
 513 004a 07E0     		b	.L33
 514              	.L32:
 289:..\FreeRTOS10/queue.c **** 			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 515              		.loc 1 289 0
 516 004c 2000     		movs	r0, r4
 517 004e 1030     		adds	r0, r0, #16
 518 0050 FFF7FEFF 		bl	vListInitialise
 519              	.LVL68:
 290:..\FreeRTOS10/queue.c **** 		}
 520              		.loc 1 290 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 52


 521 0054 2000     		movs	r0, r4
 522 0056 2430     		adds	r0, r0, #36
 523 0058 FFF7FEFF 		bl	vListInitialise
 524              	.LVL69:
 525              	.L33:
 293:..\FreeRTOS10/queue.c **** 
 526              		.loc 1 293 0
 527 005c FFF7FEFF 		bl	vPortExitCritical
 528              	.LVL70:
 298:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 529              		.loc 1 298 0
 530 0060 0120     		movs	r0, #1
 531              		@ sp needed
 532              	.LVL71:
 533              	.LVL72:
 534 0062 70BD     		pop	{r4, r5, r6, pc}
 535              		.cfi_endproc
 536              	.LFE32:
 537              		.size	xQueueGenericReset, .-xQueueGenericReset
 538              		.section	.text.prvInitialiseNewQueue,"ax",%progbits
 539              		.align	2
 540              		.code	16
 541              		.thumb_func
 542              		.type	prvInitialiseNewQueue, %function
 543              	prvInitialiseNewQueue:
 544              	.LFB34:
 410:..\FreeRTOS10/queue.c **** 	/* Remove compiler warnings about unused parameters should
 545              		.loc 1 410 0
 546              		.cfi_startproc
 547              		@ args = 4, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              	.LVL73:
 550 0000 10B5     		push	{r4, lr}
 551              		.cfi_def_cfa_offset 8
 552              		.cfi_offset 4, -8
 553              		.cfi_offset 14, -4
 554 0002 029B     		ldr	r3, [sp, #8]
 555              	.LVL74:
 415:..\FreeRTOS10/queue.c **** 	{
 556              		.loc 1 415 0
 557 0004 0029     		cmp	r1, #0
 558 0006 01D1     		bne	.L35
 421:..\FreeRTOS10/queue.c **** 	}
 559              		.loc 1 421 0
 560 0008 1B60     		str	r3, [r3]
 561 000a 00E0     		b	.L36
 562              	.L35:
 426:..\FreeRTOS10/queue.c **** 	}
 563              		.loc 1 426 0
 564 000c 1A60     		str	r2, [r3]
 565              	.L36:
 431:..\FreeRTOS10/queue.c **** 	pxNewQueue->uxItemSize = uxItemSize;
 566              		.loc 1 431 0
 567 000e D863     		str	r0, [r3, #60]
 432:..\FreeRTOS10/queue.c **** 	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 568              		.loc 1 432 0
 569 0010 1964     		str	r1, [r3, #64]
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 53


 433:..\FreeRTOS10/queue.c **** 
 570              		.loc 1 433 0
 571 0012 0121     		movs	r1, #1
 572              	.LVL75:
 573 0014 1800     		movs	r0, r3
 574              	.LVL76:
 575 0016 FFF7FEFF 		bl	xQueueGenericReset
 576              	.LVL77:
 448:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 577              		.loc 1 448 0
 578              		@ sp needed
 579 001a 10BD     		pop	{r4, pc}
 580              		.cfi_endproc
 581              	.LFE34:
 582              		.size	prvInitialiseNewQueue, .-prvInitialiseNewQueue
 583              		.section	.text.xQueueGenericCreate,"ax",%progbits
 584              		.align	2
 585              		.global	xQueueGenericCreate
 586              		.code	16
 587              		.thumb_func
 588              		.type	xQueueGenericCreate, %function
 589              	xQueueGenericCreate:
 590              	.LFB33:
 360:..\FreeRTOS10/queue.c **** 	Queue_t *pxNewQueue;
 591              		.loc 1 360 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              	.LVL78:
 596 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 597              		.cfi_def_cfa_offset 20
 598              		.cfi_offset 4, -20
 599              		.cfi_offset 5, -16
 600              		.cfi_offset 6, -12
 601              		.cfi_offset 7, -8
 602              		.cfi_offset 14, -4
 603 0002 83B0     		sub	sp, sp, #12
 604              		.cfi_def_cfa_offset 32
 605 0004 0500     		movs	r5, r0
 606 0006 0F00     		movs	r7, r1
 607 0008 1600     		movs	r6, r2
 367:..\FreeRTOS10/queue.c **** 		{
 608              		.loc 1 367 0
 609 000a 0029     		cmp	r1, #0
 610 000c 01D0     		beq	.L40
 376:..\FreeRTOS10/queue.c **** 		}
 611              		.loc 1 376 0
 612 000e 4843     		muls	r0, r1
 613              	.LVL79:
 614 0010 00E0     		b	.L38
 615              	.LVL80:
 616              	.L40:
 370:..\FreeRTOS10/queue.c **** 		}
 617              		.loc 1 370 0
 618 0012 0020     		movs	r0, #0
 619              	.LVL81:
 620              	.L38:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 54


 379:..\FreeRTOS10/queue.c **** 
 621              		.loc 1 379 0
 622 0014 4830     		adds	r0, r0, #72
 623              	.LVL82:
 624 0016 FFF7FEFF 		bl	pvPortMalloc
 625              	.LVL83:
 626 001a 041E     		subs	r4, r0, #0
 627              	.LVL84:
 381:..\FreeRTOS10/queue.c **** 		{
 628              		.loc 1 381 0
 629 001c 07D0     		beq	.L39
 385:..\FreeRTOS10/queue.c **** 
 630              		.loc 1 385 0
 631 001e 0200     		movs	r2, r0
 632 0020 4832     		adds	r2, r2, #72
 396:..\FreeRTOS10/queue.c **** 		}
 633              		.loc 1 396 0
 634 0022 0090     		str	r0, [sp]
 635 0024 3300     		movs	r3, r6
 636 0026 3900     		movs	r1, r7
 637 0028 2800     		movs	r0, r5
 638              	.LVL85:
 639 002a FFF7FEFF 		bl	prvInitialiseNewQueue
 640              	.LVL86:
 641              	.L39:
 404:..\FreeRTOS10/queue.c **** 
 642              		.loc 1 404 0
 643 002e 2000     		movs	r0, r4
 644 0030 03B0     		add	sp, sp, #12
 645              		@ sp needed
 646              	.LVL87:
 647              	.LVL88:
 648              	.LVL89:
 649 0032 F0BD     		pop	{r4, r5, r6, r7, pc}
 650              		.cfi_endproc
 651              	.LFE33:
 652              		.size	xQueueGenericCreate, .-xQueueGenericCreate
 653              		.section	.text.xQueueCreateCountingSemaphore,"ax",%progbits
 654              		.align	2
 655              		.global	xQueueCreateCountingSemaphore
 656              		.code	16
 657              		.thumb_func
 658              		.type	xQueueCreateCountingSemaphore, %function
 659              	xQueueCreateCountingSemaphore:
 660              	.LFB39:
 701:..\FreeRTOS10/queue.c **** 	QueueHandle_t xHandle;
 661              		.loc 1 701 0
 662              		.cfi_startproc
 663              		@ args = 0, pretend = 0, frame = 0
 664              		@ frame_needed = 0, uses_anonymous_args = 0
 665              	.LVL90:
 666 0000 10B5     		push	{r4, lr}
 667              		.cfi_def_cfa_offset 8
 668              		.cfi_offset 4, -8
 669              		.cfi_offset 14, -4
 670 0002 0C00     		movs	r4, r1
 707:..\FreeRTOS10/queue.c **** 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 55


 671              		.loc 1 707 0
 672 0004 0222     		movs	r2, #2
 673 0006 0021     		movs	r1, #0
 674              	.LVL91:
 675 0008 FFF7FEFF 		bl	xQueueGenericCreate
 676              	.LVL92:
 709:..\FreeRTOS10/queue.c **** 		{
 677              		.loc 1 709 0
 678 000c 0028     		cmp	r0, #0
 679 000e 00D0     		beq	.L42
 711:..\FreeRTOS10/queue.c **** 
 680              		.loc 1 711 0
 681 0010 8463     		str	r4, [r0, #56]
 682              	.L42:
 721:..\FreeRTOS10/queue.c **** 
 683              		.loc 1 721 0
 684              		@ sp needed
 685              	.LVL93:
 686 0012 10BD     		pop	{r4, pc}
 687              		.cfi_endproc
 688              	.LFE39:
 689              		.size	xQueueCreateCountingSemaphore, .-xQueueCreateCountingSemaphore
 690              		.section	.text.xQueueGenericSend,"ax",%progbits
 691              		.align	2
 692              		.global	xQueueGenericSend
 693              		.code	16
 694              		.thumb_func
 695              		.type	xQueueGenericSend, %function
 696              	xQueueGenericSend:
 697              	.LFB40:
 727:..\FreeRTOS10/queue.c **** BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
 698              		.loc 1 727 0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 16
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702              	.LVL94:
 703 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 704              		.cfi_def_cfa_offset 20
 705              		.cfi_offset 4, -20
 706              		.cfi_offset 5, -16
 707              		.cfi_offset 6, -12
 708              		.cfi_offset 7, -8
 709              		.cfi_offset 14, -4
 710 0002 85B0     		sub	sp, sp, #20
 711              		.cfi_def_cfa_offset 40
 712 0004 0400     		movs	r4, r0
 713 0006 0D00     		movs	r5, r1
 714 0008 0192     		str	r2, [sp, #4]
 715 000a 1F00     		movs	r7, r3
 716              	.LVL95:
 728:..\FreeRTOS10/queue.c **** TimeOut_t xTimeOut;
 717              		.loc 1 728 0
 718 000c 0026     		movs	r6, #0
 719              	.LVL96:
 720              	.L44:
 747:..\FreeRTOS10/queue.c **** 		{
 721              		.loc 1 747 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 56


 722 000e FFF7FEFF 		bl	vPortEnterCritical
 723              	.LVL97:
 753:..\FreeRTOS10/queue.c **** 			{
 724              		.loc 1 753 0
 725 0012 A36B     		ldr	r3, [r4, #56]
 726 0014 E26B     		ldr	r2, [r4, #60]
 727 0016 9342     		cmp	r3, r2
 728 0018 01D3     		bcc	.L45
 753:..\FreeRTOS10/queue.c **** 			{
 729              		.loc 1 753 0 is_stmt 0 discriminator 1
 730 001a 022F     		cmp	r7, #2
 731 001c 18D1     		bne	.L46
 732              	.L45:
 756:..\FreeRTOS10/queue.c **** 
 733              		.loc 1 756 0 is_stmt 1
 734 001e 3A00     		movs	r2, r7
 735 0020 2900     		movs	r1, r5
 736 0022 2000     		movs	r0, r4
 737 0024 FFF7FEFF 		bl	prvCopyDataToQueue
 738              	.LVL98:
 811:..\FreeRTOS10/queue.c **** 					{
 739              		.loc 1 811 0
 740 0028 636A     		ldr	r3, [r4, #36]
 741 002a 002B     		cmp	r3, #0
 742 002c 08D0     		beq	.L47
 813:..\FreeRTOS10/queue.c **** 						{
 743              		.loc 1 813 0
 744 002e 2000     		movs	r0, r4
 745              	.LVL99:
 746 0030 2430     		adds	r0, r0, #36
 747 0032 FFF7FEFF 		bl	xTaskRemoveFromEventList
 748              	.LVL100:
 749 0036 0028     		cmp	r0, #0
 750 0038 06D0     		beq	.L48
 819:..\FreeRTOS10/queue.c **** 						}
 751              		.loc 1 819 0
 752 003a FFF7FEFF 		bl	vPortYield
 753              	.LVL101:
 754 003e 03E0     		b	.L48
 755              	.LVL102:
 756              	.L47:
 826:..\FreeRTOS10/queue.c **** 					{
 757              		.loc 1 826 0
 758 0040 0028     		cmp	r0, #0
 759 0042 01D0     		beq	.L48
 832:..\FreeRTOS10/queue.c **** 					}
 760              		.loc 1 832 0
 761 0044 FFF7FEFF 		bl	vPortYield
 762              	.LVL103:
 763              	.L48:
 841:..\FreeRTOS10/queue.c **** 				return pdPASS;
 764              		.loc 1 841 0
 765 0048 FFF7FEFF 		bl	vPortExitCritical
 766              	.LVL104:
 842:..\FreeRTOS10/queue.c **** 			}
 767              		.loc 1 842 0
 768 004c 0120     		movs	r0, #1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 57


 769 004e 4AE0     		b	.L49
 770              	.L46:
 846:..\FreeRTOS10/queue.c **** 				{
 771              		.loc 1 846 0
 772 0050 019B     		ldr	r3, [sp, #4]
 773 0052 002B     		cmp	r3, #0
 774 0054 03D1     		bne	.L50
 850:..\FreeRTOS10/queue.c **** 
 775              		.loc 1 850 0
 776 0056 FFF7FEFF 		bl	vPortExitCritical
 777              	.LVL105:
 855:..\FreeRTOS10/queue.c **** 				}
 778              		.loc 1 855 0
 779 005a 0020     		movs	r0, #0
 780 005c 43E0     		b	.L49
 781              	.L50:
 857:..\FreeRTOS10/queue.c **** 				{
 782              		.loc 1 857 0
 783 005e 002E     		cmp	r6, #0
 784 0060 03D1     		bne	.L51
 861:..\FreeRTOS10/queue.c **** 					xEntryTimeSet = pdTRUE;
 785              		.loc 1 861 0
 786 0062 02A8     		add	r0, sp, #8
 787 0064 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 788              	.LVL106:
 862:..\FreeRTOS10/queue.c **** 				}
 789              		.loc 1 862 0
 790 0068 0136     		adds	r6, r6, #1
 791              	.LVL107:
 792              	.L51:
 871:..\FreeRTOS10/queue.c **** 
 793              		.loc 1 871 0
 794 006a FFF7FEFF 		bl	vPortExitCritical
 795              	.LVL108:
 876:..\FreeRTOS10/queue.c **** 		prvLockQueue( pxQueue );
 796              		.loc 1 876 0
 797 006e FFF7FEFF 		bl	vTaskSuspendAll
 798              	.LVL109:
 877:..\FreeRTOS10/queue.c **** 
 799              		.loc 1 877 0
 800 0072 FFF7FEFF 		bl	vPortEnterCritical
 801              	.LVL110:
 802 0076 4423     		movs	r3, #68
 803 0078 E35C     		ldrb	r3, [r4, r3]
 804 007a 5BB2     		sxtb	r3, r3
 805 007c 0133     		adds	r3, r3, #1
 806 007e 02D1     		bne	.L52
 877:..\FreeRTOS10/queue.c **** 
 807              		.loc 1 877 0 is_stmt 0 discriminator 1
 808 0080 0022     		movs	r2, #0
 809 0082 4423     		movs	r3, #68
 810 0084 E254     		strb	r2, [r4, r3]
 811              	.L52:
 877:..\FreeRTOS10/queue.c **** 
 812              		.loc 1 877 0 discriminator 3
 813 0086 4523     		movs	r3, #69
 814 0088 E35C     		ldrb	r3, [r4, r3]
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 58


 815 008a 5BB2     		sxtb	r3, r3
 816 008c 0133     		adds	r3, r3, #1
 817 008e 02D1     		bne	.L53
 877:..\FreeRTOS10/queue.c **** 
 818              		.loc 1 877 0 discriminator 4
 819 0090 0022     		movs	r2, #0
 820 0092 4523     		movs	r3, #69
 821 0094 E254     		strb	r2, [r4, r3]
 822              	.L53:
 877:..\FreeRTOS10/queue.c **** 
 823              		.loc 1 877 0 discriminator 6
 824 0096 FFF7FEFF 		bl	vPortExitCritical
 825              	.LVL111:
 880:..\FreeRTOS10/queue.c **** 		{
 826              		.loc 1 880 0 is_stmt 1 discriminator 6
 827 009a 01A9     		add	r1, sp, #4
 828              	.LVL112:
 829 009c 02A8     		add	r0, sp, #8
 830 009e FFF7FEFF 		bl	xTaskCheckForTimeOut
 831              	.LVL113:
 832 00a2 0028     		cmp	r0, #0
 833 00a4 19D1     		bne	.L54
 882:..\FreeRTOS10/queue.c **** 			{
 834              		.loc 1 882 0
 835 00a6 2000     		movs	r0, r4
 836 00a8 FFF7FEFF 		bl	prvIsQueueFull
 837              	.LVL114:
 838 00ac 0028     		cmp	r0, #0
 839 00ae 0ED0     		beq	.L55
 885:..\FreeRTOS10/queue.c **** 
 840              		.loc 1 885 0
 841 00b0 2000     		movs	r0, r4
 842 00b2 1030     		adds	r0, r0, #16
 843 00b4 0199     		ldr	r1, [sp, #4]
 844 00b6 FFF7FEFF 		bl	vTaskPlaceOnEventList
 845              	.LVL115:
 892:..\FreeRTOS10/queue.c **** 
 846              		.loc 1 892 0
 847 00ba 2000     		movs	r0, r4
 848 00bc FFF7FEFF 		bl	prvUnlockQueue
 849              	.LVL116:
 899:..\FreeRTOS10/queue.c **** 				{
 850              		.loc 1 899 0
 851 00c0 FFF7FEFF 		bl	xTaskResumeAll
 852              	.LVL117:
 853 00c4 0028     		cmp	r0, #0
 854 00c6 A2D1     		bne	.L44
 901:..\FreeRTOS10/queue.c **** 				}
 855              		.loc 1 901 0
 856 00c8 FFF7FEFF 		bl	vPortYield
 857              	.LVL118:
 858 00cc 9FE7     		b	.L44
 859              	.L55:
 907:..\FreeRTOS10/queue.c **** 				( void ) xTaskResumeAll();
 860              		.loc 1 907 0
 861 00ce 2000     		movs	r0, r4
 862 00d0 FFF7FEFF 		bl	prvUnlockQueue
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 59


 863              	.LVL119:
 908:..\FreeRTOS10/queue.c **** 			}
 864              		.loc 1 908 0
 865 00d4 FFF7FEFF 		bl	xTaskResumeAll
 866              	.LVL120:
 867 00d8 99E7     		b	.L44
 868              	.L54:
 914:..\FreeRTOS10/queue.c **** 			( void ) xTaskResumeAll();
 869              		.loc 1 914 0
 870 00da 2000     		movs	r0, r4
 871 00dc FFF7FEFF 		bl	prvUnlockQueue
 872              	.LVL121:
 915:..\FreeRTOS10/queue.c **** 
 873              		.loc 1 915 0
 874 00e0 FFF7FEFF 		bl	xTaskResumeAll
 875              	.LVL122:
 918:..\FreeRTOS10/queue.c **** 		}
 876              		.loc 1 918 0
 877 00e4 0020     		movs	r0, #0
 878              	.L49:
 921:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 879              		.loc 1 921 0
 880 00e6 05B0     		add	sp, sp, #20
 881              		@ sp needed
 882              	.LVL123:
 883              	.LVL124:
 884              	.LVL125:
 885              	.LVL126:
 886 00e8 F0BD     		pop	{r4, r5, r6, r7, pc}
 887              		.cfi_endproc
 888              	.LFE40:
 889              		.size	xQueueGenericSend, .-xQueueGenericSend
 890 00ea C046     		.section	.text.prvInitialiseMutex,"ax",%progbits
 891              		.align	2
 892              		.code	16
 893              		.thumb_func
 894              		.type	prvInitialiseMutex, %function
 895              	prvInitialiseMutex:
 896              	.LFB35:
 454:..\FreeRTOS10/queue.c **** 		if( pxNewQueue != NULL )
 897              		.loc 1 454 0
 898              		.cfi_startproc
 899              		@ args = 0, pretend = 0, frame = 0
 900              		@ frame_needed = 0, uses_anonymous_args = 0
 901              	.LVL127:
 902 0000 10B5     		push	{r4, lr}
 903              		.cfi_def_cfa_offset 8
 904              		.cfi_offset 4, -8
 905              		.cfi_offset 14, -4
 455:..\FreeRTOS10/queue.c **** 		{
 906              		.loc 1 455 0
 907 0002 0028     		cmp	r0, #0
 908 0004 07D0     		beq	.L57
 461:..\FreeRTOS10/queue.c **** 			pxNewQueue->uxQueueType = queueQUEUE_IS_MUTEX;
 909              		.loc 1 461 0
 910 0006 0023     		movs	r3, #0
 911 0008 4360     		str	r3, [r0, #4]
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 60


 462:..\FreeRTOS10/queue.c **** 
 912              		.loc 1 462 0
 913 000a 0360     		str	r3, [r0]
 465:..\FreeRTOS10/queue.c **** 
 914              		.loc 1 465 0
 915 000c C360     		str	r3, [r0, #12]
 470:..\FreeRTOS10/queue.c **** 		}
 916              		.loc 1 470 0
 917 000e 0022     		movs	r2, #0
 918 0010 0021     		movs	r1, #0
 919 0012 FFF7FEFF 		bl	xQueueGenericSend
 920              	.LVL128:
 921              	.L57:
 476:..\FreeRTOS10/queue.c **** 
 922              		.loc 1 476 0
 923              		@ sp needed
 924 0016 10BD     		pop	{r4, pc}
 925              		.cfi_endproc
 926              	.LFE35:
 927              		.size	prvInitialiseMutex, .-prvInitialiseMutex
 928              		.section	.text.xQueueCreateMutex,"ax",%progbits
 929              		.align	2
 930              		.global	xQueueCreateMutex
 931              		.code	16
 932              		.thumb_func
 933              		.type	xQueueCreateMutex, %function
 934              	xQueueCreateMutex:
 935              	.LFB36:
 484:..\FreeRTOS10/queue.c **** 	Queue_t *pxNewQueue;
 936              		.loc 1 484 0
 937              		.cfi_startproc
 938              		@ args = 0, pretend = 0, frame = 0
 939              		@ frame_needed = 0, uses_anonymous_args = 0
 940              	.LVL129:
 941 0000 10B5     		push	{r4, lr}
 942              		.cfi_def_cfa_offset 8
 943              		.cfi_offset 4, -8
 944              		.cfi_offset 14, -4
 945 0002 0200     		movs	r2, r0
 946              	.LVL130:
 488:..\FreeRTOS10/queue.c **** 		prvInitialiseMutex( pxNewQueue );
 947              		.loc 1 488 0
 948 0004 0021     		movs	r1, #0
 949 0006 0120     		movs	r0, #1
 950              	.LVL131:
 951 0008 FFF7FEFF 		bl	xQueueGenericCreate
 952              	.LVL132:
 953 000c 0400     		movs	r4, r0
 954              	.LVL133:
 489:..\FreeRTOS10/queue.c **** 
 955              		.loc 1 489 0
 956 000e FFF7FEFF 		bl	prvInitialiseMutex
 957              	.LVL134:
 492:..\FreeRTOS10/queue.c **** 
 958              		.loc 1 492 0
 959 0012 2000     		movs	r0, r4
 960              		@ sp needed
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 61


 961              	.LVL135:
 962 0014 10BD     		pop	{r4, pc}
 963              		.cfi_endproc
 964              	.LFE36:
 965              		.size	xQueueCreateMutex, .-xQueueCreateMutex
 966 0016 C046     		.section	.text.xQueueGiveMutexRecursive,"ax",%progbits
 967              		.align	2
 968              		.global	xQueueGiveMutexRecursive
 969              		.code	16
 970              		.thumb_func
 971              		.type	xQueueGiveMutexRecursive, %function
 972              	xQueueGiveMutexRecursive:
 973              	.LFB37:
 576:..\FreeRTOS10/queue.c **** 	BaseType_t xReturn;
 974              		.loc 1 576 0
 975              		.cfi_startproc
 976              		@ args = 0, pretend = 0, frame = 0
 977              		@ frame_needed = 0, uses_anonymous_args = 0
 978              	.LVL136:
 979 0000 70B5     		push	{r4, r5, r6, lr}
 980              		.cfi_def_cfa_offset 16
 981              		.cfi_offset 4, -16
 982              		.cfi_offset 5, -12
 983              		.cfi_offset 6, -8
 984              		.cfi_offset 14, -4
 985 0002 0400     		movs	r4, r0
 986              	.LVL137:
 588:..\FreeRTOS10/queue.c **** 		{
 987              		.loc 1 588 0
 988 0004 4568     		ldr	r5, [r0, #4]
 989 0006 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 990              	.LVL138:
 991 000a 8542     		cmp	r5, r0
 992 000c 0BD1     		bne	.L62
 597:..\FreeRTOS10/queue.c **** 
 993              		.loc 1 597 0
 994 000e E368     		ldr	r3, [r4, #12]
 995 0010 013B     		subs	r3, r3, #1
 996 0012 E360     		str	r3, [r4, #12]
 600:..\FreeRTOS10/queue.c **** 			{
 997              		.loc 1 600 0
 998 0014 002B     		cmp	r3, #0
 999 0016 08D1     		bne	.L63
 604:..\FreeRTOS10/queue.c **** 			}
 1000              		.loc 1 604 0
 1001 0018 0022     		movs	r2, #0
 1002 001a 0021     		movs	r1, #0
 1003 001c 2000     		movs	r0, r4
 1004 001e FFF7FEFF 		bl	xQueueGenericSend
 1005              	.LVL139:
 611:..\FreeRTOS10/queue.c **** 		}
 1006              		.loc 1 611 0
 1007 0022 0120     		movs	r0, #1
 1008 0024 02E0     		b	.L61
 1009              	.L62:
 617:..\FreeRTOS10/queue.c **** 
 1010              		.loc 1 617 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 62


 1011 0026 0020     		movs	r0, #0
 1012 0028 00E0     		b	.L61
 1013              	.L63:
 611:..\FreeRTOS10/queue.c **** 		}
 1014              		.loc 1 611 0
 1015 002a 0120     		movs	r0, #1
 1016              	.L61:
 1017              	.LVL140:
 623:..\FreeRTOS10/queue.c **** 
 1018              		.loc 1 623 0
 1019              		@ sp needed
 1020              	.LVL141:
 1021 002c 70BD     		pop	{r4, r5, r6, pc}
 1022              		.cfi_endproc
 1023              	.LFE37:
 1024              		.size	xQueueGiveMutexRecursive, .-xQueueGiveMutexRecursive
 1025 002e C046     		.section	.text.xQueueGenericSendFromISR,"ax",%progbits
 1026              		.align	2
 1027              		.global	xQueueGenericSendFromISR
 1028              		.code	16
 1029              		.thumb_func
 1030              		.type	xQueueGenericSendFromISR, %function
 1031              	xQueueGenericSendFromISR:
 1032              	.LFB41:
 925:..\FreeRTOS10/queue.c **** BaseType_t xReturn;
 1033              		.loc 1 925 0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 8
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
 1037              	.LVL142:
 1038 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1039              		.cfi_def_cfa_offset 20
 1040              		.cfi_offset 4, -20
 1041              		.cfi_offset 5, -16
 1042              		.cfi_offset 6, -12
 1043              		.cfi_offset 7, -8
 1044              		.cfi_offset 14, -4
 1045 0002 83B0     		sub	sp, sp, #12
 1046              		.cfi_def_cfa_offset 32
 1047 0004 0600     		movs	r6, r0
 1048 0006 0091     		str	r1, [sp]
 1049 0008 0192     		str	r2, [sp, #4]
 1050 000a 1C00     		movs	r4, r3
 1051              	.LVL143:
 955:..\FreeRTOS10/queue.c **** 	{
 1052              		.loc 1 955 0
 1053 000c FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1054              	.LVL144:
 1055 0010 0500     		movs	r5, r0
 1056              	.LVL145:
 957:..\FreeRTOS10/queue.c **** 		{
 1057              		.loc 1 957 0
 1058 0012 B36B     		ldr	r3, [r6, #56]
 1059 0014 F26B     		ldr	r2, [r6, #60]
 1060 0016 9342     		cmp	r3, r2
 1061 0018 01D3     		bcc	.L65
 957:..\FreeRTOS10/queue.c **** 		{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 63


 1062              		.loc 1 957 0 is_stmt 0 discriminator 1
 1063 001a 022C     		cmp	r4, #2
 1064 001c 1FD1     		bne	.L68
 1065              	.L65:
 1066              	.LBB4:
 959:..\FreeRTOS10/queue.c **** 
 1067              		.loc 1 959 0 is_stmt 1
 1068 001e 4523     		movs	r3, #69
 1069 0020 F35C     		ldrb	r3, [r6, r3]
 1070 0022 5FB2     		sxtb	r7, r3
 1071              	.LVL146:
 968:..\FreeRTOS10/queue.c **** 
 1072              		.loc 1 968 0
 1073 0024 2200     		movs	r2, r4
 1074 0026 0099     		ldr	r1, [sp]
 1075 0028 3000     		movs	r0, r6
 1076              	.LVL147:
 1077 002a FFF7FEFF 		bl	prvCopyDataToQueue
 1078              	.LVL148:
 972:..\FreeRTOS10/queue.c **** 			{
 1079              		.loc 1 972 0
 1080 002e 7B1C     		adds	r3, r7, #1
 1081 0030 0FD1     		bne	.L67
1027:..\FreeRTOS10/queue.c **** 					{
 1082              		.loc 1 1027 0
 1083 0032 736A     		ldr	r3, [r6, #36]
 1084 0034 002B     		cmp	r3, #0
 1085 0036 14D0     		beq	.L69
1029:..\FreeRTOS10/queue.c **** 						{
 1086              		.loc 1 1029 0
 1087 0038 3000     		movs	r0, r6
 1088 003a 2430     		adds	r0, r0, #36
 1089 003c FFF7FEFF 		bl	xTaskRemoveFromEventList
 1090              	.LVL149:
 1091 0040 0028     		cmp	r0, #0
 1092 0042 10D0     		beq	.L70
1033:..\FreeRTOS10/queue.c **** 							{
 1093              		.loc 1 1033 0
 1094 0044 019A     		ldr	r2, [sp, #4]
 1095 0046 002A     		cmp	r2, #0
 1096 0048 0FD0     		beq	.L71
1035:..\FreeRTOS10/queue.c **** 							}
 1097              		.loc 1 1035 0
 1098 004a 0123     		movs	r3, #1
 1099 004c 1360     		str	r3, [r2]
1061:..\FreeRTOS10/queue.c **** 		}
 1100              		.loc 1 1061 0
 1101 004e 0124     		movs	r4, #1
 1102              	.LVL150:
 1103 0050 0CE0     		b	.L66
 1104              	.LVL151:
 1105              	.L67:
1058:..\FreeRTOS10/queue.c **** 			}
 1106              		.loc 1 1058 0
 1107 0052 7B1C     		adds	r3, r7, #1
 1108 0054 5BB2     		sxtb	r3, r3
 1109 0056 4522     		movs	r2, #69
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 64


 1110 0058 B354     		strb	r3, [r6, r2]
1061:..\FreeRTOS10/queue.c **** 		}
 1111              		.loc 1 1061 0
 1112 005a 0124     		movs	r4, #1
 1113              	.LVL152:
 1114 005c 06E0     		b	.L66
 1115              	.LVL153:
 1116              	.L68:
 1117              	.LBE4:
1066:..\FreeRTOS10/queue.c **** 		}
 1118              		.loc 1 1066 0
 1119 005e 0024     		movs	r4, #0
 1120              	.LVL154:
 1121 0060 04E0     		b	.L66
 1122              	.LVL155:
 1123              	.L69:
 1124              	.LBB5:
1061:..\FreeRTOS10/queue.c **** 		}
 1125              		.loc 1 1061 0
 1126 0062 0124     		movs	r4, #1
 1127              	.LVL156:
 1128 0064 02E0     		b	.L66
 1129              	.LVL157:
 1130              	.L70:
 1131 0066 0124     		movs	r4, #1
 1132              	.LVL158:
 1133 0068 00E0     		b	.L66
 1134              	.LVL159:
 1135              	.L71:
 1136 006a 0124     		movs	r4, #1
 1137              	.LVL160:
 1138              	.L66:
 1139              	.LBE5:
1069:..\FreeRTOS10/queue.c **** 
 1140              		.loc 1 1069 0
 1141 006c 2800     		movs	r0, r5
 1142 006e FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1143              	.LVL161:
1072:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 1144              		.loc 1 1072 0
 1145 0072 2000     		movs	r0, r4
 1146 0074 03B0     		add	sp, sp, #12
 1147              	.LVL162:
 1148              		@ sp needed
 1149              	.LVL163:
 1150              	.LVL164:
 1151              	.LVL165:
 1152 0076 F0BD     		pop	{r4, r5, r6, r7, pc}
 1153              		.cfi_endproc
 1154              	.LFE41:
 1155              		.size	xQueueGenericSendFromISR, .-xQueueGenericSendFromISR
 1156              		.section	.text.xQueueGiveFromISR,"ax",%progbits
 1157              		.align	2
 1158              		.global	xQueueGiveFromISR
 1159              		.code	16
 1160              		.thumb_func
 1161              		.type	xQueueGiveFromISR, %function
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 65


 1162              	xQueueGiveFromISR:
 1163              	.LFB42:
1076:..\FreeRTOS10/queue.c **** BaseType_t xReturn;
 1164              		.loc 1 1076 0
 1165              		.cfi_startproc
 1166              		@ args = 0, pretend = 0, frame = 0
 1167              		@ frame_needed = 0, uses_anonymous_args = 0
 1168              	.LVL166:
 1169 0000 70B5     		push	{r4, r5, r6, lr}
 1170              		.cfi_def_cfa_offset 16
 1171              		.cfi_offset 4, -16
 1172              		.cfi_offset 5, -12
 1173              		.cfi_offset 6, -8
 1174              		.cfi_offset 14, -4
 1175 0002 0400     		movs	r4, r0
 1176 0004 0E00     		movs	r6, r1
 1177              	.LVL167:
1114:..\FreeRTOS10/queue.c **** 	{
 1178              		.loc 1 1114 0
 1179 0006 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1180              	.LVL168:
 1181 000a 0500     		movs	r5, r0
 1182              	.LVL169:
 1183              	.LBB6:
1116:..\FreeRTOS10/queue.c **** 
 1184              		.loc 1 1116 0
 1185 000c A26B     		ldr	r2, [r4, #56]
 1186              	.LVL170:
1121:..\FreeRTOS10/queue.c **** 		{
 1187              		.loc 1 1121 0
 1188 000e E36B     		ldr	r3, [r4, #60]
 1189 0010 9A42     		cmp	r2, r3
 1190 0012 1BD2     		bcs	.L75
 1191              	.LBB7:
1123:..\FreeRTOS10/queue.c **** 
 1192              		.loc 1 1123 0
 1193 0014 4523     		movs	r3, #69
 1194 0016 E35C     		ldrb	r3, [r4, r3]
 1195 0018 5BB2     		sxtb	r3, r3
 1196              	.LVL171:
1133:..\FreeRTOS10/queue.c **** 
 1197              		.loc 1 1133 0
 1198 001a 0132     		adds	r2, r2, #1
 1199              	.LVL172:
 1200 001c A263     		str	r2, [r4, #56]
1137:..\FreeRTOS10/queue.c **** 			{
 1201              		.loc 1 1137 0
 1202 001e 5A1C     		adds	r2, r3, #1
 1203 0020 0ED1     		bne	.L74
 1204              	.LVL173:
1192:..\FreeRTOS10/queue.c **** 					{
 1205              		.loc 1 1192 0
 1206 0022 636A     		ldr	r3, [r4, #36]
 1207              	.LVL174:
 1208 0024 002B     		cmp	r3, #0
 1209 0026 13D0     		beq	.L76
1194:..\FreeRTOS10/queue.c **** 						{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 66


 1210              		.loc 1 1194 0
 1211 0028 2000     		movs	r0, r4
 1212              	.LVL175:
 1213 002a 2430     		adds	r0, r0, #36
 1214 002c FFF7FEFF 		bl	xTaskRemoveFromEventList
 1215              	.LVL176:
 1216 0030 0028     		cmp	r0, #0
 1217 0032 0FD0     		beq	.L77
1198:..\FreeRTOS10/queue.c **** 							{
 1218              		.loc 1 1198 0
 1219 0034 002E     		cmp	r6, #0
 1220 0036 0FD0     		beq	.L78
1200:..\FreeRTOS10/queue.c **** 							}
 1221              		.loc 1 1200 0
 1222 0038 0123     		movs	r3, #1
 1223 003a 3360     		str	r3, [r6]
1226:..\FreeRTOS10/queue.c **** 		}
 1224              		.loc 1 1226 0
 1225 003c 0124     		movs	r4, #1
 1226              	.LVL177:
 1227 003e 0CE0     		b	.L73
 1228              	.LVL178:
 1229              	.L74:
1223:..\FreeRTOS10/queue.c **** 			}
 1230              		.loc 1 1223 0
 1231 0040 0133     		adds	r3, r3, #1
 1232              	.LVL179:
 1233 0042 5BB2     		sxtb	r3, r3
 1234              	.LVL180:
 1235 0044 4522     		movs	r2, #69
 1236 0046 A354     		strb	r3, [r4, r2]
 1237              	.LVL181:
1226:..\FreeRTOS10/queue.c **** 		}
 1238              		.loc 1 1226 0
 1239 0048 0124     		movs	r4, #1
 1240              	.LVL182:
 1241 004a 06E0     		b	.L73
 1242              	.LVL183:
 1243              	.L75:
 1244              	.LBE7:
1231:..\FreeRTOS10/queue.c **** 		}
 1245              		.loc 1 1231 0
 1246 004c 0024     		movs	r4, #0
 1247              	.LVL184:
 1248 004e 04E0     		b	.L73
 1249              	.LVL185:
 1250              	.L76:
 1251              	.LBB8:
1226:..\FreeRTOS10/queue.c **** 		}
 1252              		.loc 1 1226 0
 1253 0050 0124     		movs	r4, #1
 1254              	.LVL186:
 1255 0052 02E0     		b	.L73
 1256              	.LVL187:
 1257              	.L77:
 1258 0054 0124     		movs	r4, #1
 1259              	.LVL188:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 67


 1260 0056 00E0     		b	.L73
 1261              	.LVL189:
 1262              	.L78:
 1263 0058 0124     		movs	r4, #1
 1264              	.LVL190:
 1265              	.L73:
 1266              	.LBE8:
 1267              	.LBE6:
1234:..\FreeRTOS10/queue.c **** 
 1268              		.loc 1 1234 0
 1269 005a 2800     		movs	r0, r5
 1270 005c FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1271              	.LVL191:
1237:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 1272              		.loc 1 1237 0
 1273 0060 2000     		movs	r0, r4
 1274              		@ sp needed
 1275              	.LVL192:
 1276              	.LVL193:
 1277              	.LVL194:
 1278 0062 70BD     		pop	{r4, r5, r6, pc}
 1279              		.cfi_endproc
 1280              	.LFE42:
 1281              		.size	xQueueGiveFromISR, .-xQueueGiveFromISR
 1282              		.section	.text.xQueueReceive,"ax",%progbits
 1283              		.align	2
 1284              		.global	xQueueReceive
 1285              		.code	16
 1286              		.thumb_func
 1287              		.type	xQueueReceive, %function
 1288              	xQueueReceive:
 1289              	.LFB43:
1241:..\FreeRTOS10/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1290              		.loc 1 1241 0
 1291              		.cfi_startproc
 1292              		@ args = 0, pretend = 0, frame = 16
 1293              		@ frame_needed = 0, uses_anonymous_args = 0
 1294              	.LVL195:
 1295 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1296              		.cfi_def_cfa_offset 20
 1297              		.cfi_offset 4, -20
 1298              		.cfi_offset 5, -16
 1299              		.cfi_offset 6, -12
 1300              		.cfi_offset 7, -8
 1301              		.cfi_offset 14, -4
 1302 0002 85B0     		sub	sp, sp, #20
 1303              		.cfi_def_cfa_offset 40
 1304 0004 0400     		movs	r4, r0
 1305 0006 0D00     		movs	r5, r1
 1306 0008 0192     		str	r2, [sp, #4]
 1307              	.LVL196:
1242:..\FreeRTOS10/queue.c **** TimeOut_t xTimeOut;
 1308              		.loc 1 1242 0
 1309 000a 0027     		movs	r7, #0
 1310              	.LVL197:
 1311              	.L80:
1267:..\FreeRTOS10/queue.c **** 		{
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 68


 1312              		.loc 1 1267 0
 1313 000c FFF7FEFF 		bl	vPortEnterCritical
 1314              	.LVL198:
 1315              	.LBB9:
1269:..\FreeRTOS10/queue.c **** 
 1316              		.loc 1 1269 0
 1317 0010 A66B     		ldr	r6, [r4, #56]
 1318              	.LVL199:
1273:..\FreeRTOS10/queue.c **** 			{
 1319              		.loc 1 1273 0
 1320 0012 002E     		cmp	r6, #0
 1321 0014 14D0     		beq	.L81
1276:..\FreeRTOS10/queue.c **** 				traceQUEUE_RECEIVE( pxQueue );
 1322              		.loc 1 1276 0
 1323 0016 2900     		movs	r1, r5
 1324 0018 2000     		movs	r0, r4
 1325 001a FFF7FEFF 		bl	prvCopyDataFromQueue
 1326              	.LVL200:
1278:..\FreeRTOS10/queue.c **** 
 1327              		.loc 1 1278 0
 1328 001e 013E     		subs	r6, r6, #1
 1329              	.LVL201:
 1330 0020 A663     		str	r6, [r4, #56]
1283:..\FreeRTOS10/queue.c **** 				{
 1331              		.loc 1 1283 0
 1332 0022 2369     		ldr	r3, [r4, #16]
 1333 0024 002B     		cmp	r3, #0
 1334 0026 07D0     		beq	.L82
1285:..\FreeRTOS10/queue.c **** 					{
 1335              		.loc 1 1285 0
 1336 0028 2000     		movs	r0, r4
 1337 002a 1030     		adds	r0, r0, #16
 1338 002c FFF7FEFF 		bl	xTaskRemoveFromEventList
 1339              	.LVL202:
 1340 0030 0028     		cmp	r0, #0
 1341 0032 01D0     		beq	.L82
1287:..\FreeRTOS10/queue.c **** 					}
 1342              		.loc 1 1287 0
 1343 0034 FFF7FEFF 		bl	vPortYield
 1344              	.LVL203:
 1345              	.L82:
1299:..\FreeRTOS10/queue.c **** 				return pdPASS;
 1346              		.loc 1 1299 0
 1347 0038 FFF7FEFF 		bl	vPortExitCritical
 1348              	.LVL204:
1300:..\FreeRTOS10/queue.c **** 			}
 1349              		.loc 1 1300 0
 1350 003c 0120     		movs	r0, #1
 1351 003e 4FE0     		b	.L83
 1352              	.LVL205:
 1353              	.L81:
1304:..\FreeRTOS10/queue.c **** 				{
 1354              		.loc 1 1304 0
 1355 0040 019B     		ldr	r3, [sp, #4]
 1356 0042 002B     		cmp	r3, #0
 1357 0044 03D1     		bne	.L84
1308:..\FreeRTOS10/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 69


 1358              		.loc 1 1308 0
 1359 0046 FFF7FEFF 		bl	vPortExitCritical
 1360              	.LVL206:
1310:..\FreeRTOS10/queue.c **** 				}
 1361              		.loc 1 1310 0
 1362 004a 0020     		movs	r0, #0
 1363 004c 48E0     		b	.L83
 1364              	.L84:
1312:..\FreeRTOS10/queue.c **** 				{
 1365              		.loc 1 1312 0
 1366 004e 002F     		cmp	r7, #0
 1367 0050 03D1     		bne	.L85
1316:..\FreeRTOS10/queue.c **** 					xEntryTimeSet = pdTRUE;
 1368              		.loc 1 1316 0
 1369 0052 02A8     		add	r0, sp, #8
 1370 0054 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1371              	.LVL207:
1317:..\FreeRTOS10/queue.c **** 				}
 1372              		.loc 1 1317 0
 1373 0058 0137     		adds	r7, r7, #1
 1374              	.LVL208:
 1375              	.L85:
 1376              	.LBE9:
1326:..\FreeRTOS10/queue.c **** 
 1377              		.loc 1 1326 0
 1378 005a FFF7FEFF 		bl	vPortExitCritical
 1379              	.LVL209:
1331:..\FreeRTOS10/queue.c **** 		prvLockQueue( pxQueue );
 1380              		.loc 1 1331 0
 1381 005e FFF7FEFF 		bl	vTaskSuspendAll
 1382              	.LVL210:
1332:..\FreeRTOS10/queue.c **** 
 1383              		.loc 1 1332 0
 1384 0062 FFF7FEFF 		bl	vPortEnterCritical
 1385              	.LVL211:
 1386 0066 4423     		movs	r3, #68
 1387 0068 E35C     		ldrb	r3, [r4, r3]
 1388 006a 5BB2     		sxtb	r3, r3
 1389 006c 0133     		adds	r3, r3, #1
 1390 006e 02D1     		bne	.L86
1332:..\FreeRTOS10/queue.c **** 
 1391              		.loc 1 1332 0 is_stmt 0 discriminator 1
 1392 0070 0022     		movs	r2, #0
 1393 0072 4423     		movs	r3, #68
 1394 0074 E254     		strb	r2, [r4, r3]
 1395              	.L86:
1332:..\FreeRTOS10/queue.c **** 
 1396              		.loc 1 1332 0 discriminator 3
 1397 0076 4523     		movs	r3, #69
 1398 0078 E35C     		ldrb	r3, [r4, r3]
 1399 007a 5BB2     		sxtb	r3, r3
 1400 007c 0133     		adds	r3, r3, #1
 1401 007e 02D1     		bne	.L87
1332:..\FreeRTOS10/queue.c **** 
 1402              		.loc 1 1332 0 discriminator 4
 1403 0080 0022     		movs	r2, #0
 1404 0082 4523     		movs	r3, #69
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 70


 1405 0084 E254     		strb	r2, [r4, r3]
 1406              	.L87:
1332:..\FreeRTOS10/queue.c **** 
 1407              		.loc 1 1332 0 discriminator 6
 1408 0086 FFF7FEFF 		bl	vPortExitCritical
 1409              	.LVL212:
1335:..\FreeRTOS10/queue.c **** 		{
 1410              		.loc 1 1335 0 is_stmt 1 discriminator 6
 1411 008a 01A9     		add	r1, sp, #4
 1412              	.LVL213:
 1413 008c 02A8     		add	r0, sp, #8
 1414 008e FFF7FEFF 		bl	xTaskCheckForTimeOut
 1415              	.LVL214:
 1416 0092 0028     		cmp	r0, #0
 1417 0094 19D1     		bne	.L88
1339:..\FreeRTOS10/queue.c **** 			{
 1418              		.loc 1 1339 0
 1419 0096 2000     		movs	r0, r4
 1420 0098 FFF7FEFF 		bl	prvIsQueueEmpty
 1421              	.LVL215:
 1422 009c 0028     		cmp	r0, #0
 1423 009e 0ED0     		beq	.L89
1342:..\FreeRTOS10/queue.c **** 				prvUnlockQueue( pxQueue );
 1424              		.loc 1 1342 0
 1425 00a0 2000     		movs	r0, r4
 1426 00a2 2430     		adds	r0, r0, #36
 1427 00a4 0199     		ldr	r1, [sp, #4]
 1428 00a6 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1429              	.LVL216:
1343:..\FreeRTOS10/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1430              		.loc 1 1343 0
 1431 00aa 2000     		movs	r0, r4
 1432 00ac FFF7FEFF 		bl	prvUnlockQueue
 1433              	.LVL217:
1344:..\FreeRTOS10/queue.c **** 				{
 1434              		.loc 1 1344 0
 1435 00b0 FFF7FEFF 		bl	xTaskResumeAll
 1436              	.LVL218:
 1437 00b4 0028     		cmp	r0, #0
 1438 00b6 A9D1     		bne	.L80
1346:..\FreeRTOS10/queue.c **** 				}
 1439              		.loc 1 1346 0
 1440 00b8 FFF7FEFF 		bl	vPortYield
 1441              	.LVL219:
 1442 00bc A6E7     		b	.L80
 1443              	.L89:
1357:..\FreeRTOS10/queue.c **** 				( void ) xTaskResumeAll();
 1444              		.loc 1 1357 0
 1445 00be 2000     		movs	r0, r4
 1446 00c0 FFF7FEFF 		bl	prvUnlockQueue
 1447              	.LVL220:
1358:..\FreeRTOS10/queue.c **** 			}
 1448              		.loc 1 1358 0
 1449 00c4 FFF7FEFF 		bl	xTaskResumeAll
 1450              	.LVL221:
 1451 00c8 A0E7     		b	.L80
 1452              	.L88:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 71


1365:..\FreeRTOS10/queue.c **** 			( void ) xTaskResumeAll();
 1453              		.loc 1 1365 0
 1454 00ca 2000     		movs	r0, r4
 1455 00cc FFF7FEFF 		bl	prvUnlockQueue
 1456              	.LVL222:
1366:..\FreeRTOS10/queue.c **** 
 1457              		.loc 1 1366 0
 1458 00d0 FFF7FEFF 		bl	xTaskResumeAll
 1459              	.LVL223:
1368:..\FreeRTOS10/queue.c **** 			{
 1460              		.loc 1 1368 0
 1461 00d4 2000     		movs	r0, r4
 1462 00d6 FFF7FEFF 		bl	prvIsQueueEmpty
 1463              	.LVL224:
 1464 00da 0028     		cmp	r0, #0
 1465 00dc 96D0     		beq	.L80
1371:..\FreeRTOS10/queue.c **** 			}
 1466              		.loc 1 1371 0
 1467 00de 0020     		movs	r0, #0
 1468              	.LVL225:
 1469              	.L83:
1379:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 1470              		.loc 1 1379 0
 1471 00e0 05B0     		add	sp, sp, #20
 1472              		@ sp needed
 1473              	.LVL226:
 1474              	.LVL227:
 1475              	.LVL228:
 1476 00e2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1477              		.cfi_endproc
 1478              	.LFE43:
 1479              		.size	xQueueReceive, .-xQueueReceive
 1480              		.section	.text.xQueueSemaphoreTake,"ax",%progbits
 1481              		.align	2
 1482              		.global	xQueueSemaphoreTake
 1483              		.code	16
 1484              		.thumb_func
 1485              		.type	xQueueSemaphoreTake, %function
 1486              	xQueueSemaphoreTake:
 1487              	.LFB44:
1383:..\FreeRTOS10/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1488              		.loc 1 1383 0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 16
 1491              		@ frame_needed = 0, uses_anonymous_args = 0
 1492              	.LVL229:
 1493 0000 70B5     		push	{r4, r5, r6, lr}
 1494              		.cfi_def_cfa_offset 16
 1495              		.cfi_offset 4, -16
 1496              		.cfi_offset 5, -12
 1497              		.cfi_offset 6, -8
 1498              		.cfi_offset 14, -4
 1499 0002 84B0     		sub	sp, sp, #16
 1500              		.cfi_def_cfa_offset 32
 1501 0004 0400     		movs	r4, r0
 1502 0006 0191     		str	r1, [sp, #4]
 1503              	.LVL230:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 72


1389:..\FreeRTOS10/queue.c **** #endif
 1504              		.loc 1 1389 0
 1505 0008 0026     		movs	r6, #0
1384:..\FreeRTOS10/queue.c **** TimeOut_t xTimeOut;
 1506              		.loc 1 1384 0
 1507 000a 0025     		movs	r5, #0
 1508              	.LVL231:
 1509              	.L92:
1413:..\FreeRTOS10/queue.c **** 		{
 1510              		.loc 1 1413 0
 1511 000c FFF7FEFF 		bl	vPortEnterCritical
 1512              	.LVL232:
 1513              	.LBB10:
1417:..\FreeRTOS10/queue.c **** 
 1514              		.loc 1 1417 0
 1515 0010 A36B     		ldr	r3, [r4, #56]
 1516              	.LVL233:
1421:..\FreeRTOS10/queue.c **** 			{
 1517              		.loc 1 1421 0
 1518 0012 002B     		cmp	r3, #0
 1519 0014 16D0     		beq	.L93
1427:..\FreeRTOS10/queue.c **** 
 1520              		.loc 1 1427 0
 1521 0016 013B     		subs	r3, r3, #1
 1522              	.LVL234:
 1523 0018 A363     		str	r3, [r4, #56]
1431:..\FreeRTOS10/queue.c **** 					{
 1524              		.loc 1 1431 0
 1525 001a 2368     		ldr	r3, [r4]
 1526              	.LVL235:
 1527 001c 002B     		cmp	r3, #0
 1528 001e 02D1     		bne	.L94
1435:..\FreeRTOS10/queue.c **** 					}
 1529              		.loc 1 1435 0
 1530 0020 FFF7FEFF 		bl	pvTaskIncrementMutexHeldCount
 1531              	.LVL236:
 1532 0024 6060     		str	r0, [r4, #4]
 1533              	.L94:
1446:..\FreeRTOS10/queue.c **** 				{
 1534              		.loc 1 1446 0
 1535 0026 2369     		ldr	r3, [r4, #16]
 1536 0028 002B     		cmp	r3, #0
 1537 002a 07D0     		beq	.L95
1448:..\FreeRTOS10/queue.c **** 					{
 1538              		.loc 1 1448 0
 1539 002c 2000     		movs	r0, r4
 1540 002e 1030     		adds	r0, r0, #16
 1541 0030 FFF7FEFF 		bl	xTaskRemoveFromEventList
 1542              	.LVL237:
 1543 0034 0028     		cmp	r0, #0
 1544 0036 01D0     		beq	.L95
1450:..\FreeRTOS10/queue.c **** 					}
 1545              		.loc 1 1450 0
 1546 0038 FFF7FEFF 		bl	vPortYield
 1547              	.LVL238:
 1548              	.L95:
1462:..\FreeRTOS10/queue.c **** 				return pdPASS;
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 73


 1549              		.loc 1 1462 0
 1550 003c FFF7FEFF 		bl	vPortExitCritical
 1551              	.LVL239:
1463:..\FreeRTOS10/queue.c **** 			}
 1552              		.loc 1 1463 0
 1553 0040 0120     		movs	r0, #1
 1554 0042 69E0     		b	.L96
 1555              	.LVL240:
 1556              	.L93:
1467:..\FreeRTOS10/queue.c **** 				{
 1557              		.loc 1 1467 0
 1558 0044 019B     		ldr	r3, [sp, #4]
 1559              	.LVL241:
 1560 0046 002B     		cmp	r3, #0
 1561 0048 03D1     		bne	.L97
1480:..\FreeRTOS10/queue.c **** 					traceQUEUE_RECEIVE_FAILED( pxQueue );
 1562              		.loc 1 1480 0
 1563 004a FFF7FEFF 		bl	vPortExitCritical
 1564              	.LVL242:
1482:..\FreeRTOS10/queue.c **** 				}
 1565              		.loc 1 1482 0
 1566 004e 0020     		movs	r0, #0
 1567 0050 62E0     		b	.L96
 1568              	.L97:
1484:..\FreeRTOS10/queue.c **** 				{
 1569              		.loc 1 1484 0
 1570 0052 002D     		cmp	r5, #0
 1571 0054 03D1     		bne	.L98
1488:..\FreeRTOS10/queue.c **** 					xEntryTimeSet = pdTRUE;
 1572              		.loc 1 1488 0
 1573 0056 02A8     		add	r0, sp, #8
 1574 0058 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1575              	.LVL243:
1489:..\FreeRTOS10/queue.c **** 				}
 1576              		.loc 1 1489 0
 1577 005c 0135     		adds	r5, r5, #1
 1578              	.LVL244:
 1579              	.L98:
 1580              	.LBE10:
1498:..\FreeRTOS10/queue.c **** 
 1581              		.loc 1 1498 0
 1582 005e FFF7FEFF 		bl	vPortExitCritical
 1583              	.LVL245:
1503:..\FreeRTOS10/queue.c **** 		prvLockQueue( pxQueue );
 1584              		.loc 1 1503 0
 1585 0062 FFF7FEFF 		bl	vTaskSuspendAll
 1586              	.LVL246:
1504:..\FreeRTOS10/queue.c **** 
 1587              		.loc 1 1504 0
 1588 0066 FFF7FEFF 		bl	vPortEnterCritical
 1589              	.LVL247:
 1590 006a 4423     		movs	r3, #68
 1591 006c E35C     		ldrb	r3, [r4, r3]
 1592 006e 5BB2     		sxtb	r3, r3
 1593 0070 0133     		adds	r3, r3, #1
 1594 0072 02D1     		bne	.L99
1504:..\FreeRTOS10/queue.c **** 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 74


 1595              		.loc 1 1504 0 is_stmt 0 discriminator 1
 1596 0074 0022     		movs	r2, #0
 1597 0076 4423     		movs	r3, #68
 1598 0078 E254     		strb	r2, [r4, r3]
 1599              	.L99:
1504:..\FreeRTOS10/queue.c **** 
 1600              		.loc 1 1504 0 discriminator 3
 1601 007a 4523     		movs	r3, #69
 1602 007c E35C     		ldrb	r3, [r4, r3]
 1603 007e 5BB2     		sxtb	r3, r3
 1604 0080 0133     		adds	r3, r3, #1
 1605 0082 02D1     		bne	.L100
1504:..\FreeRTOS10/queue.c **** 
 1606              		.loc 1 1504 0 discriminator 4
 1607 0084 0022     		movs	r2, #0
 1608 0086 4523     		movs	r3, #69
 1609 0088 E254     		strb	r2, [r4, r3]
 1610              	.L100:
1504:..\FreeRTOS10/queue.c **** 
 1611              		.loc 1 1504 0 discriminator 6
 1612 008a FFF7FEFF 		bl	vPortExitCritical
 1613              	.LVL248:
1507:..\FreeRTOS10/queue.c **** 		{
 1614              		.loc 1 1507 0 is_stmt 1 discriminator 6
 1615 008e 01A9     		add	r1, sp, #4
 1616              	.LVL249:
 1617 0090 02A8     		add	r0, sp, #8
 1618 0092 FFF7FEFF 		bl	xTaskCheckForTimeOut
 1619              	.LVL250:
 1620 0096 0028     		cmp	r0, #0
 1621 0098 24D1     		bne	.L101
1513:..\FreeRTOS10/queue.c **** 			{
 1622              		.loc 1 1513 0
 1623 009a 2000     		movs	r0, r4
 1624 009c FFF7FEFF 		bl	prvIsQueueEmpty
 1625              	.LVL251:
 1626 00a0 0028     		cmp	r0, #0
 1627 00a2 19D0     		beq	.L102
1519:..\FreeRTOS10/queue.c **** 					{
 1628              		.loc 1 1519 0
 1629 00a4 2368     		ldr	r3, [r4]
 1630 00a6 002B     		cmp	r3, #0
 1631 00a8 07D1     		bne	.L103
1521:..\FreeRTOS10/queue.c **** 						{
 1632              		.loc 1 1521 0
 1633 00aa FFF7FEFF 		bl	vPortEnterCritical
 1634              	.LVL252:
1523:..\FreeRTOS10/queue.c **** 						}
 1635              		.loc 1 1523 0
 1636 00ae 6068     		ldr	r0, [r4, #4]
 1637 00b0 FFF7FEFF 		bl	xTaskPriorityInherit
 1638              	.LVL253:
 1639 00b4 0600     		movs	r6, r0
 1640              	.LVL254:
1525:..\FreeRTOS10/queue.c **** 					}
 1641              		.loc 1 1525 0
 1642 00b6 FFF7FEFF 		bl	vPortExitCritical
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 75


 1643              	.LVL255:
 1644              	.L103:
1534:..\FreeRTOS10/queue.c **** 				prvUnlockQueue( pxQueue );
 1645              		.loc 1 1534 0
 1646 00ba 2000     		movs	r0, r4
 1647 00bc 2430     		adds	r0, r0, #36
 1648 00be 0199     		ldr	r1, [sp, #4]
 1649 00c0 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1650              	.LVL256:
1535:..\FreeRTOS10/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1651              		.loc 1 1535 0
 1652 00c4 2000     		movs	r0, r4
 1653 00c6 FFF7FEFF 		bl	prvUnlockQueue
 1654              	.LVL257:
1536:..\FreeRTOS10/queue.c **** 				{
 1655              		.loc 1 1536 0
 1656 00ca FFF7FEFF 		bl	xTaskResumeAll
 1657              	.LVL258:
 1658 00ce 0028     		cmp	r0, #0
 1659 00d0 9CD1     		bne	.L92
1538:..\FreeRTOS10/queue.c **** 				}
 1660              		.loc 1 1538 0
 1661 00d2 FFF7FEFF 		bl	vPortYield
 1662              	.LVL259:
 1663 00d6 99E7     		b	.L92
 1664              	.L102:
1549:..\FreeRTOS10/queue.c **** 				( void ) xTaskResumeAll();
 1665              		.loc 1 1549 0
 1666 00d8 2000     		movs	r0, r4
 1667 00da FFF7FEFF 		bl	prvUnlockQueue
 1668              	.LVL260:
1550:..\FreeRTOS10/queue.c **** 			}
 1669              		.loc 1 1550 0
 1670 00de FFF7FEFF 		bl	xTaskResumeAll
 1671              	.LVL261:
 1672 00e2 93E7     		b	.L92
 1673              	.L101:
1556:..\FreeRTOS10/queue.c **** 			( void ) xTaskResumeAll();
 1674              		.loc 1 1556 0
 1675 00e4 2000     		movs	r0, r4
 1676 00e6 FFF7FEFF 		bl	prvUnlockQueue
 1677              	.LVL262:
1557:..\FreeRTOS10/queue.c **** 
 1678              		.loc 1 1557 0
 1679 00ea FFF7FEFF 		bl	xTaskResumeAll
 1680              	.LVL263:
1563:..\FreeRTOS10/queue.c **** 			{
 1681              		.loc 1 1563 0
 1682 00ee 2000     		movs	r0, r4
 1683 00f0 FFF7FEFF 		bl	prvIsQueueEmpty
 1684              	.LVL264:
 1685 00f4 0028     		cmp	r0, #0
 1686 00f6 89D0     		beq	.L92
1570:..\FreeRTOS10/queue.c **** 					{
 1687              		.loc 1 1570 0
 1688 00f8 002E     		cmp	r6, #0
 1689 00fa 0CD0     		beq	.L105
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 76


1572:..\FreeRTOS10/queue.c **** 						{
 1690              		.loc 1 1572 0
 1691 00fc FFF7FEFF 		bl	vPortEnterCritical
 1692              	.LVL265:
 1693              	.LBB11:
1581:..\FreeRTOS10/queue.c **** 							vTaskPriorityDisinheritAfterTimeout( ( void * ) pxQueue->pxMutexHolder, uxHighestWaitingPrio
 1694              		.loc 1 1581 0
 1695 0100 2000     		movs	r0, r4
 1696 0102 FFF7FEFF 		bl	prvGetDisinheritPriorityAfterTimeout
 1697              	.LVL266:
 1698 0106 0100     		movs	r1, r0
 1699              	.LVL267:
1582:..\FreeRTOS10/queue.c **** 						}
 1700              		.loc 1 1582 0
 1701 0108 6068     		ldr	r0, [r4, #4]
 1702              	.LVL268:
 1703 010a FFF7FEFF 		bl	vTaskPriorityDisinheritAfterTimeout
 1704              	.LVL269:
 1705              	.LBE11:
1584:..\FreeRTOS10/queue.c **** 					}
 1706              		.loc 1 1584 0
 1707 010e FFF7FEFF 		bl	vPortExitCritical
 1708              	.LVL270:
1590:..\FreeRTOS10/queue.c **** 			}
 1709              		.loc 1 1590 0
 1710 0112 0020     		movs	r0, #0
 1711 0114 00E0     		b	.L96
 1712              	.L105:
 1713 0116 0020     		movs	r0, #0
 1714              	.L96:
1598:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 1715              		.loc 1 1598 0
 1716 0118 04B0     		add	sp, sp, #16
 1717              		@ sp needed
 1718              	.LVL271:
 1719              	.LVL272:
 1720              	.LVL273:
 1721 011a 70BD     		pop	{r4, r5, r6, pc}
 1722              		.cfi_endproc
 1723              	.LFE44:
 1724              		.size	xQueueSemaphoreTake, .-xQueueSemaphoreTake
 1725              		.section	.text.xQueueTakeMutexRecursive,"ax",%progbits
 1726              		.align	2
 1727              		.global	xQueueTakeMutexRecursive
 1728              		.code	16
 1729              		.thumb_func
 1730              		.type	xQueueTakeMutexRecursive, %function
 1731              	xQueueTakeMutexRecursive:
 1732              	.LFB38:
 631:..\FreeRTOS10/queue.c **** 	BaseType_t xReturn;
 1733              		.loc 1 631 0
 1734              		.cfi_startproc
 1735              		@ args = 0, pretend = 0, frame = 0
 1736              		@ frame_needed = 0, uses_anonymous_args = 0
 1737              	.LVL274:
 1738 0000 70B5     		push	{r4, r5, r6, lr}
 1739              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 77


 1740              		.cfi_offset 4, -16
 1741              		.cfi_offset 5, -12
 1742              		.cfi_offset 6, -8
 1743              		.cfi_offset 14, -4
 1744 0002 0400     		movs	r4, r0
 1745 0004 0E00     		movs	r6, r1
 1746              	.LVL275:
 642:..\FreeRTOS10/queue.c **** 		{
 1747              		.loc 1 642 0
 1748 0006 4568     		ldr	r5, [r0, #4]
 1749 0008 FFF7FEFF 		bl	xTaskGetCurrentTaskHandle
 1750              	.LVL276:
 1751 000c 8542     		cmp	r5, r0
 1752 000e 04D1     		bne	.L107
 644:..\FreeRTOS10/queue.c **** 			xReturn = pdPASS;
 1753              		.loc 1 644 0
 1754 0010 E368     		ldr	r3, [r4, #12]
 1755 0012 0133     		adds	r3, r3, #1
 1756 0014 E360     		str	r3, [r4, #12]
 1757              	.LVL277:
 645:..\FreeRTOS10/queue.c **** 		}
 1758              		.loc 1 645 0
 1759 0016 0120     		movs	r0, #1
 1760 0018 08E0     		b	.L108
 1761              	.LVL278:
 1762              	.L107:
 649:..\FreeRTOS10/queue.c **** 
 1763              		.loc 1 649 0
 1764 001a 3100     		movs	r1, r6
 1765 001c 2000     		movs	r0, r4
 1766 001e FFF7FEFF 		bl	xQueueSemaphoreTake
 1767              	.LVL279:
 654:..\FreeRTOS10/queue.c **** 			{
 1768              		.loc 1 654 0
 1769 0022 0028     		cmp	r0, #0
 1770 0024 02D0     		beq	.L108
 656:..\FreeRTOS10/queue.c **** 			}
 1771              		.loc 1 656 0
 1772 0026 E368     		ldr	r3, [r4, #12]
 1773 0028 0133     		adds	r3, r3, #1
 1774 002a E360     		str	r3, [r4, #12]
 1775              	.LVL280:
 1776              	.L108:
 665:..\FreeRTOS10/queue.c **** 
 1777              		.loc 1 665 0
 1778              		@ sp needed
 1779              	.LVL281:
 1780              	.LVL282:
 1781 002c 70BD     		pop	{r4, r5, r6, pc}
 1782              		.cfi_endproc
 1783              	.LFE38:
 1784              		.size	xQueueTakeMutexRecursive, .-xQueueTakeMutexRecursive
 1785 002e C046     		.section	.text.xQueuePeek,"ax",%progbits
 1786              		.align	2
 1787              		.global	xQueuePeek
 1788              		.code	16
 1789              		.thumb_func
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 78


 1790              		.type	xQueuePeek, %function
 1791              	xQueuePeek:
 1792              	.LFB45:
1602:..\FreeRTOS10/queue.c **** BaseType_t xEntryTimeSet = pdFALSE;
 1793              		.loc 1 1602 0
 1794              		.cfi_startproc
 1795              		@ args = 0, pretend = 0, frame = 16
 1796              		@ frame_needed = 0, uses_anonymous_args = 0
 1797              	.LVL283:
 1798 0000 70B5     		push	{r4, r5, r6, lr}
 1799              		.cfi_def_cfa_offset 16
 1800              		.cfi_offset 4, -16
 1801              		.cfi_offset 5, -12
 1802              		.cfi_offset 6, -8
 1803              		.cfi_offset 14, -4
 1804 0002 84B0     		sub	sp, sp, #16
 1805              		.cfi_def_cfa_offset 32
 1806 0004 0400     		movs	r4, r0
 1807 0006 0D00     		movs	r5, r1
 1808 0008 0192     		str	r2, [sp, #4]
 1809              	.LVL284:
1603:..\FreeRTOS10/queue.c **** TimeOut_t xTimeOut;
 1810              		.loc 1 1603 0
 1811 000a 0026     		movs	r6, #0
 1812              	.LVL285:
 1813              	.L110:
1629:..\FreeRTOS10/queue.c **** 		{
 1814              		.loc 1 1629 0
 1815 000c FFF7FEFF 		bl	vPortEnterCritical
 1816              	.LVL286:
 1817              	.LBB12:
1631:..\FreeRTOS10/queue.c **** 
 1818              		.loc 1 1631 0
 1819 0010 A36B     		ldr	r3, [r4, #56]
 1820              	.LVL287:
1635:..\FreeRTOS10/queue.c **** 			{
 1821              		.loc 1 1635 0
 1822 0012 002B     		cmp	r3, #0
 1823 0014 14D0     		beq	.L111
1640:..\FreeRTOS10/queue.c **** 
 1824              		.loc 1 1640 0
 1825 0016 E668     		ldr	r6, [r4, #12]
 1826              	.LVL288:
1642:..\FreeRTOS10/queue.c **** 				traceQUEUE_PEEK( pxQueue );
 1827              		.loc 1 1642 0
 1828 0018 2900     		movs	r1, r5
 1829 001a 2000     		movs	r0, r4
 1830 001c FFF7FEFF 		bl	prvCopyDataFromQueue
 1831              	.LVL289:
1646:..\FreeRTOS10/queue.c **** 
 1832              		.loc 1 1646 0
 1833 0020 E660     		str	r6, [r4, #12]
1650:..\FreeRTOS10/queue.c **** 				{
 1834              		.loc 1 1650 0
 1835 0022 636A     		ldr	r3, [r4, #36]
 1836 0024 002B     		cmp	r3, #0
 1837 0026 07D0     		beq	.L112
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 79


1652:..\FreeRTOS10/queue.c **** 					{
 1838              		.loc 1 1652 0
 1839 0028 2000     		movs	r0, r4
 1840 002a 2430     		adds	r0, r0, #36
 1841 002c FFF7FEFF 		bl	xTaskRemoveFromEventList
 1842              	.LVL290:
 1843 0030 0028     		cmp	r0, #0
 1844 0032 01D0     		beq	.L112
1655:..\FreeRTOS10/queue.c **** 					}
 1845              		.loc 1 1655 0
 1846 0034 FFF7FEFF 		bl	vPortYield
 1847              	.LVL291:
 1848              	.L112:
1667:..\FreeRTOS10/queue.c **** 				return pdPASS;
 1849              		.loc 1 1667 0
 1850 0038 FFF7FEFF 		bl	vPortExitCritical
 1851              	.LVL292:
1668:..\FreeRTOS10/queue.c **** 			}
 1852              		.loc 1 1668 0
 1853 003c 0120     		movs	r0, #1
 1854 003e 4FE0     		b	.L113
 1855              	.LVL293:
 1856              	.L111:
1672:..\FreeRTOS10/queue.c **** 				{
 1857              		.loc 1 1672 0
 1858 0040 019B     		ldr	r3, [sp, #4]
 1859              	.LVL294:
 1860 0042 002B     		cmp	r3, #0
 1861 0044 03D1     		bne	.L114
1676:..\FreeRTOS10/queue.c **** 					traceQUEUE_PEEK_FAILED( pxQueue );
 1862              		.loc 1 1676 0
 1863 0046 FFF7FEFF 		bl	vPortExitCritical
 1864              	.LVL295:
1678:..\FreeRTOS10/queue.c **** 				}
 1865              		.loc 1 1678 0
 1866 004a 0020     		movs	r0, #0
 1867 004c 48E0     		b	.L113
 1868              	.L114:
1680:..\FreeRTOS10/queue.c **** 				{
 1869              		.loc 1 1680 0
 1870 004e 002E     		cmp	r6, #0
 1871 0050 03D1     		bne	.L115
1685:..\FreeRTOS10/queue.c **** 					xEntryTimeSet = pdTRUE;
 1872              		.loc 1 1685 0
 1873 0052 02A8     		add	r0, sp, #8
 1874 0054 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 1875              	.LVL296:
1686:..\FreeRTOS10/queue.c **** 				}
 1876              		.loc 1 1686 0
 1877 0058 0136     		adds	r6, r6, #1
 1878              	.LVL297:
 1879              	.L115:
 1880              	.LBE12:
1695:..\FreeRTOS10/queue.c **** 
 1881              		.loc 1 1695 0
 1882 005a FFF7FEFF 		bl	vPortExitCritical
 1883              	.LVL298:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 80


1700:..\FreeRTOS10/queue.c **** 		prvLockQueue( pxQueue );
 1884              		.loc 1 1700 0
 1885 005e FFF7FEFF 		bl	vTaskSuspendAll
 1886              	.LVL299:
1701:..\FreeRTOS10/queue.c **** 
 1887              		.loc 1 1701 0
 1888 0062 FFF7FEFF 		bl	vPortEnterCritical
 1889              	.LVL300:
 1890 0066 4423     		movs	r3, #68
 1891 0068 E35C     		ldrb	r3, [r4, r3]
 1892 006a 5BB2     		sxtb	r3, r3
 1893 006c 0133     		adds	r3, r3, #1
 1894 006e 02D1     		bne	.L116
1701:..\FreeRTOS10/queue.c **** 
 1895              		.loc 1 1701 0 is_stmt 0 discriminator 1
 1896 0070 0022     		movs	r2, #0
 1897 0072 4423     		movs	r3, #68
 1898 0074 E254     		strb	r2, [r4, r3]
 1899              	.L116:
1701:..\FreeRTOS10/queue.c **** 
 1900              		.loc 1 1701 0 discriminator 3
 1901 0076 4523     		movs	r3, #69
 1902 0078 E35C     		ldrb	r3, [r4, r3]
 1903 007a 5BB2     		sxtb	r3, r3
 1904 007c 0133     		adds	r3, r3, #1
 1905 007e 02D1     		bne	.L117
1701:..\FreeRTOS10/queue.c **** 
 1906              		.loc 1 1701 0 discriminator 4
 1907 0080 0022     		movs	r2, #0
 1908 0082 4523     		movs	r3, #69
 1909 0084 E254     		strb	r2, [r4, r3]
 1910              	.L117:
1701:..\FreeRTOS10/queue.c **** 
 1911              		.loc 1 1701 0 discriminator 6
 1912 0086 FFF7FEFF 		bl	vPortExitCritical
 1913              	.LVL301:
1704:..\FreeRTOS10/queue.c **** 		{
 1914              		.loc 1 1704 0 is_stmt 1 discriminator 6
 1915 008a 01A9     		add	r1, sp, #4
 1916              	.LVL302:
 1917 008c 02A8     		add	r0, sp, #8
 1918 008e FFF7FEFF 		bl	xTaskCheckForTimeOut
 1919              	.LVL303:
 1920 0092 0028     		cmp	r0, #0
 1921 0094 19D1     		bne	.L118
1708:..\FreeRTOS10/queue.c **** 			{
 1922              		.loc 1 1708 0
 1923 0096 2000     		movs	r0, r4
 1924 0098 FFF7FEFF 		bl	prvIsQueueEmpty
 1925              	.LVL304:
 1926 009c 0028     		cmp	r0, #0
 1927 009e 0ED0     		beq	.L119
1711:..\FreeRTOS10/queue.c **** 				prvUnlockQueue( pxQueue );
 1928              		.loc 1 1711 0
 1929 00a0 2000     		movs	r0, r4
 1930 00a2 2430     		adds	r0, r0, #36
 1931 00a4 0199     		ldr	r1, [sp, #4]
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 81


 1932 00a6 FFF7FEFF 		bl	vTaskPlaceOnEventList
 1933              	.LVL305:
1712:..\FreeRTOS10/queue.c **** 				if( xTaskResumeAll() == pdFALSE )
 1934              		.loc 1 1712 0
 1935 00aa 2000     		movs	r0, r4
 1936 00ac FFF7FEFF 		bl	prvUnlockQueue
 1937              	.LVL306:
1713:..\FreeRTOS10/queue.c **** 				{
 1938              		.loc 1 1713 0
 1939 00b0 FFF7FEFF 		bl	xTaskResumeAll
 1940              	.LVL307:
 1941 00b4 0028     		cmp	r0, #0
 1942 00b6 A9D1     		bne	.L110
1715:..\FreeRTOS10/queue.c **** 				}
 1943              		.loc 1 1715 0
 1944 00b8 FFF7FEFF 		bl	vPortYield
 1945              	.LVL308:
 1946 00bc A6E7     		b	.L110
 1947              	.L119:
1726:..\FreeRTOS10/queue.c **** 				( void ) xTaskResumeAll();
 1948              		.loc 1 1726 0
 1949 00be 2000     		movs	r0, r4
 1950 00c0 FFF7FEFF 		bl	prvUnlockQueue
 1951              	.LVL309:
1727:..\FreeRTOS10/queue.c **** 			}
 1952              		.loc 1 1727 0
 1953 00c4 FFF7FEFF 		bl	xTaskResumeAll
 1954              	.LVL310:
 1955 00c8 A0E7     		b	.L110
 1956              	.L118:
1734:..\FreeRTOS10/queue.c **** 			( void ) xTaskResumeAll();
 1957              		.loc 1 1734 0
 1958 00ca 2000     		movs	r0, r4
 1959 00cc FFF7FEFF 		bl	prvUnlockQueue
 1960              	.LVL311:
1735:..\FreeRTOS10/queue.c **** 
 1961              		.loc 1 1735 0
 1962 00d0 FFF7FEFF 		bl	xTaskResumeAll
 1963              	.LVL312:
1737:..\FreeRTOS10/queue.c **** 			{
 1964              		.loc 1 1737 0
 1965 00d4 2000     		movs	r0, r4
 1966 00d6 FFF7FEFF 		bl	prvIsQueueEmpty
 1967              	.LVL313:
 1968 00da 0028     		cmp	r0, #0
 1969 00dc 96D0     		beq	.L110
1740:..\FreeRTOS10/queue.c **** 			}
 1970              		.loc 1 1740 0
 1971 00de 0020     		movs	r0, #0
 1972              	.LVL314:
 1973              	.L113:
1748:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 1974              		.loc 1 1748 0
 1975 00e0 04B0     		add	sp, sp, #16
 1976              		@ sp needed
 1977              	.LVL315:
 1978              	.LVL316:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 82


 1979 00e2 70BD     		pop	{r4, r5, r6, pc}
 1980              		.cfi_endproc
 1981              	.LFE45:
 1982              		.size	xQueuePeek, .-xQueuePeek
 1983              		.section	.text.xQueueReceiveFromISR,"ax",%progbits
 1984              		.align	2
 1985              		.global	xQueueReceiveFromISR
 1986              		.code	16
 1987              		.thumb_func
 1988              		.type	xQueueReceiveFromISR, %function
 1989              	xQueueReceiveFromISR:
 1990              	.LFB46:
1752:..\FreeRTOS10/queue.c **** BaseType_t xReturn;
 1991              		.loc 1 1752 0
 1992              		.cfi_startproc
 1993              		@ args = 0, pretend = 0, frame = 8
 1994              		@ frame_needed = 0, uses_anonymous_args = 0
 1995              	.LVL317:
 1996 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1997              		.cfi_def_cfa_offset 20
 1998              		.cfi_offset 4, -20
 1999              		.cfi_offset 5, -16
 2000              		.cfi_offset 6, -12
 2001              		.cfi_offset 7, -8
 2002              		.cfi_offset 14, -4
 2003 0002 83B0     		sub	sp, sp, #12
 2004              		.cfi_def_cfa_offset 32
 2005 0004 0400     		movs	r4, r0
 2006 0006 0091     		str	r1, [sp]
 2007 0008 0192     		str	r2, [sp, #4]
 2008              	.LVL318:
1776:..\FreeRTOS10/queue.c **** 	{
 2009              		.loc 1 1776 0
 2010 000a FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 2011              	.LVL319:
 2012 000e 0500     		movs	r5, r0
 2013              	.LVL320:
 2014              	.LBB13:
1778:..\FreeRTOS10/queue.c **** 
 2015              		.loc 1 1778 0
 2016 0010 A76B     		ldr	r7, [r4, #56]
 2017              	.LVL321:
1781:..\FreeRTOS10/queue.c **** 		{
 2018              		.loc 1 1781 0
 2019 0012 002F     		cmp	r7, #0
 2020 0014 20D0     		beq	.L124
 2021              	.LBB14:
1783:..\FreeRTOS10/queue.c **** 
 2022              		.loc 1 1783 0
 2023 0016 4423     		movs	r3, #68
 2024 0018 E35C     		ldrb	r3, [r4, r3]
 2025 001a 5EB2     		sxtb	r6, r3
 2026              	.LVL322:
1787:..\FreeRTOS10/queue.c **** 			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 2027              		.loc 1 1787 0
 2028 001c 0099     		ldr	r1, [sp]
 2029 001e 2000     		movs	r0, r4
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 83


 2030              	.LVL323:
 2031 0020 FFF7FEFF 		bl	prvCopyDataFromQueue
 2032              	.LVL324:
1788:..\FreeRTOS10/queue.c **** 
 2033              		.loc 1 1788 0
 2034 0024 7B1E     		subs	r3, r7, #1
 2035 0026 A363     		str	r3, [r4, #56]
1794:..\FreeRTOS10/queue.c **** 			{
 2036              		.loc 1 1794 0
 2037 0028 731C     		adds	r3, r6, #1
 2038 002a 0FD1     		bne	.L123
1796:..\FreeRTOS10/queue.c **** 				{
 2039              		.loc 1 1796 0
 2040 002c 2369     		ldr	r3, [r4, #16]
 2041 002e 002B     		cmp	r3, #0
 2042 0030 14D0     		beq	.L125
1798:..\FreeRTOS10/queue.c **** 					{
 2043              		.loc 1 1798 0
 2044 0032 2000     		movs	r0, r4
 2045 0034 1030     		adds	r0, r0, #16
 2046 0036 FFF7FEFF 		bl	xTaskRemoveFromEventList
 2047              	.LVL325:
 2048 003a 0028     		cmp	r0, #0
 2049 003c 10D0     		beq	.L126
1802:..\FreeRTOS10/queue.c **** 						{
 2050              		.loc 1 1802 0
 2051 003e 019A     		ldr	r2, [sp, #4]
 2052 0040 002A     		cmp	r2, #0
 2053 0042 0FD0     		beq	.L127
1804:..\FreeRTOS10/queue.c **** 						}
 2054              		.loc 1 1804 0
 2055 0044 0123     		movs	r3, #1
 2056 0046 1360     		str	r3, [r2]
1828:..\FreeRTOS10/queue.c **** 		}
 2057              		.loc 1 1828 0
 2058 0048 0124     		movs	r4, #1
 2059              	.LVL326:
 2060 004a 0CE0     		b	.L122
 2061              	.LVL327:
 2062              	.L123:
1825:..\FreeRTOS10/queue.c **** 			}
 2063              		.loc 1 1825 0
 2064 004c 731C     		adds	r3, r6, #1
 2065 004e 5BB2     		sxtb	r3, r3
 2066 0050 4422     		movs	r2, #68
 2067 0052 A354     		strb	r3, [r4, r2]
1828:..\FreeRTOS10/queue.c **** 		}
 2068              		.loc 1 1828 0
 2069 0054 0124     		movs	r4, #1
 2070              	.LVL328:
 2071 0056 06E0     		b	.L122
 2072              	.LVL329:
 2073              	.L124:
 2074              	.LBE14:
1832:..\FreeRTOS10/queue.c **** 			traceQUEUE_RECEIVE_FROM_ISR_FAILED( pxQueue );
 2075              		.loc 1 1832 0
 2076 0058 0024     		movs	r4, #0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 84


 2077              	.LVL330:
 2078 005a 04E0     		b	.L122
 2079              	.LVL331:
 2080              	.L125:
 2081              	.LBB15:
1828:..\FreeRTOS10/queue.c **** 		}
 2082              		.loc 1 1828 0
 2083 005c 0124     		movs	r4, #1
 2084              	.LVL332:
 2085 005e 02E0     		b	.L122
 2086              	.LVL333:
 2087              	.L126:
 2088 0060 0124     		movs	r4, #1
 2089              	.LVL334:
 2090 0062 00E0     		b	.L122
 2091              	.LVL335:
 2092              	.L127:
 2093 0064 0124     		movs	r4, #1
 2094              	.LVL336:
 2095              	.L122:
 2096              	.LBE15:
 2097              	.LBE13:
1836:..\FreeRTOS10/queue.c **** 
 2098              		.loc 1 1836 0
 2099 0066 2800     		movs	r0, r5
 2100 0068 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 2101              	.LVL337:
1839:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 2102              		.loc 1 1839 0
 2103 006c 2000     		movs	r0, r4
 2104 006e 03B0     		add	sp, sp, #12
 2105              	.LVL338:
 2106              		@ sp needed
 2107              	.LVL339:
 2108              	.LVL340:
 2109              	.LVL341:
 2110 0070 F0BD     		pop	{r4, r5, r6, r7, pc}
 2111              		.cfi_endproc
 2112              	.LFE46:
 2113              		.size	xQueueReceiveFromISR, .-xQueueReceiveFromISR
 2114 0072 C046     		.section	.text.xQueuePeekFromISR,"ax",%progbits
 2115              		.align	2
 2116              		.global	xQueuePeekFromISR
 2117              		.code	16
 2118              		.thumb_func
 2119              		.type	xQueuePeekFromISR, %function
 2120              	xQueuePeekFromISR:
 2121              	.LFB47:
1843:..\FreeRTOS10/queue.c **** BaseType_t xReturn;
 2122              		.loc 1 1843 0
 2123              		.cfi_startproc
 2124              		@ args = 0, pretend = 0, frame = 0
 2125              		@ frame_needed = 0, uses_anonymous_args = 0
 2126              	.LVL342:
 2127 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2128              		.cfi_def_cfa_offset 24
 2129              		.cfi_offset 3, -24
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 85


 2130              		.cfi_offset 4, -20
 2131              		.cfi_offset 5, -16
 2132              		.cfi_offset 6, -12
 2133              		.cfi_offset 7, -8
 2134              		.cfi_offset 14, -4
 2135 0002 0400     		movs	r4, r0
 2136 0004 0E00     		movs	r6, r1
 2137              	.LVL343:
1869:..\FreeRTOS10/queue.c **** 	{
 2138              		.loc 1 1869 0
 2139 0006 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 2140              	.LVL344:
 2141 000a 0500     		movs	r5, r0
 2142              	.LVL345:
1872:..\FreeRTOS10/queue.c **** 		{
 2143              		.loc 1 1872 0
 2144 000c A36B     		ldr	r3, [r4, #56]
 2145 000e 002B     		cmp	r3, #0
 2146 0010 07D0     		beq	.L130
1878:..\FreeRTOS10/queue.c **** 			prvCopyDataFromQueue( pxQueue, pvBuffer );
 2147              		.loc 1 1878 0
 2148 0012 E768     		ldr	r7, [r4, #12]
 2149              	.LVL346:
1879:..\FreeRTOS10/queue.c **** 			pxQueue->u.pcReadFrom = pcOriginalReadPosition;
 2150              		.loc 1 1879 0
 2151 0014 3100     		movs	r1, r6
 2152 0016 2000     		movs	r0, r4
 2153              	.LVL347:
 2154 0018 FFF7FEFF 		bl	prvCopyDataFromQueue
 2155              	.LVL348:
1880:..\FreeRTOS10/queue.c **** 
 2156              		.loc 1 1880 0
 2157 001c E760     		str	r7, [r4, #12]
 2158              	.LVL349:
1882:..\FreeRTOS10/queue.c **** 		}
 2159              		.loc 1 1882 0
 2160 001e 0124     		movs	r4, #1
 2161              	.LVL350:
 2162 0020 00E0     		b	.L129
 2163              	.LVL351:
 2164              	.L130:
1886:..\FreeRTOS10/queue.c **** 			traceQUEUE_PEEK_FROM_ISR_FAILED( pxQueue );
 2165              		.loc 1 1886 0
 2166 0022 0024     		movs	r4, #0
 2167              	.LVL352:
 2168              	.L129:
1890:..\FreeRTOS10/queue.c **** 
 2169              		.loc 1 1890 0
 2170 0024 2800     		movs	r0, r5
 2171 0026 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 2172              	.LVL353:
1893:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 2173              		.loc 1 1893 0
 2174 002a 2000     		movs	r0, r4
 2175              		@ sp needed
 2176              	.LVL354:
 2177              	.LVL355:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 86


 2178              	.LVL356:
 2179 002c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2180              		.cfi_endproc
 2181              	.LFE47:
 2182              		.size	xQueuePeekFromISR, .-xQueuePeekFromISR
 2183 002e C046     		.section	.text.uxQueueMessagesWaiting,"ax",%progbits
 2184              		.align	2
 2185              		.global	uxQueueMessagesWaiting
 2186              		.code	16
 2187              		.thumb_func
 2188              		.type	uxQueueMessagesWaiting, %function
 2189              	uxQueueMessagesWaiting:
 2190              	.LFB48:
1897:..\FreeRTOS10/queue.c **** UBaseType_t uxReturn;
 2191              		.loc 1 1897 0
 2192              		.cfi_startproc
 2193              		@ args = 0, pretend = 0, frame = 0
 2194              		@ frame_needed = 0, uses_anonymous_args = 0
 2195              	.LVL357:
 2196 0000 10B5     		push	{r4, lr}
 2197              		.cfi_def_cfa_offset 8
 2198              		.cfi_offset 4, -8
 2199              		.cfi_offset 14, -4
 2200 0002 0400     		movs	r4, r0
1902:..\FreeRTOS10/queue.c **** 	{
 2201              		.loc 1 1902 0
 2202 0004 FFF7FEFF 		bl	vPortEnterCritical
 2203              	.LVL358:
1904:..\FreeRTOS10/queue.c **** 	}
 2204              		.loc 1 1904 0
 2205 0008 A46B     		ldr	r4, [r4, #56]
 2206              	.LVL359:
1906:..\FreeRTOS10/queue.c **** 
 2207              		.loc 1 1906 0
 2208 000a FFF7FEFF 		bl	vPortExitCritical
 2209              	.LVL360:
1909:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 2210              		.loc 1 1909 0
 2211 000e 2000     		movs	r0, r4
 2212              		@ sp needed
 2213              	.LVL361:
 2214 0010 10BD     		pop	{r4, pc}
 2215              		.cfi_endproc
 2216              	.LFE48:
 2217              		.size	uxQueueMessagesWaiting, .-uxQueueMessagesWaiting
 2218 0012 C046     		.section	.text.uxQueueSpacesAvailable,"ax",%progbits
 2219              		.align	2
 2220              		.global	uxQueueSpacesAvailable
 2221              		.code	16
 2222              		.thumb_func
 2223              		.type	uxQueueSpacesAvailable, %function
 2224              	uxQueueSpacesAvailable:
 2225              	.LFB49:
1913:..\FreeRTOS10/queue.c **** UBaseType_t uxReturn;
 2226              		.loc 1 1913 0
 2227              		.cfi_startproc
 2228              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 87


 2229              		@ frame_needed = 0, uses_anonymous_args = 0
 2230              	.LVL362:
 2231 0000 10B5     		push	{r4, lr}
 2232              		.cfi_def_cfa_offset 8
 2233              		.cfi_offset 4, -8
 2234              		.cfi_offset 14, -4
 2235 0002 0400     		movs	r4, r0
 2236              	.LVL363:
1920:..\FreeRTOS10/queue.c **** 	{
 2237              		.loc 1 1920 0
 2238 0004 FFF7FEFF 		bl	vPortEnterCritical
 2239              	.LVL364:
1922:..\FreeRTOS10/queue.c **** 	}
 2240              		.loc 1 1922 0
 2241 0008 E36B     		ldr	r3, [r4, #60]
 2242 000a A46B     		ldr	r4, [r4, #56]
 2243              	.LVL365:
 2244 000c 1C1B     		subs	r4, r3, r4
 2245              	.LVL366:
1924:..\FreeRTOS10/queue.c **** 
 2246              		.loc 1 1924 0
 2247 000e FFF7FEFF 		bl	vPortExitCritical
 2248              	.LVL367:
1927:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 2249              		.loc 1 1927 0
 2250 0012 2000     		movs	r0, r4
 2251              		@ sp needed
 2252              	.LVL368:
 2253 0014 10BD     		pop	{r4, pc}
 2254              		.cfi_endproc
 2255              	.LFE49:
 2256              		.size	uxQueueSpacesAvailable, .-uxQueueSpacesAvailable
 2257 0016 C046     		.section	.text.uxQueueMessagesWaitingFromISR,"ax",%progbits
 2258              		.align	2
 2259              		.global	uxQueueMessagesWaitingFromISR
 2260              		.code	16
 2261              		.thumb_func
 2262              		.type	uxQueueMessagesWaitingFromISR, %function
 2263              	uxQueueMessagesWaitingFromISR:
 2264              	.LFB50:
1931:..\FreeRTOS10/queue.c **** UBaseType_t uxReturn;
 2265              		.loc 1 1931 0
 2266              		.cfi_startproc
 2267              		@ args = 0, pretend = 0, frame = 0
 2268              		@ frame_needed = 0, uses_anonymous_args = 0
 2269              		@ link register save eliminated.
 2270              	.LVL369:
1936:..\FreeRTOS10/queue.c **** 
 2271              		.loc 1 1936 0
 2272 0000 806B     		ldr	r0, [r0, #56]
 2273              	.LVL370:
1939:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 2274              		.loc 1 1939 0
 2275              		@ sp needed
 2276 0002 7047     		bx	lr
 2277              		.cfi_endproc
 2278              	.LFE50:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 88


 2279              		.size	uxQueueMessagesWaitingFromISR, .-uxQueueMessagesWaitingFromISR
 2280              		.section	.text.xQueueIsQueueEmptyFromISR,"ax",%progbits
 2281              		.align	2
 2282              		.global	xQueueIsQueueEmptyFromISR
 2283              		.code	16
 2284              		.thumb_func
 2285              		.type	xQueueIsQueueEmptyFromISR, %function
 2286              	xQueueIsQueueEmptyFromISR:
 2287              	.LFB57:
2280:..\FreeRTOS10/queue.c **** BaseType_t xReturn;
 2288              		.loc 1 2280 0
 2289              		.cfi_startproc
 2290              		@ args = 0, pretend = 0, frame = 0
 2291              		@ frame_needed = 0, uses_anonymous_args = 0
 2292              		@ link register save eliminated.
 2293              	.LVL371:
2284:..\FreeRTOS10/queue.c **** 	{
 2294              		.loc 1 2284 0
 2295 0000 836B     		ldr	r3, [r0, #56]
 2296 0002 002B     		cmp	r3, #0
 2297 0004 01D1     		bne	.L136
2286:..\FreeRTOS10/queue.c **** 	}
 2298              		.loc 1 2286 0
 2299 0006 0120     		movs	r0, #1
 2300              	.LVL372:
 2301 0008 00E0     		b	.L135
 2302              	.LVL373:
 2303              	.L136:
2290:..\FreeRTOS10/queue.c **** 	}
 2304              		.loc 1 2290 0
 2305 000a 0020     		movs	r0, #0
 2306              	.LVL374:
 2307              	.L135:
2294:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 2308              		.loc 1 2294 0
 2309              		@ sp needed
 2310 000c 7047     		bx	lr
 2311              		.cfi_endproc
 2312              	.LFE57:
 2313              		.size	xQueueIsQueueEmptyFromISR, .-xQueueIsQueueEmptyFromISR
 2314 000e C046     		.section	.text.xQueueIsQueueFullFromISR,"ax",%progbits
 2315              		.align	2
 2316              		.global	xQueueIsQueueFullFromISR
 2317              		.code	16
 2318              		.thumb_func
 2319              		.type	xQueueIsQueueFullFromISR, %function
 2320              	xQueueIsQueueFullFromISR:
 2321              	.LFB59:
2316:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
2317:..\FreeRTOS10/queue.c **** 
2318:..\FreeRTOS10/queue.c **** BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
2319:..\FreeRTOS10/queue.c **** {
 2322              		.loc 1 2319 0
 2323              		.cfi_startproc
 2324              		@ args = 0, pretend = 0, frame = 0
 2325              		@ frame_needed = 0, uses_anonymous_args = 0
 2326              		@ link register save eliminated.
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 89


 2327              	.LVL375:
2320:..\FreeRTOS10/queue.c **** BaseType_t xReturn;
2321:..\FreeRTOS10/queue.c **** 
2322:..\FreeRTOS10/queue.c **** 	configASSERT( xQueue );
2323:..\FreeRTOS10/queue.c **** 	if( ( ( Queue_t * ) xQueue )->uxMessagesWaiting == ( ( Queue_t * ) xQueue )->uxLength )
 2328              		.loc 1 2323 0
 2329 0000 826B     		ldr	r2, [r0, #56]
 2330 0002 C36B     		ldr	r3, [r0, #60]
 2331 0004 9A42     		cmp	r2, r3
 2332 0006 01D1     		bne	.L139
2324:..\FreeRTOS10/queue.c **** 	{
2325:..\FreeRTOS10/queue.c **** 		xReturn = pdTRUE;
 2333              		.loc 1 2325 0
 2334 0008 0120     		movs	r0, #1
 2335              	.LVL376:
 2336 000a 00E0     		b	.L138
 2337              	.LVL377:
 2338              	.L139:
2326:..\FreeRTOS10/queue.c **** 	}
2327:..\FreeRTOS10/queue.c **** 	else
2328:..\FreeRTOS10/queue.c **** 	{
2329:..\FreeRTOS10/queue.c **** 		xReturn = pdFALSE;
 2339              		.loc 1 2329 0
 2340 000c 0020     		movs	r0, #0
 2341              	.LVL378:
 2342              	.L138:
2330:..\FreeRTOS10/queue.c **** 	}
2331:..\FreeRTOS10/queue.c **** 
2332:..\FreeRTOS10/queue.c **** 	return xReturn;
2333:..\FreeRTOS10/queue.c **** } /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2343              		.loc 1 2333 0
 2344              		@ sp needed
 2345 000e 7047     		bx	lr
 2346              		.cfi_endproc
 2347              	.LFE59:
 2348              		.size	xQueueIsQueueFullFromISR, .-xQueueIsQueueFullFromISR
 2349              		.section	.text.vQueueAddToRegistry,"ax",%progbits
 2350              		.align	2
 2351              		.global	vQueueAddToRegistry
 2352              		.code	16
 2353              		.thumb_func
 2354              		.type	vQueueAddToRegistry, %function
 2355              	vQueueAddToRegistry:
 2356              	.LFB60:
2334:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
2335:..\FreeRTOS10/queue.c **** 
2336:..\FreeRTOS10/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2337:..\FreeRTOS10/queue.c **** 
2338:..\FreeRTOS10/queue.c **** 	BaseType_t xQueueCRSend( QueueHandle_t xQueue, const void *pvItemToQueue, TickType_t xTicksToWait 
2339:..\FreeRTOS10/queue.c **** 	{
2340:..\FreeRTOS10/queue.c **** 	BaseType_t xReturn;
2341:..\FreeRTOS10/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2342:..\FreeRTOS10/queue.c **** 
2343:..\FreeRTOS10/queue.c **** 		/* If the queue is already full we may have to block.  A critical section
2344:..\FreeRTOS10/queue.c **** 		is required to prevent an interrupt removing something from the queue
2345:..\FreeRTOS10/queue.c **** 		between the check to see if the queue is full and blocking on the queue. */
2346:..\FreeRTOS10/queue.c **** 		portDISABLE_INTERRUPTS();
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 90


2347:..\FreeRTOS10/queue.c **** 		{
2348:..\FreeRTOS10/queue.c **** 			if( prvIsQueueFull( pxQueue ) != pdFALSE )
2349:..\FreeRTOS10/queue.c **** 			{
2350:..\FreeRTOS10/queue.c **** 				/* The queue is full - do we want to block or just leave without
2351:..\FreeRTOS10/queue.c **** 				posting? */
2352:..\FreeRTOS10/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2353:..\FreeRTOS10/queue.c **** 				{
2354:..\FreeRTOS10/queue.c **** 					/* As this is called from a coroutine we cannot block directly, but
2355:..\FreeRTOS10/queue.c **** 					return indicating that we need to block. */
2356:..\FreeRTOS10/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToSend ) );
2357:..\FreeRTOS10/queue.c **** 					portENABLE_INTERRUPTS();
2358:..\FreeRTOS10/queue.c **** 					return errQUEUE_BLOCKED;
2359:..\FreeRTOS10/queue.c **** 				}
2360:..\FreeRTOS10/queue.c **** 				else
2361:..\FreeRTOS10/queue.c **** 				{
2362:..\FreeRTOS10/queue.c **** 					portENABLE_INTERRUPTS();
2363:..\FreeRTOS10/queue.c **** 					return errQUEUE_FULL;
2364:..\FreeRTOS10/queue.c **** 				}
2365:..\FreeRTOS10/queue.c **** 			}
2366:..\FreeRTOS10/queue.c **** 		}
2367:..\FreeRTOS10/queue.c **** 		portENABLE_INTERRUPTS();
2368:..\FreeRTOS10/queue.c **** 
2369:..\FreeRTOS10/queue.c **** 		portDISABLE_INTERRUPTS();
2370:..\FreeRTOS10/queue.c **** 		{
2371:..\FreeRTOS10/queue.c **** 			if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2372:..\FreeRTOS10/queue.c **** 			{
2373:..\FreeRTOS10/queue.c **** 				/* There is room in the queue, copy the data into the queue. */
2374:..\FreeRTOS10/queue.c **** 				prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2375:..\FreeRTOS10/queue.c **** 				xReturn = pdPASS;
2376:..\FreeRTOS10/queue.c **** 
2377:..\FreeRTOS10/queue.c **** 				/* Were any co-routines waiting for data to become available? */
2378:..\FreeRTOS10/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2379:..\FreeRTOS10/queue.c **** 				{
2380:..\FreeRTOS10/queue.c **** 					/* In this instance the co-routine could be placed directly
2381:..\FreeRTOS10/queue.c **** 					into the ready list as we are within a critical section.
2382:..\FreeRTOS10/queue.c **** 					Instead the same pending ready list mechanism is used as if
2383:..\FreeRTOS10/queue.c **** 					the event were caused from within an interrupt. */
2384:..\FreeRTOS10/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2385:..\FreeRTOS10/queue.c **** 					{
2386:..\FreeRTOS10/queue.c **** 						/* The co-routine waiting has a higher priority so record
2387:..\FreeRTOS10/queue.c **** 						that a yield might be appropriate. */
2388:..\FreeRTOS10/queue.c **** 						xReturn = errQUEUE_YIELD;
2389:..\FreeRTOS10/queue.c **** 					}
2390:..\FreeRTOS10/queue.c **** 					else
2391:..\FreeRTOS10/queue.c **** 					{
2392:..\FreeRTOS10/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2393:..\FreeRTOS10/queue.c **** 					}
2394:..\FreeRTOS10/queue.c **** 				}
2395:..\FreeRTOS10/queue.c **** 				else
2396:..\FreeRTOS10/queue.c **** 				{
2397:..\FreeRTOS10/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2398:..\FreeRTOS10/queue.c **** 				}
2399:..\FreeRTOS10/queue.c **** 			}
2400:..\FreeRTOS10/queue.c **** 			else
2401:..\FreeRTOS10/queue.c **** 			{
2402:..\FreeRTOS10/queue.c **** 				xReturn = errQUEUE_FULL;
2403:..\FreeRTOS10/queue.c **** 			}
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 91


2404:..\FreeRTOS10/queue.c **** 		}
2405:..\FreeRTOS10/queue.c **** 		portENABLE_INTERRUPTS();
2406:..\FreeRTOS10/queue.c **** 
2407:..\FreeRTOS10/queue.c **** 		return xReturn;
2408:..\FreeRTOS10/queue.c **** 	}
2409:..\FreeRTOS10/queue.c **** 
2410:..\FreeRTOS10/queue.c **** #endif /* configUSE_CO_ROUTINES */
2411:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
2412:..\FreeRTOS10/queue.c **** 
2413:..\FreeRTOS10/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2414:..\FreeRTOS10/queue.c **** 
2415:..\FreeRTOS10/queue.c **** 	BaseType_t xQueueCRReceive( QueueHandle_t xQueue, void *pvBuffer, TickType_t xTicksToWait )
2416:..\FreeRTOS10/queue.c **** 	{
2417:..\FreeRTOS10/queue.c **** 	BaseType_t xReturn;
2418:..\FreeRTOS10/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2419:..\FreeRTOS10/queue.c **** 
2420:..\FreeRTOS10/queue.c **** 		/* If the queue is already empty we may have to block.  A critical section
2421:..\FreeRTOS10/queue.c **** 		is required to prevent an interrupt adding something to the queue
2422:..\FreeRTOS10/queue.c **** 		between the check to see if the queue is empty and blocking on the queue. */
2423:..\FreeRTOS10/queue.c **** 		portDISABLE_INTERRUPTS();
2424:..\FreeRTOS10/queue.c **** 		{
2425:..\FreeRTOS10/queue.c **** 			if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
2426:..\FreeRTOS10/queue.c **** 			{
2427:..\FreeRTOS10/queue.c **** 				/* There are no messages in the queue, do we want to block or just
2428:..\FreeRTOS10/queue.c **** 				leave with nothing? */
2429:..\FreeRTOS10/queue.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
2430:..\FreeRTOS10/queue.c **** 				{
2431:..\FreeRTOS10/queue.c **** 					/* As this is a co-routine we cannot block directly, but return
2432:..\FreeRTOS10/queue.c **** 					indicating that we need to block. */
2433:..\FreeRTOS10/queue.c **** 					vCoRoutineAddToDelayedList( xTicksToWait, &( pxQueue->xTasksWaitingToReceive ) );
2434:..\FreeRTOS10/queue.c **** 					portENABLE_INTERRUPTS();
2435:..\FreeRTOS10/queue.c **** 					return errQUEUE_BLOCKED;
2436:..\FreeRTOS10/queue.c **** 				}
2437:..\FreeRTOS10/queue.c **** 				else
2438:..\FreeRTOS10/queue.c **** 				{
2439:..\FreeRTOS10/queue.c **** 					portENABLE_INTERRUPTS();
2440:..\FreeRTOS10/queue.c **** 					return errQUEUE_FULL;
2441:..\FreeRTOS10/queue.c **** 				}
2442:..\FreeRTOS10/queue.c **** 			}
2443:..\FreeRTOS10/queue.c **** 			else
2444:..\FreeRTOS10/queue.c **** 			{
2445:..\FreeRTOS10/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2446:..\FreeRTOS10/queue.c **** 			}
2447:..\FreeRTOS10/queue.c **** 		}
2448:..\FreeRTOS10/queue.c **** 		portENABLE_INTERRUPTS();
2449:..\FreeRTOS10/queue.c **** 
2450:..\FreeRTOS10/queue.c **** 		portDISABLE_INTERRUPTS();
2451:..\FreeRTOS10/queue.c **** 		{
2452:..\FreeRTOS10/queue.c **** 			if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2453:..\FreeRTOS10/queue.c **** 			{
2454:..\FreeRTOS10/queue.c **** 				/* Data is available from the queue. */
2455:..\FreeRTOS10/queue.c **** 				pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2456:..\FreeRTOS10/queue.c **** 				if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2457:..\FreeRTOS10/queue.c **** 				{
2458:..\FreeRTOS10/queue.c **** 					pxQueue->u.pcReadFrom = pxQueue->pcHead;
2459:..\FreeRTOS10/queue.c **** 				}
2460:..\FreeRTOS10/queue.c **** 				else
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 92


2461:..\FreeRTOS10/queue.c **** 				{
2462:..\FreeRTOS10/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2463:..\FreeRTOS10/queue.c **** 				}
2464:..\FreeRTOS10/queue.c **** 				--( pxQueue->uxMessagesWaiting );
2465:..\FreeRTOS10/queue.c **** 				( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->u
2466:..\FreeRTOS10/queue.c **** 
2467:..\FreeRTOS10/queue.c **** 				xReturn = pdPASS;
2468:..\FreeRTOS10/queue.c **** 
2469:..\FreeRTOS10/queue.c **** 				/* Were any co-routines waiting for space to become available? */
2470:..\FreeRTOS10/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2471:..\FreeRTOS10/queue.c **** 				{
2472:..\FreeRTOS10/queue.c **** 					/* In this instance the co-routine could be placed directly
2473:..\FreeRTOS10/queue.c **** 					into the ready list as we are within a critical section.
2474:..\FreeRTOS10/queue.c **** 					Instead the same pending ready list mechanism is used as if
2475:..\FreeRTOS10/queue.c **** 					the event were caused from within an interrupt. */
2476:..\FreeRTOS10/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2477:..\FreeRTOS10/queue.c **** 					{
2478:..\FreeRTOS10/queue.c **** 						xReturn = errQUEUE_YIELD;
2479:..\FreeRTOS10/queue.c **** 					}
2480:..\FreeRTOS10/queue.c **** 					else
2481:..\FreeRTOS10/queue.c **** 					{
2482:..\FreeRTOS10/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2483:..\FreeRTOS10/queue.c **** 					}
2484:..\FreeRTOS10/queue.c **** 				}
2485:..\FreeRTOS10/queue.c **** 				else
2486:..\FreeRTOS10/queue.c **** 				{
2487:..\FreeRTOS10/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2488:..\FreeRTOS10/queue.c **** 				}
2489:..\FreeRTOS10/queue.c **** 			}
2490:..\FreeRTOS10/queue.c **** 			else
2491:..\FreeRTOS10/queue.c **** 			{
2492:..\FreeRTOS10/queue.c **** 				xReturn = pdFAIL;
2493:..\FreeRTOS10/queue.c **** 			}
2494:..\FreeRTOS10/queue.c **** 		}
2495:..\FreeRTOS10/queue.c **** 		portENABLE_INTERRUPTS();
2496:..\FreeRTOS10/queue.c **** 
2497:..\FreeRTOS10/queue.c **** 		return xReturn;
2498:..\FreeRTOS10/queue.c **** 	}
2499:..\FreeRTOS10/queue.c **** 
2500:..\FreeRTOS10/queue.c **** #endif /* configUSE_CO_ROUTINES */
2501:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
2502:..\FreeRTOS10/queue.c **** 
2503:..\FreeRTOS10/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2504:..\FreeRTOS10/queue.c **** 
2505:..\FreeRTOS10/queue.c **** 	BaseType_t xQueueCRSendFromISR( QueueHandle_t xQueue, const void *pvItemToQueue, BaseType_t xCoRou
2506:..\FreeRTOS10/queue.c **** 	{
2507:..\FreeRTOS10/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2508:..\FreeRTOS10/queue.c **** 
2509:..\FreeRTOS10/queue.c **** 		/* Cannot block within an ISR so if there is no space on the queue then
2510:..\FreeRTOS10/queue.c **** 		exit without doing anything. */
2511:..\FreeRTOS10/queue.c **** 		if( pxQueue->uxMessagesWaiting < pxQueue->uxLength )
2512:..\FreeRTOS10/queue.c **** 		{
2513:..\FreeRTOS10/queue.c **** 			prvCopyDataToQueue( pxQueue, pvItemToQueue, queueSEND_TO_BACK );
2514:..\FreeRTOS10/queue.c **** 
2515:..\FreeRTOS10/queue.c **** 			/* We only want to wake one co-routine per ISR, so check that a
2516:..\FreeRTOS10/queue.c **** 			co-routine has not already been woken. */
2517:..\FreeRTOS10/queue.c **** 			if( xCoRoutinePreviouslyWoken == pdFALSE )
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 93


2518:..\FreeRTOS10/queue.c **** 			{
2519:..\FreeRTOS10/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
2520:..\FreeRTOS10/queue.c **** 				{
2521:..\FreeRTOS10/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
2522:..\FreeRTOS10/queue.c **** 					{
2523:..\FreeRTOS10/queue.c **** 						return pdTRUE;
2524:..\FreeRTOS10/queue.c **** 					}
2525:..\FreeRTOS10/queue.c **** 					else
2526:..\FreeRTOS10/queue.c **** 					{
2527:..\FreeRTOS10/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2528:..\FreeRTOS10/queue.c **** 					}
2529:..\FreeRTOS10/queue.c **** 				}
2530:..\FreeRTOS10/queue.c **** 				else
2531:..\FreeRTOS10/queue.c **** 				{
2532:..\FreeRTOS10/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2533:..\FreeRTOS10/queue.c **** 				}
2534:..\FreeRTOS10/queue.c **** 			}
2535:..\FreeRTOS10/queue.c **** 			else
2536:..\FreeRTOS10/queue.c **** 			{
2537:..\FreeRTOS10/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2538:..\FreeRTOS10/queue.c **** 			}
2539:..\FreeRTOS10/queue.c **** 		}
2540:..\FreeRTOS10/queue.c **** 		else
2541:..\FreeRTOS10/queue.c **** 		{
2542:..\FreeRTOS10/queue.c **** 			mtCOVERAGE_TEST_MARKER();
2543:..\FreeRTOS10/queue.c **** 		}
2544:..\FreeRTOS10/queue.c **** 
2545:..\FreeRTOS10/queue.c **** 		return xCoRoutinePreviouslyWoken;
2546:..\FreeRTOS10/queue.c **** 	}
2547:..\FreeRTOS10/queue.c **** 
2548:..\FreeRTOS10/queue.c **** #endif /* configUSE_CO_ROUTINES */
2549:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
2550:..\FreeRTOS10/queue.c **** 
2551:..\FreeRTOS10/queue.c **** #if ( configUSE_CO_ROUTINES == 1 )
2552:..\FreeRTOS10/queue.c **** 
2553:..\FreeRTOS10/queue.c **** 	BaseType_t xQueueCRReceiveFromISR( QueueHandle_t xQueue, void *pvBuffer, BaseType_t *pxCoRoutineWo
2554:..\FreeRTOS10/queue.c **** 	{
2555:..\FreeRTOS10/queue.c **** 	BaseType_t xReturn;
2556:..\FreeRTOS10/queue.c **** 	Queue_t * const pxQueue = ( Queue_t * ) xQueue;
2557:..\FreeRTOS10/queue.c **** 
2558:..\FreeRTOS10/queue.c **** 		/* We cannot block from an ISR, so check there is data available. If
2559:..\FreeRTOS10/queue.c **** 		not then just leave without doing anything. */
2560:..\FreeRTOS10/queue.c **** 		if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
2561:..\FreeRTOS10/queue.c **** 		{
2562:..\FreeRTOS10/queue.c **** 			/* Copy the data from the queue. */
2563:..\FreeRTOS10/queue.c **** 			pxQueue->u.pcReadFrom += pxQueue->uxItemSize;
2564:..\FreeRTOS10/queue.c **** 			if( pxQueue->u.pcReadFrom >= pxQueue->pcTail )
2565:..\FreeRTOS10/queue.c **** 			{
2566:..\FreeRTOS10/queue.c **** 				pxQueue->u.pcReadFrom = pxQueue->pcHead;
2567:..\FreeRTOS10/queue.c **** 			}
2568:..\FreeRTOS10/queue.c **** 			else
2569:..\FreeRTOS10/queue.c **** 			{
2570:..\FreeRTOS10/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2571:..\FreeRTOS10/queue.c **** 			}
2572:..\FreeRTOS10/queue.c **** 			--( pxQueue->uxMessagesWaiting );
2573:..\FreeRTOS10/queue.c **** 			( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.pcReadFrom, ( unsigned ) pxQueue->ux
2574:..\FreeRTOS10/queue.c **** 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 94


2575:..\FreeRTOS10/queue.c **** 			if( ( *pxCoRoutineWoken ) == pdFALSE )
2576:..\FreeRTOS10/queue.c **** 			{
2577:..\FreeRTOS10/queue.c **** 				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
2578:..\FreeRTOS10/queue.c **** 				{
2579:..\FreeRTOS10/queue.c **** 					if( xCoRoutineRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
2580:..\FreeRTOS10/queue.c **** 					{
2581:..\FreeRTOS10/queue.c **** 						*pxCoRoutineWoken = pdTRUE;
2582:..\FreeRTOS10/queue.c **** 					}
2583:..\FreeRTOS10/queue.c **** 					else
2584:..\FreeRTOS10/queue.c **** 					{
2585:..\FreeRTOS10/queue.c **** 						mtCOVERAGE_TEST_MARKER();
2586:..\FreeRTOS10/queue.c **** 					}
2587:..\FreeRTOS10/queue.c **** 				}
2588:..\FreeRTOS10/queue.c **** 				else
2589:..\FreeRTOS10/queue.c **** 				{
2590:..\FreeRTOS10/queue.c **** 					mtCOVERAGE_TEST_MARKER();
2591:..\FreeRTOS10/queue.c **** 				}
2592:..\FreeRTOS10/queue.c **** 			}
2593:..\FreeRTOS10/queue.c **** 			else
2594:..\FreeRTOS10/queue.c **** 			{
2595:..\FreeRTOS10/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2596:..\FreeRTOS10/queue.c **** 			}
2597:..\FreeRTOS10/queue.c **** 
2598:..\FreeRTOS10/queue.c **** 			xReturn = pdPASS;
2599:..\FreeRTOS10/queue.c **** 		}
2600:..\FreeRTOS10/queue.c **** 		else
2601:..\FreeRTOS10/queue.c **** 		{
2602:..\FreeRTOS10/queue.c **** 			xReturn = pdFAIL;
2603:..\FreeRTOS10/queue.c **** 		}
2604:..\FreeRTOS10/queue.c **** 
2605:..\FreeRTOS10/queue.c **** 		return xReturn;
2606:..\FreeRTOS10/queue.c **** 	}
2607:..\FreeRTOS10/queue.c **** 
2608:..\FreeRTOS10/queue.c **** #endif /* configUSE_CO_ROUTINES */
2609:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
2610:..\FreeRTOS10/queue.c **** 
2611:..\FreeRTOS10/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2612:..\FreeRTOS10/queue.c **** 
2613:..\FreeRTOS10/queue.c **** 	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified
2614:..\FreeRTOS10/queue.c **** 	{
 2357              		.loc 1 2614 0
 2358              		.cfi_startproc
 2359              		@ args = 0, pretend = 0, frame = 0
 2360              		@ frame_needed = 0, uses_anonymous_args = 0
 2361              	.LVL379:
 2362 0000 10B5     		push	{r4, lr}
 2363              		.cfi_def_cfa_offset 8
 2364              		.cfi_offset 4, -8
 2365              		.cfi_offset 14, -4
 2366              	.LVL380:
2615:..\FreeRTOS10/queue.c **** 	UBaseType_t ux;
2616:..\FreeRTOS10/queue.c **** 
2617:..\FreeRTOS10/queue.c **** 		/* See if there is an empty space in the registry.  A NULL name denotes
2618:..\FreeRTOS10/queue.c **** 		a free slot. */
2619:..\FreeRTOS10/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2367              		.loc 1 2619 0
 2368 0002 0023     		movs	r3, #0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 95


 2369 0004 0AE0     		b	.L141
 2370              	.LVL381:
 2371              	.L144:
2620:..\FreeRTOS10/queue.c **** 		{
2621:..\FreeRTOS10/queue.c **** 			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 2372              		.loc 1 2621 0
 2373 0006 DA00     		lsls	r2, r3, #3
 2374 0008 064C     		ldr	r4, .L145
 2375 000a 1259     		ldr	r2, [r2, r4]
 2376 000c 002A     		cmp	r2, #0
 2377 000e 04D1     		bne	.L142
2622:..\FreeRTOS10/queue.c **** 			{
2623:..\FreeRTOS10/queue.c **** 				/* Store the information on this queue. */
2624:..\FreeRTOS10/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 2378              		.loc 1 2624 0
 2379 0010 DB00     		lsls	r3, r3, #3
 2380              	.LVL382:
 2381 0012 1951     		str	r1, [r3, r4]
2625:..\FreeRTOS10/queue.c **** 				xQueueRegistry[ ux ].xHandle = xQueue;
 2382              		.loc 1 2625 0
 2383 0014 E318     		adds	r3, r4, r3
 2384 0016 5860     		str	r0, [r3, #4]
2626:..\FreeRTOS10/queue.c **** 
2627:..\FreeRTOS10/queue.c **** 				traceQUEUE_REGISTRY_ADD( xQueue, pcQueueName );
2628:..\FreeRTOS10/queue.c **** 				break;
 2385              		.loc 1 2628 0
 2386 0018 02E0     		b	.L140
 2387              	.LVL383:
 2388              	.L142:
2619:..\FreeRTOS10/queue.c **** 		{
 2389              		.loc 1 2619 0 discriminator 2
 2390 001a 0133     		adds	r3, r3, #1
 2391              	.LVL384:
 2392              	.L141:
2619:..\FreeRTOS10/queue.c **** 		{
 2393              		.loc 1 2619 0 is_stmt 0 discriminator 1
 2394 001c 092B     		cmp	r3, #9
 2395 001e F2D9     		bls	.L144
 2396              	.LVL385:
 2397              	.L140:
2629:..\FreeRTOS10/queue.c **** 			}
2630:..\FreeRTOS10/queue.c **** 			else
2631:..\FreeRTOS10/queue.c **** 			{
2632:..\FreeRTOS10/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2633:..\FreeRTOS10/queue.c **** 			}
2634:..\FreeRTOS10/queue.c **** 		}
2635:..\FreeRTOS10/queue.c **** 	}
 2398              		.loc 1 2635 0 is_stmt 1
 2399              		@ sp needed
 2400 0020 10BD     		pop	{r4, pc}
 2401              	.L146:
 2402 0022 C046     		.align	2
 2403              	.L145:
 2404 0024 00000000 		.word	xQueueRegistry
 2405              		.cfi_endproc
 2406              	.LFE60:
 2407              		.size	vQueueAddToRegistry, .-vQueueAddToRegistry
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 96


 2408              		.section	.text.pcQueueGetName,"ax",%progbits
 2409              		.align	2
 2410              		.global	pcQueueGetName
 2411              		.code	16
 2412              		.thumb_func
 2413              		.type	pcQueueGetName, %function
 2414              	pcQueueGetName:
 2415              	.LFB61:
2636:..\FreeRTOS10/queue.c **** 
2637:..\FreeRTOS10/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2638:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
2639:..\FreeRTOS10/queue.c **** 
2640:..\FreeRTOS10/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2641:..\FreeRTOS10/queue.c **** 
2642:..\FreeRTOS10/queue.c **** 	const char *pcQueueGetName( QueueHandle_t xQueue ) /*lint !e971 Unqualified char types are allowed
2643:..\FreeRTOS10/queue.c **** 	{
 2416              		.loc 1 2643 0
 2417              		.cfi_startproc
 2418              		@ args = 0, pretend = 0, frame = 0
 2419              		@ frame_needed = 0, uses_anonymous_args = 0
 2420              		@ link register save eliminated.
 2421              	.LVL386:
2644:..\FreeRTOS10/queue.c **** 	UBaseType_t ux;
2645:..\FreeRTOS10/queue.c **** 	const char *pcReturn = NULL; /*lint !e971 Unqualified char types are allowed for strings and singl
2646:..\FreeRTOS10/queue.c **** 
2647:..\FreeRTOS10/queue.c **** 		/* Note there is nothing here to protect against another task adding or
2648:..\FreeRTOS10/queue.c **** 		removing entries from the registry while it is being searched. */
2649:..\FreeRTOS10/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 2422              		.loc 1 2649 0
 2423 0000 0022     		movs	r2, #0
 2424 0002 09E0     		b	.L148
 2425              	.LVL387:
 2426              	.L151:
2650:..\FreeRTOS10/queue.c **** 		{
2651:..\FreeRTOS10/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2427              		.loc 1 2651 0
 2428 0004 D300     		lsls	r3, r2, #3
 2429 0006 0649     		ldr	r1, .L152
 2430 0008 CB18     		adds	r3, r1, r3
 2431 000a 5B68     		ldr	r3, [r3, #4]
 2432 000c 8342     		cmp	r3, r0
 2433 000e 02D1     		bne	.L149
2652:..\FreeRTOS10/queue.c **** 			{
2653:..\FreeRTOS10/queue.c **** 				pcReturn = xQueueRegistry[ ux ].pcQueueName;
 2434              		.loc 1 2653 0
 2435 0010 D200     		lsls	r2, r2, #3
 2436              	.LVL388:
 2437 0012 5058     		ldr	r0, [r2, r1]
 2438              	.LVL389:
2654:..\FreeRTOS10/queue.c **** 				break;
 2439              		.loc 1 2654 0
 2440 0014 03E0     		b	.L150
 2441              	.LVL390:
 2442              	.L149:
2649:..\FreeRTOS10/queue.c **** 		{
 2443              		.loc 1 2649 0 discriminator 2
 2444 0016 0132     		adds	r2, r2, #1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 97


 2445              	.LVL391:
 2446              	.L148:
2649:..\FreeRTOS10/queue.c **** 		{
 2447              		.loc 1 2649 0 is_stmt 0 discriminator 1
 2448 0018 092A     		cmp	r2, #9
 2449 001a F3D9     		bls	.L151
2645:..\FreeRTOS10/queue.c **** 
 2450              		.loc 1 2645 0 is_stmt 1
 2451 001c 0020     		movs	r0, #0
 2452              	.LVL392:
 2453              	.L150:
2655:..\FreeRTOS10/queue.c **** 			}
2656:..\FreeRTOS10/queue.c **** 			else
2657:..\FreeRTOS10/queue.c **** 			{
2658:..\FreeRTOS10/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2659:..\FreeRTOS10/queue.c **** 			}
2660:..\FreeRTOS10/queue.c **** 		}
2661:..\FreeRTOS10/queue.c **** 
2662:..\FreeRTOS10/queue.c **** 		return pcReturn;
2663:..\FreeRTOS10/queue.c **** 	} /*lint !e818 xQueue cannot be a pointer to const because it is a typedef. */
 2454              		.loc 1 2663 0
 2455              		@ sp needed
 2456 001e 7047     		bx	lr
 2457              	.L153:
 2458              		.align	2
 2459              	.L152:
 2460 0020 00000000 		.word	xQueueRegistry
 2461              		.cfi_endproc
 2462              	.LFE61:
 2463              		.size	pcQueueGetName, .-pcQueueGetName
 2464              		.section	.text.vQueueUnregisterQueue,"ax",%progbits
 2465              		.align	2
 2466              		.global	vQueueUnregisterQueue
 2467              		.code	16
 2468              		.thumb_func
 2469              		.type	vQueueUnregisterQueue, %function
 2470              	vQueueUnregisterQueue:
 2471              	.LFB62:
2664:..\FreeRTOS10/queue.c **** 
2665:..\FreeRTOS10/queue.c **** #endif /* configQUEUE_REGISTRY_SIZE */
2666:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
2667:..\FreeRTOS10/queue.c **** 
2668:..\FreeRTOS10/queue.c **** #if ( configQUEUE_REGISTRY_SIZE > 0 )
2669:..\FreeRTOS10/queue.c **** 
2670:..\FreeRTOS10/queue.c **** 	void vQueueUnregisterQueue( QueueHandle_t xQueue )
2671:..\FreeRTOS10/queue.c **** 	{
 2472              		.loc 1 2671 0
 2473              		.cfi_startproc
 2474              		@ args = 0, pretend = 0, frame = 0
 2475              		@ frame_needed = 0, uses_anonymous_args = 0
 2476              		@ link register save eliminated.
 2477              	.LVL393:
2672:..\FreeRTOS10/queue.c **** 	UBaseType_t ux;
2673:..\FreeRTOS10/queue.c **** 
2674:..\FreeRTOS10/queue.c **** 		/* See if the handle of the queue being unregistered in actually in the
2675:..\FreeRTOS10/queue.c **** 		registry. */
2676:..\FreeRTOS10/queue.c **** 		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 98


 2478              		.loc 1 2676 0
 2479 0000 0022     		movs	r2, #0
 2480 0002 0CE0     		b	.L155
 2481              	.LVL394:
 2482              	.L158:
2677:..\FreeRTOS10/queue.c **** 		{
2678:..\FreeRTOS10/queue.c **** 			if( xQueueRegistry[ ux ].xHandle == xQueue )
 2483              		.loc 1 2678 0
 2484 0004 D300     		lsls	r3, r2, #3
 2485 0006 0749     		ldr	r1, .L159
 2486 0008 CB18     		adds	r3, r1, r3
 2487 000a 5B68     		ldr	r3, [r3, #4]
 2488 000c 8342     		cmp	r3, r0
 2489 000e 05D1     		bne	.L156
2679:..\FreeRTOS10/queue.c **** 			{
2680:..\FreeRTOS10/queue.c **** 				/* Set the name to NULL to show that this slot if free again. */
2681:..\FreeRTOS10/queue.c **** 				xQueueRegistry[ ux ].pcQueueName = NULL;
 2490              		.loc 1 2681 0
 2491 0010 D200     		lsls	r2, r2, #3
 2492              	.LVL395:
 2493 0012 0023     		movs	r3, #0
 2494 0014 5350     		str	r3, [r2, r1]
2682:..\FreeRTOS10/queue.c **** 
2683:..\FreeRTOS10/queue.c **** 				/* Set the handle to NULL to ensure the same queue handle cannot
2684:..\FreeRTOS10/queue.c **** 				appear in the registry twice if it is added, removed, then
2685:..\FreeRTOS10/queue.c **** 				added again. */
2686:..\FreeRTOS10/queue.c **** 				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 2495              		.loc 1 2686 0
 2496 0016 8A18     		adds	r2, r1, r2
 2497 0018 5360     		str	r3, [r2, #4]
2687:..\FreeRTOS10/queue.c **** 				break;
 2498              		.loc 1 2687 0
 2499 001a 02E0     		b	.L154
 2500              	.LVL396:
 2501              	.L156:
2676:..\FreeRTOS10/queue.c **** 		{
 2502              		.loc 1 2676 0 discriminator 2
 2503 001c 0132     		adds	r2, r2, #1
 2504              	.LVL397:
 2505              	.L155:
2676:..\FreeRTOS10/queue.c **** 		{
 2506              		.loc 1 2676 0 is_stmt 0 discriminator 1
 2507 001e 092A     		cmp	r2, #9
 2508 0020 F0D9     		bls	.L158
 2509              	.LVL398:
 2510              	.L154:
2688:..\FreeRTOS10/queue.c **** 			}
2689:..\FreeRTOS10/queue.c **** 			else
2690:..\FreeRTOS10/queue.c **** 			{
2691:..\FreeRTOS10/queue.c **** 				mtCOVERAGE_TEST_MARKER();
2692:..\FreeRTOS10/queue.c **** 			}
2693:..\FreeRTOS10/queue.c **** 		}
2694:..\FreeRTOS10/queue.c **** 
2695:..\FreeRTOS10/queue.c **** 	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 2511              		.loc 1 2695 0 is_stmt 1
 2512              		@ sp needed
 2513 0022 7047     		bx	lr
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 99


 2514              	.L160:
 2515              		.align	2
 2516              	.L159:
 2517 0024 00000000 		.word	xQueueRegistry
 2518              		.cfi_endproc
 2519              	.LFE62:
 2520              		.size	vQueueUnregisterQueue, .-vQueueUnregisterQueue
 2521              		.section	.text.vQueueDelete,"ax",%progbits
 2522              		.align	2
 2523              		.global	vQueueDelete
 2524              		.code	16
 2525              		.thumb_func
 2526              		.type	vQueueDelete, %function
 2527              	vQueueDelete:
 2528              	.LFB51:
1943:..\FreeRTOS10/queue.c **** Queue_t * const pxQueue = ( Queue_t * ) xQueue;
 2529              		.loc 1 1943 0
 2530              		.cfi_startproc
 2531              		@ args = 0, pretend = 0, frame = 0
 2532              		@ frame_needed = 0, uses_anonymous_args = 0
 2533              	.LVL399:
 2534 0000 10B5     		push	{r4, lr}
 2535              		.cfi_def_cfa_offset 8
 2536              		.cfi_offset 4, -8
 2537              		.cfi_offset 14, -4
 2538 0002 0400     		movs	r4, r0
 2539              	.LVL400:
1951:..\FreeRTOS10/queue.c **** 	}
 2540              		.loc 1 1951 0
 2541 0004 FFF7FEFF 		bl	vQueueUnregisterQueue
 2542              	.LVL401:
1959:..\FreeRTOS10/queue.c **** 	}
 2543              		.loc 1 1959 0
 2544 0008 2000     		movs	r0, r4
 2545 000a FFF7FEFF 		bl	vPortFree
 2546              	.LVL402:
1981:..\FreeRTOS10/queue.c **** /*-----------------------------------------------------------*/
 2547              		.loc 1 1981 0
 2548              		@ sp needed
 2549              	.LVL403:
 2550 000e 10BD     		pop	{r4, pc}
 2551              		.cfi_endproc
 2552              	.LFE51:
 2553              		.size	vQueueDelete, .-vQueueDelete
 2554              		.comm	xQueueRegistry,80,4
 2555              		.text
 2556              	.Letext0:
 2557              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2558              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2559              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 2560              		.file 5 "..\\FreeRTOS10\\portable\\GCC\\ARM_CM0/portmacro.h"
 2561              		.file 6 "..\\FreeRTOS10\\include/list.h"
 2562              		.file 7 "..\\FreeRTOS10\\include/task.h"
 2563              		.file 8 "..\\FreeRTOS10\\include/queue.h"
 2564              		.file 9 "..\\FreeRTOS10\\include/portable.h"
 2565              		.section	.debug_info,"",%progbits
 2566              	.Ldebug_info0:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 100


 2567 0000 40180000 		.4byte	0x1840
 2568 0004 0400     		.2byte	0x4
 2569 0006 00000000 		.4byte	.Ldebug_abbrev0
 2570 000a 04       		.byte	0x4
 2571 000b 01       		.uleb128 0x1
 2572 000c C1020000 		.4byte	.LASF146
 2573 0010 0C       		.byte	0xc
 2574 0011 28020000 		.4byte	.LASF147
 2575 0015 5D050000 		.4byte	.LASF148
 2576 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 2577 001d 00000000 		.4byte	0
 2578 0021 00000000 		.4byte	.Ldebug_line0
 2579 0025 02       		.uleb128 0x2
 2580 0026 5D030000 		.4byte	.LASF3
 2581 002a 02       		.byte	0x2
 2582 002b D8       		.byte	0xd8
 2583 002c 30000000 		.4byte	0x30
 2584 0030 03       		.uleb128 0x3
 2585 0031 04       		.byte	0x4
 2586 0032 07       		.byte	0x7
 2587 0033 9D000000 		.4byte	.LASF0
 2588 0037 04       		.uleb128 0x4
 2589 0038 04       		.byte	0x4
 2590 0039 05       		.byte	0x5
 2591 003a 696E7400 		.ascii	"int\000"
 2592 003e 03       		.uleb128 0x3
 2593 003f 08       		.byte	0x8
 2594 0040 05       		.byte	0x5
 2595 0041 1A050000 		.4byte	.LASF1
 2596 0045 03       		.uleb128 0x3
 2597 0046 08       		.byte	0x8
 2598 0047 04       		.byte	0x4
 2599 0048 A1060000 		.4byte	.LASF2
 2600 004c 02       		.uleb128 0x2
 2601 004d 8A060000 		.4byte	.LASF4
 2602 0051 03       		.byte	0x3
 2603 0052 1B       		.byte	0x1b
 2604 0053 57000000 		.4byte	0x57
 2605 0057 03       		.uleb128 0x3
 2606 0058 01       		.byte	0x1
 2607 0059 06       		.byte	0x6
 2608 005a 4E090000 		.4byte	.LASF5
 2609 005e 02       		.uleb128 0x2
 2610 005f AB070000 		.4byte	.LASF6
 2611 0063 03       		.byte	0x3
 2612 0064 1D       		.byte	0x1d
 2613 0065 69000000 		.4byte	0x69
 2614 0069 03       		.uleb128 0x3
 2615 006a 01       		.byte	0x1
 2616 006b 08       		.byte	0x8
 2617 006c 46080000 		.4byte	.LASF7
 2618 0070 03       		.uleb128 0x3
 2619 0071 02       		.byte	0x2
 2620 0072 05       		.byte	0x5
 2621 0073 08070000 		.4byte	.LASF8
 2622 0077 03       		.uleb128 0x3
 2623 0078 02       		.byte	0x2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 101


 2624 0079 07       		.byte	0x7
 2625 007a 5A090000 		.4byte	.LASF9
 2626 007e 03       		.uleb128 0x3
 2627 007f 04       		.byte	0x4
 2628 0080 05       		.byte	0x5
 2629 0081 1D070000 		.4byte	.LASF10
 2630 0085 02       		.uleb128 0x2
 2631 0086 54080000 		.4byte	.LASF11
 2632 008a 03       		.byte	0x3
 2633 008b 41       		.byte	0x41
 2634 008c 90000000 		.4byte	0x90
 2635 0090 03       		.uleb128 0x3
 2636 0091 04       		.byte	0x4
 2637 0092 07       		.byte	0x7
 2638 0093 DF070000 		.4byte	.LASF12
 2639 0097 03       		.uleb128 0x3
 2640 0098 08       		.byte	0x8
 2641 0099 07       		.byte	0x7
 2642 009a 11020000 		.4byte	.LASF13
 2643 009e 03       		.uleb128 0x3
 2644 009f 04       		.byte	0x4
 2645 00a0 07       		.byte	0x7
 2646 00a1 C5070000 		.4byte	.LASF14
 2647 00a5 05       		.uleb128 0x5
 2648 00a6 04       		.byte	0x4
 2649 00a7 03       		.uleb128 0x3
 2650 00a8 01       		.byte	0x1
 2651 00a9 08       		.byte	0x8
 2652 00aa 49040000 		.4byte	.LASF15
 2653 00ae 06       		.uleb128 0x6
 2654 00af 04       		.byte	0x4
 2655 00b0 B4000000 		.4byte	0xb4
 2656 00b4 07       		.uleb128 0x7
 2657 00b5 A7000000 		.4byte	0xa7
 2658 00b9 06       		.uleb128 0x6
 2659 00ba 04       		.byte	0x4
 2660 00bb BF000000 		.4byte	0xbf
 2661 00bf 08       		.uleb128 0x8
 2662 00c0 02       		.uleb128 0x2
 2663 00c1 D2010000 		.4byte	.LASF16
 2664 00c5 04       		.byte	0x4
 2665 00c6 14       		.byte	0x14
 2666 00c7 4C000000 		.4byte	0x4c
 2667 00cb 02       		.uleb128 0x2
 2668 00cc D9040000 		.4byte	.LASF17
 2669 00d0 04       		.byte	0x4
 2670 00d1 18       		.byte	0x18
 2671 00d2 5E000000 		.4byte	0x5e
 2672 00d6 02       		.uleb128 0x2
 2673 00d7 C9010000 		.4byte	.LASF18
 2674 00db 04       		.byte	0x4
 2675 00dc 30       		.byte	0x30
 2676 00dd 85000000 		.4byte	0x85
 2677 00e1 03       		.uleb128 0x3
 2678 00e2 04       		.byte	0x4
 2679 00e3 04       		.byte	0x4
 2680 00e4 FB010000 		.4byte	.LASF19
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 102


 2681 00e8 03       		.uleb128 0x3
 2682 00e9 08       		.byte	0x8
 2683 00ea 04       		.byte	0x4
 2684 00eb 7B090000 		.4byte	.LASF20
 2685 00ef 02       		.uleb128 0x2
 2686 00f0 3B050000 		.4byte	.LASF21
 2687 00f4 05       		.byte	0x5
 2688 00f5 39       		.byte	0x39
 2689 00f6 7E000000 		.4byte	0x7e
 2690 00fa 02       		.uleb128 0x2
 2691 00fb 68040000 		.4byte	.LASF22
 2692 00ff 05       		.byte	0x5
 2693 0100 3A       		.byte	0x3a
 2694 0101 90000000 		.4byte	0x90
 2695 0105 02       		.uleb128 0x2
 2696 0106 7F060000 		.4byte	.LASF23
 2697 010a 05       		.byte	0x5
 2698 010b 40       		.byte	0x40
 2699 010c D6000000 		.4byte	0xd6
 2700 0110 06       		.uleb128 0x6
 2701 0111 04       		.byte	0x4
 2702 0112 CB000000 		.4byte	0xcb
 2703 0116 09       		.uleb128 0x9
 2704 0117 C7000000 		.4byte	.LASF30
 2705 011b 14       		.byte	0x14
 2706 011c 06       		.byte	0x6
 2707 011d 8C       		.byte	0x8c
 2708 011e 5F010000 		.4byte	0x15f
 2709 0122 0A       		.uleb128 0xa
 2710 0123 12070000 		.4byte	.LASF24
 2711 0127 06       		.byte	0x6
 2712 0128 8F       		.byte	0x8f
 2713 0129 05010000 		.4byte	0x105
 2714 012d 00       		.byte	0
 2715 012e 0A       		.uleb128 0xa
 2716 012f D7050000 		.4byte	.LASF25
 2717 0133 06       		.byte	0x6
 2718 0134 90       		.byte	0x90
 2719 0135 5F010000 		.4byte	0x15f
 2720 0139 04       		.byte	0x4
 2721 013a 0A       		.uleb128 0xa
 2722 013b 7C020000 		.4byte	.LASF26
 2723 013f 06       		.byte	0x6
 2724 0140 91       		.byte	0x91
 2725 0141 5F010000 		.4byte	0x15f
 2726 0145 08       		.byte	0x8
 2727 0146 0A       		.uleb128 0xa
 2728 0147 B5080000 		.4byte	.LASF27
 2729 014b 06       		.byte	0x6
 2730 014c 92       		.byte	0x92
 2731 014d A5000000 		.4byte	0xa5
 2732 0151 0C       		.byte	0xc
 2733 0152 0A       		.uleb128 0xa
 2734 0153 DB060000 		.4byte	.LASF28
 2735 0157 06       		.byte	0x6
 2736 0158 93       		.byte	0x93
 2737 0159 A5000000 		.4byte	0xa5
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 103


 2738 015d 10       		.byte	0x10
 2739 015e 00       		.byte	0
 2740 015f 06       		.uleb128 0x6
 2741 0160 04       		.byte	0x4
 2742 0161 16010000 		.4byte	0x116
 2743 0165 02       		.uleb128 0x2
 2744 0166 4E040000 		.4byte	.LASF29
 2745 016a 06       		.byte	0x6
 2746 016b 96       		.byte	0x96
 2747 016c 16010000 		.4byte	0x116
 2748 0170 09       		.uleb128 0x9
 2749 0171 81030000 		.4byte	.LASF31
 2750 0175 0C       		.byte	0xc
 2751 0176 06       		.byte	0x6
 2752 0177 98       		.byte	0x98
 2753 0178 A1010000 		.4byte	0x1a1
 2754 017c 0A       		.uleb128 0xa
 2755 017d 12070000 		.4byte	.LASF24
 2756 0181 06       		.byte	0x6
 2757 0182 9B       		.byte	0x9b
 2758 0183 05010000 		.4byte	0x105
 2759 0187 00       		.byte	0
 2760 0188 0A       		.uleb128 0xa
 2761 0189 D7050000 		.4byte	.LASF25
 2762 018d 06       		.byte	0x6
 2763 018e 9C       		.byte	0x9c
 2764 018f 5F010000 		.4byte	0x15f
 2765 0193 04       		.byte	0x4
 2766 0194 0A       		.uleb128 0xa
 2767 0195 7C020000 		.4byte	.LASF26
 2768 0199 06       		.byte	0x6
 2769 019a 9D       		.byte	0x9d
 2770 019b 5F010000 		.4byte	0x15f
 2771 019f 08       		.byte	0x8
 2772 01a0 00       		.byte	0
 2773 01a1 02       		.uleb128 0x2
 2774 01a2 CA040000 		.4byte	.LASF32
 2775 01a6 06       		.byte	0x6
 2776 01a7 9F       		.byte	0x9f
 2777 01a8 70010000 		.4byte	0x170
 2778 01ac 09       		.uleb128 0x9
 2779 01ad 91030000 		.4byte	.LASF33
 2780 01b1 14       		.byte	0x14
 2781 01b2 06       		.byte	0x6
 2782 01b3 A4       		.byte	0xa4
 2783 01b4 DD010000 		.4byte	0x1dd
 2784 01b8 0A       		.uleb128 0xa
 2785 01b9 00000000 		.4byte	.LASF34
 2786 01bd 06       		.byte	0x6
 2787 01be A7       		.byte	0xa7
 2788 01bf DD010000 		.4byte	0x1dd
 2789 01c3 00       		.byte	0
 2790 01c4 0A       		.uleb128 0xa
 2791 01c5 AA000000 		.4byte	.LASF35
 2792 01c9 06       		.byte	0x6
 2793 01ca A8       		.byte	0xa8
 2794 01cb E2010000 		.4byte	0x1e2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 104


 2795 01cf 04       		.byte	0x4
 2796 01d0 0A       		.uleb128 0xa
 2797 01d1 A3040000 		.4byte	.LASF36
 2798 01d5 06       		.byte	0x6
 2799 01d6 A9       		.byte	0xa9
 2800 01d7 A1010000 		.4byte	0x1a1
 2801 01db 08       		.byte	0x8
 2802 01dc 00       		.byte	0
 2803 01dd 0B       		.uleb128 0xb
 2804 01de FA000000 		.4byte	0xfa
 2805 01e2 06       		.uleb128 0x6
 2806 01e3 04       		.byte	0x4
 2807 01e4 65010000 		.4byte	0x165
 2808 01e8 02       		.uleb128 0x2
 2809 01e9 5D060000 		.4byte	.LASF37
 2810 01ed 06       		.byte	0x6
 2811 01ee AB       		.byte	0xab
 2812 01ef AC010000 		.4byte	0x1ac
 2813 01f3 09       		.uleb128 0x9
 2814 01f4 B2000000 		.4byte	.LASF38
 2815 01f8 08       		.byte	0x8
 2816 01f9 07       		.byte	0x7
 2817 01fa 5E       		.byte	0x5e
 2818 01fb 18020000 		.4byte	0x218
 2819 01ff 0A       		.uleb128 0xa
 2820 0200 19010000 		.4byte	.LASF39
 2821 0204 07       		.byte	0x7
 2822 0205 60       		.byte	0x60
 2823 0206 EF000000 		.4byte	0xef
 2824 020a 00       		.byte	0
 2825 020b 0A       		.uleb128 0xa
 2826 020c B3050000 		.4byte	.LASF40
 2827 0210 07       		.byte	0x7
 2828 0211 61       		.byte	0x61
 2829 0212 05010000 		.4byte	0x105
 2830 0216 04       		.byte	0x4
 2831 0217 00       		.byte	0
 2832 0218 02       		.uleb128 0x2
 2833 0219 F3050000 		.4byte	.LASF41
 2834 021d 07       		.byte	0x7
 2835 021e 62       		.byte	0x62
 2836 021f F3010000 		.4byte	0x1f3
 2837 0223 02       		.uleb128 0x2
 2838 0224 95040000 		.4byte	.LASF42
 2839 0228 08       		.byte	0x8
 2840 0229 2F       		.byte	0x2f
 2841 022a A5000000 		.4byte	0xa5
 2842 022e 0C       		.uleb128 0xc
 2843 022f 04       		.byte	0x4
 2844 0230 01       		.byte	0x1
 2845 0231 5F       		.byte	0x5f
 2846 0232 4D020000 		.4byte	0x24d
 2847 0236 0D       		.uleb128 0xd
 2848 0237 7B010000 		.4byte	.LASF43
 2849 023b 01       		.byte	0x1
 2850 023c 61       		.byte	0x61
 2851 023d 4D020000 		.4byte	0x24d
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 105


 2852 0241 0D       		.uleb128 0xd
 2853 0242 06080000 		.4byte	.LASF44
 2854 0246 01       		.byte	0x1
 2855 0247 62       		.byte	0x62
 2856 0248 FA000000 		.4byte	0xfa
 2857 024c 00       		.byte	0
 2858 024d 06       		.uleb128 0x6
 2859 024e 04       		.byte	0x4
 2860 024f C0000000 		.4byte	0xc0
 2861 0253 09       		.uleb128 0x9
 2862 0254 01020000 		.4byte	.LASF45
 2863 0258 48       		.byte	0x48
 2864 0259 01       		.byte	0x1
 2865 025a 59       		.byte	0x59
 2866 025b E2020000 		.4byte	0x2e2
 2867 025f 0A       		.uleb128 0xa
 2868 0260 F2080000 		.4byte	.LASF46
 2869 0264 01       		.byte	0x1
 2870 0265 5B       		.byte	0x5b
 2871 0266 4D020000 		.4byte	0x24d
 2872 026a 00       		.byte	0
 2873 026b 0A       		.uleb128 0xa
 2874 026c A4070000 		.4byte	.LASF47
 2875 0270 01       		.byte	0x1
 2876 0271 5C       		.byte	0x5c
 2877 0272 4D020000 		.4byte	0x24d
 2878 0276 04       		.byte	0x4
 2879 0277 0A       		.uleb128 0xa
 2880 0278 75060000 		.4byte	.LASF48
 2881 027c 01       		.byte	0x1
 2882 027d 5D       		.byte	0x5d
 2883 027e 4D020000 		.4byte	0x24d
 2884 0282 08       		.byte	0x8
 2885 0283 0E       		.uleb128 0xe
 2886 0284 7500     		.ascii	"u\000"
 2887 0286 01       		.byte	0x1
 2888 0287 63       		.byte	0x63
 2889 0288 2E020000 		.4byte	0x22e
 2890 028c 0C       		.byte	0xc
 2891 028d 0A       		.uleb128 0xa
 2892 028e E6000000 		.4byte	.LASF49
 2893 0292 01       		.byte	0x1
 2894 0293 65       		.byte	0x65
 2895 0294 E8010000 		.4byte	0x1e8
 2896 0298 10       		.byte	0x10
 2897 0299 0A       		.uleb128 0xa
 2898 029a 50000000 		.4byte	.LASF50
 2899 029e 01       		.byte	0x1
 2900 029f 66       		.byte	0x66
 2901 02a0 E8010000 		.4byte	0x1e8
 2902 02a4 24       		.byte	0x24
 2903 02a5 0A       		.uleb128 0xa
 2904 02a6 87020000 		.4byte	.LASF51
 2905 02aa 01       		.byte	0x1
 2906 02ab 68       		.byte	0x68
 2907 02ac DD010000 		.4byte	0x1dd
 2908 02b0 38       		.byte	0x38
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 106


 2909 02b1 0A       		.uleb128 0xa
 2910 02b2 FF060000 		.4byte	.LASF52
 2911 02b6 01       		.byte	0x1
 2912 02b7 69       		.byte	0x69
 2913 02b8 FA000000 		.4byte	0xfa
 2914 02bc 3C       		.byte	0x3c
 2915 02bd 0A       		.uleb128 0xa
 2916 02be 09040000 		.4byte	.LASF53
 2917 02c2 01       		.byte	0x1
 2918 02c3 6A       		.byte	0x6a
 2919 02c4 FA000000 		.4byte	0xfa
 2920 02c8 40       		.byte	0x40
 2921 02c9 0A       		.uleb128 0xa
 2922 02ca 8C090000 		.4byte	.LASF54
 2923 02ce 01       		.byte	0x1
 2924 02cf 6C       		.byte	0x6c
 2925 02d0 E2020000 		.4byte	0x2e2
 2926 02d4 44       		.byte	0x44
 2927 02d5 0A       		.uleb128 0xa
 2928 02d6 11010000 		.4byte	.LASF55
 2929 02da 01       		.byte	0x1
 2930 02db 6D       		.byte	0x6d
 2931 02dc E2020000 		.4byte	0x2e2
 2932 02e0 45       		.byte	0x45
 2933 02e1 00       		.byte	0
 2934 02e2 0B       		.uleb128 0xb
 2935 02e3 C0000000 		.4byte	0xc0
 2936 02e7 02       		.uleb128 0x2
 2937 02e8 74090000 		.4byte	.LASF56
 2938 02ec 01       		.byte	0x1
 2939 02ed 7C       		.byte	0x7c
 2940 02ee 53020000 		.4byte	0x253
 2941 02f2 02       		.uleb128 0x2
 2942 02f3 3B010000 		.4byte	.LASF57
 2943 02f7 01       		.byte	0x1
 2944 02f8 80       		.byte	0x80
 2945 02f9 E7020000 		.4byte	0x2e7
 2946 02fd 09       		.uleb128 0x9
 2947 02fe D2000000 		.4byte	.LASF58
 2948 0302 08       		.byte	0x8
 2949 0303 01       		.byte	0x1
 2950 0304 8D       		.byte	0x8d
 2951 0305 22030000 		.4byte	0x322
 2952 0309 0A       		.uleb128 0xa
 2953 030a 75030000 		.4byte	.LASF59
 2954 030e 01       		.byte	0x1
 2955 030f 8F       		.byte	0x8f
 2956 0310 AE000000 		.4byte	0xae
 2957 0314 00       		.byte	0
 2958 0315 0A       		.uleb128 0xa
 2959 0316 6D030000 		.4byte	.LASF60
 2960 031a 01       		.byte	0x1
 2961 031b 90       		.byte	0x90
 2962 031c 23020000 		.4byte	0x223
 2963 0320 04       		.byte	0x4
 2964 0321 00       		.byte	0
 2965 0322 02       		.uleb128 0x2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 107


 2966 0323 E1040000 		.4byte	.LASF61
 2967 0327 01       		.byte	0x1
 2968 0328 91       		.byte	0x91
 2969 0329 FD020000 		.4byte	0x2fd
 2970 032d 02       		.uleb128 0x2
 2971 032e 5A010000 		.4byte	.LASF62
 2972 0332 01       		.byte	0x1
 2973 0333 96       		.byte	0x96
 2974 0334 22030000 		.4byte	0x322
 2975 0338 0F       		.uleb128 0xf
 2976 0339 57020000 		.4byte	.LASF63
 2977 033d 01       		.byte	0x1
 2978 033e E007     		.2byte	0x7e0
 2979 0340 FA000000 		.4byte	0xfa
 2980 0344 00000000 		.4byte	.LFB52
 2981 0348 14000000 		.4byte	.LFE52-.LFB52
 2982 034c 01       		.uleb128 0x1
 2983 034d 9C       		.byte	0x9c
 2984 034e 73030000 		.4byte	0x373
 2985 0352 10       		.uleb128 0x10
 2986 0353 B5070000 		.4byte	.LASF65
 2987 0357 01       		.byte	0x1
 2988 0358 E007     		.2byte	0x7e0
 2989 035a 7E030000 		.4byte	0x37e
 2990 035e 00000000 		.4byte	.LLST0
 2991 0362 11       		.uleb128 0x11
 2992 0363 31060000 		.4byte	.LASF66
 2993 0367 01       		.byte	0x1
 2994 0368 E207     		.2byte	0x7e2
 2995 036a FA000000 		.4byte	0xfa
 2996 036e 3A000000 		.4byte	.LLST1
 2997 0372 00       		.byte	0
 2998 0373 06       		.uleb128 0x6
 2999 0374 04       		.byte	0x4
 3000 0375 79030000 		.4byte	0x379
 3001 0379 07       		.uleb128 0x7
 3002 037a F2020000 		.4byte	0x2f2
 3003 037e 07       		.uleb128 0x7
 3004 037f 73030000 		.4byte	0x373
 3005 0383 0F       		.uleb128 0xf
 3006 0384 59040000 		.4byte	.LASF64
 3007 0388 01       		.byte	0x1
 3008 0389 F908     		.2byte	0x8f9
 3009 038b EF000000 		.4byte	0xef
 3010 038f 00000000 		.4byte	.LFB58
 3011 0393 1E000000 		.4byte	.LFE58-.LFB58
 3012 0397 01       		.uleb128 0x1
 3013 0398 9C       		.byte	0x9c
 3014 0399 D0030000 		.4byte	0x3d0
 3015 039d 10       		.uleb128 0x10
 3016 039e B5070000 		.4byte	.LASF65
 3017 03a2 01       		.byte	0x1
 3018 03a3 F908     		.2byte	0x8f9
 3019 03a5 73030000 		.4byte	0x373
 3020 03a9 58000000 		.4byte	.LLST2
 3021 03ad 11       		.uleb128 0x11
 3022 03ae BD070000 		.4byte	.LASF67
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 108


 3023 03b2 01       		.byte	0x1
 3024 03b3 FB08     		.2byte	0x8fb
 3025 03b5 EF000000 		.4byte	0xef
 3026 03b9 9D000000 		.4byte	.LLST3
 3027 03bd 12       		.uleb128 0x12
 3028 03be 08000000 		.4byte	.LVL6
 3029 03c2 51170000 		.4byte	0x1751
 3030 03c6 12       		.uleb128 0x12
 3031 03c7 1A000000 		.4byte	.LVL10
 3032 03cb 5C170000 		.4byte	0x175c
 3033 03cf 00       		.byte	0
 3034 03d0 0F       		.uleb128 0xf
 3035 03d1 3E020000 		.4byte	.LASF68
 3036 03d5 01       		.byte	0x1
 3037 03d6 D208     		.2byte	0x8d2
 3038 03d8 EF000000 		.4byte	0xef
 3039 03dc 00000000 		.4byte	.LFB56
 3040 03e0 1C000000 		.4byte	.LFE56-.LFB56
 3041 03e4 01       		.uleb128 0x1
 3042 03e5 9C       		.byte	0x9c
 3043 03e6 1D040000 		.4byte	0x41d
 3044 03ea 10       		.uleb128 0x10
 3045 03eb B5070000 		.4byte	.LASF65
 3046 03ef 01       		.byte	0x1
 3047 03f0 D208     		.2byte	0x8d2
 3048 03f2 73030000 		.4byte	0x373
 3049 03f6 BB000000 		.4byte	.LLST4
 3050 03fa 11       		.uleb128 0x11
 3051 03fb BD070000 		.4byte	.LASF67
 3052 03ff 01       		.byte	0x1
 3053 0400 D408     		.2byte	0x8d4
 3054 0402 EF000000 		.4byte	0xef
 3055 0406 00010000 		.4byte	.LLST5
 3056 040a 12       		.uleb128 0x12
 3057 040b 08000000 		.4byte	.LVL13
 3058 040f 51170000 		.4byte	0x1751
 3059 0413 12       		.uleb128 0x12
 3060 0414 18000000 		.4byte	.LVL17
 3061 0418 5C170000 		.4byte	0x175c
 3062 041c 00       		.byte	0
 3063 041d 0F       		.uleb128 0xf
 3064 041e B0030000 		.4byte	.LASF69
 3065 0422 01       		.byte	0x1
 3066 0423 F907     		.2byte	0x7f9
 3067 0425 EF000000 		.4byte	0xef
 3068 0429 00000000 		.4byte	.LFB53
 3069 042d 82000000 		.4byte	.LFE53-.LFB53
 3070 0431 01       		.uleb128 0x1
 3071 0432 9C       		.byte	0x9c
 3072 0433 A3040000 		.4byte	0x4a3
 3073 0437 10       		.uleb128 0x10
 3074 0438 B5070000 		.4byte	.LASF65
 3075 043c 01       		.byte	0x1
 3076 043d F907     		.2byte	0x7f9
 3077 043f A9040000 		.4byte	0x4a9
 3078 0443 1E010000 		.4byte	.LLST6
 3079 0447 10       		.uleb128 0x10
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 109


 3080 0448 47070000 		.4byte	.LASF70
 3081 044c 01       		.byte	0x1
 3082 044d F907     		.2byte	0x7f9
 3083 044f B9000000 		.4byte	0xb9
 3084 0453 8C010000 		.4byte	.LLST7
 3085 0457 10       		.uleb128 0x10
 3086 0458 82090000 		.4byte	.LASF71
 3087 045c 01       		.byte	0x1
 3088 045d F907     		.2byte	0x7f9
 3089 045f AE040000 		.4byte	0x4ae
 3090 0463 F8010000 		.4byte	.LLST8
 3091 0467 11       		.uleb128 0x11
 3092 0468 BD070000 		.4byte	.LASF67
 3093 046c 01       		.byte	0x1
 3094 046d FB07     		.2byte	0x7fb
 3095 046f EF000000 		.4byte	0xef
 3096 0473 24020000 		.4byte	.LLST9
 3097 0477 11       		.uleb128 0x11
 3098 0478 87020000 		.4byte	.LASF51
 3099 047c 01       		.byte	0x1
 3100 047d FC07     		.2byte	0x7fc
 3101 047f FA000000 		.4byte	0xfa
 3102 0483 5A020000 		.4byte	.LLST10
 3103 0487 12       		.uleb128 0x12
 3104 0488 1A000000 		.4byte	.LVL24
 3105 048c 67170000 		.4byte	0x1767
 3106 0490 12       		.uleb128 0x12
 3107 0491 2A000000 		.4byte	.LVL27
 3108 0495 73170000 		.4byte	0x1773
 3109 0499 12       		.uleb128 0x12
 3110 049a 48000000 		.4byte	.LVL30
 3111 049e 73170000 		.4byte	0x1773
 3112 04a2 00       		.byte	0
 3113 04a3 06       		.uleb128 0x6
 3114 04a4 04       		.byte	0x4
 3115 04a5 F2020000 		.4byte	0x2f2
 3116 04a9 07       		.uleb128 0x7
 3117 04aa A3040000 		.4byte	0x4a3
 3118 04ae 07       		.uleb128 0x7
 3119 04af EF000000 		.4byte	0xef
 3120 04b3 13       		.uleb128 0x13
 3121 04b4 6F080000 		.4byte	.LASF73
 3122 04b8 01       		.byte	0x1
 3123 04b9 4808     		.2byte	0x848
 3124 04bb 00000000 		.4byte	.LFB54
 3125 04bf 24000000 		.4byte	.LFE54-.LFB54
 3126 04c3 01       		.uleb128 0x1
 3127 04c4 9C       		.byte	0x9c
 3128 04c5 FA040000 		.4byte	0x4fa
 3129 04c9 10       		.uleb128 0x10
 3130 04ca B5070000 		.4byte	.LASF65
 3131 04ce 01       		.byte	0x1
 3132 04cf 4808     		.2byte	0x848
 3133 04d1 A9040000 		.4byte	0x4a9
 3134 04d5 8D020000 		.4byte	.LLST11
 3135 04d9 10       		.uleb128 0x10
 3136 04da 4E020000 		.4byte	.LASF72
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 110


 3137 04de 01       		.byte	0x1
 3138 04df 4808     		.2byte	0x848
 3139 04e1 FA040000 		.4byte	0x4fa
 3140 04e5 AE020000 		.4byte	.LLST12
 3141 04e9 14       		.uleb128 0x14
 3142 04ea 22000000 		.4byte	.LVL43
 3143 04ee 73170000 		.4byte	0x1773
 3144 04f2 15       		.uleb128 0x15
 3145 04f3 01       		.uleb128 0x1
 3146 04f4 50       		.byte	0x50
 3147 04f5 02       		.uleb128 0x2
 3148 04f6 74       		.byte	0x74
 3149 04f7 00       		.sleb128 0
 3150 04f8 00       		.byte	0
 3151 04f9 00       		.byte	0
 3152 04fa 07       		.uleb128 0x7
 3153 04fb A5000000 		.4byte	0xa5
 3154 04ff 13       		.uleb128 0x13
 3155 0500 12090000 		.4byte	.LASF74
 3156 0504 01       		.byte	0x1
 3157 0505 5A08     		.2byte	0x85a
 3158 0507 00000000 		.4byte	.LFB55
 3159 050b 6E000000 		.4byte	.LFE55-.LFB55
 3160 050f 01       		.uleb128 0x1
 3161 0510 9C       		.byte	0x9c
 3162 0511 C0050000 		.4byte	0x5c0
 3163 0515 10       		.uleb128 0x10
 3164 0516 B5070000 		.4byte	.LASF65
 3165 051a 01       		.byte	0x1
 3166 051b 5A08     		.2byte	0x85a
 3167 051d A9040000 		.4byte	0x4a9
 3168 0521 DA020000 		.4byte	.LLST13
 3169 0525 16       		.uleb128 0x16
 3170 0526 08000000 		.4byte	.LBB2
 3171 052a 2C000000 		.4byte	.LBE2-.LBB2
 3172 052e 60050000 		.4byte	0x560
 3173 0532 11       		.uleb128 0x11
 3174 0533 11010000 		.4byte	.LASF55
 3175 0537 01       		.byte	0x1
 3176 0538 6408     		.2byte	0x864
 3177 053a C0000000 		.4byte	0xc0
 3178 053e 06030000 		.4byte	.LLST14
 3179 0542 17       		.uleb128 0x17
 3180 0543 1E000000 		.4byte	.LVL48
 3181 0547 7C170000 		.4byte	0x177c
 3182 054b 56050000 		.4byte	0x556
 3183 054f 15       		.uleb128 0x15
 3184 0550 01       		.uleb128 0x1
 3185 0551 50       		.byte	0x50
 3186 0552 02       		.uleb128 0x2
 3187 0553 75       		.byte	0x75
 3188 0554 24       		.sleb128 36
 3189 0555 00       		.byte	0
 3190 0556 12       		.uleb128 0x12
 3191 0557 26000000 		.4byte	.LVL49
 3192 055b 88170000 		.4byte	0x1788
 3193 055f 00       		.byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 111


 3194 0560 16       		.uleb128 0x16
 3195 0561 3C000000 		.4byte	.LBB3
 3196 0565 2C000000 		.4byte	.LBE3-.LBB3
 3197 0569 9B050000 		.4byte	0x59b
 3198 056d 11       		.uleb128 0x11
 3199 056e 8C090000 		.4byte	.LASF54
 3200 0572 01       		.byte	0x1
 3201 0573 B508     		.2byte	0x8b5
 3202 0575 C0000000 		.4byte	0xc0
 3203 0579 24030000 		.4byte	.LLST15
 3204 057d 17       		.uleb128 0x17
 3205 057e 52000000 		.4byte	.LVL56
 3206 0582 7C170000 		.4byte	0x177c
 3207 0586 91050000 		.4byte	0x591
 3208 058a 15       		.uleb128 0x15
 3209 058b 01       		.uleb128 0x1
 3210 058c 50       		.byte	0x50
 3211 058d 02       		.uleb128 0x2
 3212 058e 75       		.byte	0x75
 3213 058f 10       		.sleb128 16
 3214 0590 00       		.byte	0
 3215 0591 12       		.uleb128 0x12
 3216 0592 5A000000 		.4byte	.LVL57
 3217 0596 88170000 		.4byte	0x1788
 3218 059a 00       		.byte	0
 3219 059b 12       		.uleb128 0x12
 3220 059c 08000000 		.4byte	.LVL46
 3221 05a0 51170000 		.4byte	0x1751
 3222 05a4 12       		.uleb128 0x12
 3223 05a5 38000000 		.4byte	.LVL52
 3224 05a9 5C170000 		.4byte	0x175c
 3225 05ad 12       		.uleb128 0x12
 3226 05ae 3C000000 		.4byte	.LVL53
 3227 05b2 51170000 		.4byte	0x1751
 3228 05b6 12       		.uleb128 0x12
 3229 05b7 6C000000 		.4byte	.LVL60
 3230 05bb 5C170000 		.4byte	0x175c
 3231 05bf 00       		.byte	0
 3232 05c0 18       		.uleb128 0x18
 3233 05c1 21090000 		.4byte	.LASF82
 3234 05c5 01       		.byte	0x1
 3235 05c6 F8       		.byte	0xf8
 3236 05c7 EF000000 		.4byte	0xef
 3237 05cb 00000000 		.4byte	.LFB32
 3238 05cf 64000000 		.4byte	.LFE32-.LFB32
 3239 05d3 01       		.uleb128 0x1
 3240 05d4 9C       		.byte	0x9c
 3241 05d5 5E060000 		.4byte	0x65e
 3242 05d9 19       		.uleb128 0x19
 3243 05da F4010000 		.4byte	.LASF75
 3244 05de 01       		.byte	0x1
 3245 05df F8       		.byte	0xf8
 3246 05e0 23020000 		.4byte	0x223
 3247 05e4 42030000 		.4byte	.LLST16
 3248 05e8 19       		.uleb128 0x19
 3249 05e9 DE050000 		.4byte	.LASF76
 3250 05ed 01       		.byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 112


 3251 05ee F8       		.byte	0xf8
 3252 05ef EF000000 		.4byte	0xef
 3253 05f3 6E030000 		.4byte	.LLST17
 3254 05f7 1A       		.uleb128 0x1a
 3255 05f8 B5070000 		.4byte	.LASF65
 3256 05fc 01       		.byte	0x1
 3257 05fd FA       		.byte	0xfa
 3258 05fe A9040000 		.4byte	0x4a9
 3259 0602 9A030000 		.4byte	.LLST18
 3260 0606 12       		.uleb128 0x12
 3261 0607 0A000000 		.4byte	.LVL65
 3262 060b 51170000 		.4byte	0x1751
 3263 060f 17       		.uleb128 0x17
 3264 0610 42000000 		.4byte	.LVL66
 3265 0614 7C170000 		.4byte	0x177c
 3266 0618 23060000 		.4byte	0x623
 3267 061c 15       		.uleb128 0x15
 3268 061d 01       		.uleb128 0x1
 3269 061e 50       		.byte	0x50
 3270 061f 02       		.uleb128 0x2
 3271 0620 74       		.byte	0x74
 3272 0621 10       		.sleb128 16
 3273 0622 00       		.byte	0
 3274 0623 12       		.uleb128 0x12
 3275 0624 4A000000 		.4byte	.LVL67
 3276 0628 94170000 		.4byte	0x1794
 3277 062c 17       		.uleb128 0x17
 3278 062d 54000000 		.4byte	.LVL68
 3279 0631 9F170000 		.4byte	0x179f
 3280 0635 40060000 		.4byte	0x640
 3281 0639 15       		.uleb128 0x15
 3282 063a 01       		.uleb128 0x1
 3283 063b 50       		.byte	0x50
 3284 063c 02       		.uleb128 0x2
 3285 063d 74       		.byte	0x74
 3286 063e 10       		.sleb128 16
 3287 063f 00       		.byte	0
 3288 0640 17       		.uleb128 0x17
 3289 0641 5C000000 		.4byte	.LVL69
 3290 0645 9F170000 		.4byte	0x179f
 3291 0649 54060000 		.4byte	0x654
 3292 064d 15       		.uleb128 0x15
 3293 064e 01       		.uleb128 0x1
 3294 064f 50       		.byte	0x50
 3295 0650 02       		.uleb128 0x2
 3296 0651 74       		.byte	0x74
 3297 0652 24       		.sleb128 36
 3298 0653 00       		.byte	0
 3299 0654 12       		.uleb128 0x12
 3300 0655 60000000 		.4byte	.LVL70
 3301 0659 5C170000 		.4byte	0x175c
 3302 065d 00       		.byte	0
 3303 065e 13       		.uleb128 0x13
 3304 065f B3010000 		.4byte	.LASF77
 3305 0663 01       		.byte	0x1
 3306 0664 9901     		.2byte	0x199
 3307 0666 00000000 		.4byte	.LFB34
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 113


 3308 066a 1C000000 		.4byte	.LFE34-.LFB34
 3309 066e 01       		.uleb128 0x1
 3310 066f 9C       		.byte	0x9c
 3311 0670 DA060000 		.4byte	0x6da
 3312 0674 10       		.uleb128 0x10
 3313 0675 93060000 		.4byte	.LASF78
 3314 0679 01       		.byte	0x1
 3315 067a 9901     		.2byte	0x199
 3316 067c DA060000 		.4byte	0x6da
 3317 0680 C6030000 		.4byte	.LLST19
 3318 0684 10       		.uleb128 0x10
 3319 0685 09040000 		.4byte	.LASF53
 3320 0689 01       		.byte	0x1
 3321 068a 9901     		.2byte	0x199
 3322 068c DA060000 		.4byte	0x6da
 3323 0690 F3030000 		.4byte	.LLST20
 3324 0694 10       		.uleb128 0x10
 3325 0695 46050000 		.4byte	.LASF79
 3326 0699 01       		.byte	0x1
 3327 069a 9901     		.2byte	0x199
 3328 069c 10010000 		.4byte	0x110
 3329 06a0 21040000 		.4byte	.LLST21
 3330 06a4 10       		.uleb128 0x10
 3331 06a5 51060000 		.4byte	.LASF80
 3332 06a9 01       		.byte	0x1
 3333 06aa 9901     		.2byte	0x199
 3334 06ac DF060000 		.4byte	0x6df
 3335 06b0 42040000 		.4byte	.LLST22
 3336 06b4 1B       		.uleb128 0x1b
 3337 06b5 BC000000 		.4byte	.LASF81
 3338 06b9 01       		.byte	0x1
 3339 06ba 9901     		.2byte	0x199
 3340 06bc A3040000 		.4byte	0x4a3
 3341 06c0 02       		.uleb128 0x2
 3342 06c1 91       		.byte	0x91
 3343 06c2 00       		.sleb128 0
 3344 06c3 14       		.uleb128 0x14
 3345 06c4 1A000000 		.4byte	.LVL77
 3346 06c8 C0050000 		.4byte	0x5c0
 3347 06cc 15       		.uleb128 0x15
 3348 06cd 01       		.uleb128 0x1
 3349 06ce 50       		.byte	0x50
 3350 06cf 03       		.uleb128 0x3
 3351 06d0 91       		.byte	0x91
 3352 06d1 00       		.sleb128 0
 3353 06d2 06       		.byte	0x6
 3354 06d3 15       		.uleb128 0x15
 3355 06d4 01       		.uleb128 0x1
 3356 06d5 51       		.byte	0x51
 3357 06d6 01       		.uleb128 0x1
 3358 06d7 31       		.byte	0x31
 3359 06d8 00       		.byte	0
 3360 06d9 00       		.byte	0
 3361 06da 07       		.uleb128 0x7
 3362 06db FA000000 		.4byte	0xfa
 3363 06df 07       		.uleb128 0x7
 3364 06e0 CB000000 		.4byte	0xcb
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 114


 3365 06e4 1C       		.uleb128 0x1c
 3366 06e5 F4040000 		.4byte	.LASF83
 3367 06e9 01       		.byte	0x1
 3368 06ea 6701     		.2byte	0x167
 3369 06ec 23020000 		.4byte	0x223
 3370 06f0 00000000 		.4byte	.LFB33
 3371 06f4 34000000 		.4byte	.LFE33-.LFB33
 3372 06f8 01       		.uleb128 0x1
 3373 06f9 9C       		.byte	0x9c
 3374 06fa 90070000 		.4byte	0x790
 3375 06fe 10       		.uleb128 0x10
 3376 06ff 93060000 		.4byte	.LASF78
 3377 0703 01       		.byte	0x1
 3378 0704 6701     		.2byte	0x167
 3379 0706 DA060000 		.4byte	0x6da
 3380 070a 63040000 		.4byte	.LLST23
 3381 070e 10       		.uleb128 0x10
 3382 070f 09040000 		.4byte	.LASF53
 3383 0713 01       		.byte	0x1
 3384 0714 6701     		.2byte	0x167
 3385 0716 DA060000 		.4byte	0x6da
 3386 071a A5040000 		.4byte	.LLST24
 3387 071e 10       		.uleb128 0x10
 3388 071f 51060000 		.4byte	.LASF80
 3389 0723 01       		.byte	0x1
 3390 0724 6701     		.2byte	0x167
 3391 0726 DF060000 		.4byte	0x6df
 3392 072a D1040000 		.4byte	.LLST25
 3393 072e 11       		.uleb128 0x11
 3394 072f BC000000 		.4byte	.LASF81
 3395 0733 01       		.byte	0x1
 3396 0734 6901     		.2byte	0x169
 3397 0736 A3040000 		.4byte	0x4a3
 3398 073a F2040000 		.4byte	.LLST26
 3399 073e 11       		.uleb128 0x11
 3400 073f 26070000 		.4byte	.LASF84
 3401 0743 01       		.byte	0x1
 3402 0744 6A01     		.2byte	0x16a
 3403 0746 25000000 		.4byte	0x25
 3404 074a 1B050000 		.4byte	.LLST27
 3405 074e 1D       		.uleb128 0x1d
 3406 074f 46050000 		.4byte	.LASF79
 3407 0753 01       		.byte	0x1
 3408 0754 6B01     		.2byte	0x16b
 3409 0756 10010000 		.4byte	0x110
 3410 075a 01       		.uleb128 0x1
 3411 075b 52       		.byte	0x52
 3412 075c 12       		.uleb128 0x12
 3413 075d 1A000000 		.4byte	.LVL83
 3414 0761 AB170000 		.4byte	0x17ab
 3415 0765 14       		.uleb128 0x14
 3416 0766 2E000000 		.4byte	.LVL86
 3417 076a 5E060000 		.4byte	0x65e
 3418 076e 15       		.uleb128 0x15
 3419 076f 01       		.uleb128 0x1
 3420 0770 50       		.byte	0x50
 3421 0771 02       		.uleb128 0x2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 115


 3422 0772 75       		.byte	0x75
 3423 0773 00       		.sleb128 0
 3424 0774 15       		.uleb128 0x15
 3425 0775 01       		.uleb128 0x1
 3426 0776 51       		.byte	0x51
 3427 0777 02       		.uleb128 0x2
 3428 0778 77       		.byte	0x77
 3429 0779 00       		.sleb128 0
 3430 077a 15       		.uleb128 0x15
 3431 077b 01       		.uleb128 0x1
 3432 077c 52       		.byte	0x52
 3433 077d 03       		.uleb128 0x3
 3434 077e 74       		.byte	0x74
 3435 077f C800     		.sleb128 72
 3436 0781 15       		.uleb128 0x15
 3437 0782 01       		.uleb128 0x1
 3438 0783 53       		.byte	0x53
 3439 0784 02       		.uleb128 0x2
 3440 0785 76       		.byte	0x76
 3441 0786 00       		.sleb128 0
 3442 0787 15       		.uleb128 0x15
 3443 0788 02       		.uleb128 0x2
 3444 0789 7D       		.byte	0x7d
 3445 078a 00       		.sleb128 0
 3446 078b 02       		.uleb128 0x2
 3447 078c 74       		.byte	0x74
 3448 078d 00       		.sleb128 0
 3449 078e 00       		.byte	0
 3450 078f 00       		.byte	0
 3451 0790 1C       		.uleb128 0x1c
 3452 0791 C7090000 		.4byte	.LASF85
 3453 0795 01       		.byte	0x1
 3454 0796 BC02     		.2byte	0x2bc
 3455 0798 23020000 		.4byte	0x223
 3456 079c 00000000 		.4byte	.LFB39
 3457 07a0 14000000 		.4byte	.LFE39-.LFB39
 3458 07a4 01       		.uleb128 0x1
 3459 07a5 9C       		.byte	0x9c
 3460 07a6 F4070000 		.4byte	0x7f4
 3461 07aa 10       		.uleb128 0x10
 3462 07ab E8050000 		.4byte	.LASF86
 3463 07af 01       		.byte	0x1
 3464 07b0 BC02     		.2byte	0x2bc
 3465 07b2 DA060000 		.4byte	0x6da
 3466 07b6 47050000 		.4byte	.LLST28
 3467 07ba 10       		.uleb128 0x10
 3468 07bb 14040000 		.4byte	.LASF87
 3469 07bf 01       		.byte	0x1
 3470 07c0 BC02     		.2byte	0x2bc
 3471 07c2 DA060000 		.4byte	0x6da
 3472 07c6 68050000 		.4byte	.LLST29
 3473 07ca 1D       		.uleb128 0x1d
 3474 07cb 6D030000 		.4byte	.LASF60
 3475 07cf 01       		.byte	0x1
 3476 07d0 BE02     		.2byte	0x2be
 3477 07d2 23020000 		.4byte	0x223
 3478 07d6 01       		.uleb128 0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 116


 3479 07d7 50       		.byte	0x50
 3480 07d8 14       		.uleb128 0x14
 3481 07d9 0C000000 		.4byte	.LVL92
 3482 07dd E4060000 		.4byte	0x6e4
 3483 07e1 15       		.uleb128 0x15
 3484 07e2 01       		.uleb128 0x1
 3485 07e3 50       		.byte	0x50
 3486 07e4 03       		.uleb128 0x3
 3487 07e5 F3       		.byte	0xf3
 3488 07e6 01       		.uleb128 0x1
 3489 07e7 50       		.byte	0x50
 3490 07e8 15       		.uleb128 0x15
 3491 07e9 01       		.uleb128 0x1
 3492 07ea 51       		.byte	0x51
 3493 07eb 01       		.uleb128 0x1
 3494 07ec 30       		.byte	0x30
 3495 07ed 15       		.uleb128 0x15
 3496 07ee 01       		.uleb128 0x1
 3497 07ef 52       		.byte	0x52
 3498 07f0 01       		.uleb128 0x1
 3499 07f1 32       		.byte	0x32
 3500 07f2 00       		.byte	0
 3501 07f3 00       		.byte	0
 3502 07f4 1C       		.uleb128 0x1c
 3503 07f5 C3030000 		.4byte	.LASF88
 3504 07f9 01       		.byte	0x1
 3505 07fa D602     		.2byte	0x2d6
 3506 07fc EF000000 		.4byte	0xef
 3507 0800 00000000 		.4byte	.LFB40
 3508 0804 EA000000 		.4byte	.LFE40-.LFB40
 3509 0808 01       		.uleb128 0x1
 3510 0809 9C       		.byte	0x9c
 3511 080a C9090000 		.4byte	0x9c9
 3512 080e 10       		.uleb128 0x10
 3513 080f F4010000 		.4byte	.LASF75
 3514 0813 01       		.byte	0x1
 3515 0814 D602     		.2byte	0x2d6
 3516 0816 23020000 		.4byte	0x223
 3517 081a 94050000 		.4byte	.LLST30
 3518 081e 10       		.uleb128 0x10
 3519 081f 47070000 		.4byte	.LASF70
 3520 0823 01       		.byte	0x1
 3521 0824 D602     		.2byte	0x2d6
 3522 0826 C9090000 		.4byte	0x9c9
 3523 082a C0050000 		.4byte	.LLST31
 3524 082e 10       		.uleb128 0x10
 3525 082f A8080000 		.4byte	.LASF89
 3526 0833 01       		.byte	0x1
 3527 0834 D602     		.2byte	0x2d6
 3528 0836 05010000 		.4byte	0x105
 3529 083a EC050000 		.4byte	.LLST32
 3530 083e 10       		.uleb128 0x10
 3531 083f 43010000 		.4byte	.LASF90
 3532 0843 01       		.byte	0x1
 3533 0844 D602     		.2byte	0x2d6
 3534 0846 AE040000 		.4byte	0x4ae
 3535 084a 23060000 		.4byte	.LLST33
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 117


 3536 084e 11       		.uleb128 0x11
 3537 084f 4F030000 		.4byte	.LASF91
 3538 0853 01       		.byte	0x1
 3539 0854 D802     		.2byte	0x2d8
 3540 0856 EF000000 		.4byte	0xef
 3541 085a 4F060000 		.4byte	.LLST34
 3542 085e 11       		.uleb128 0x11
 3543 085f E5010000 		.4byte	.LASF92
 3544 0863 01       		.byte	0x1
 3545 0864 D802     		.2byte	0x2d8
 3546 0866 EF000000 		.4byte	0xef
 3547 086a 85060000 		.4byte	.LLST35
 3548 086e 1D       		.uleb128 0x1d
 3549 086f 64030000 		.4byte	.LASF93
 3550 0873 01       		.byte	0x1
 3551 0874 D902     		.2byte	0x2d9
 3552 0876 18020000 		.4byte	0x218
 3553 087a 02       		.uleb128 0x2
 3554 087b 91       		.byte	0x91
 3555 087c 60       		.sleb128 -32
 3556 087d 11       		.uleb128 0x11
 3557 087e B5070000 		.4byte	.LASF65
 3558 0882 01       		.byte	0x1
 3559 0883 DA02     		.2byte	0x2da
 3560 0885 A9040000 		.4byte	0x4a9
 3561 0889 A3060000 		.4byte	.LLST36
 3562 088d 12       		.uleb128 0x12
 3563 088e 12000000 		.4byte	.LVL97
 3564 0892 51170000 		.4byte	0x1751
 3565 0896 17       		.uleb128 0x17
 3566 0897 28000000 		.4byte	.LVL98
 3567 089b 1D040000 		.4byte	0x41d
 3568 089f B6080000 		.4byte	0x8b6
 3569 08a3 15       		.uleb128 0x15
 3570 08a4 01       		.uleb128 0x1
 3571 08a5 50       		.byte	0x50
 3572 08a6 02       		.uleb128 0x2
 3573 08a7 74       		.byte	0x74
 3574 08a8 00       		.sleb128 0
 3575 08a9 15       		.uleb128 0x15
 3576 08aa 01       		.uleb128 0x1
 3577 08ab 51       		.byte	0x51
 3578 08ac 02       		.uleb128 0x2
 3579 08ad 75       		.byte	0x75
 3580 08ae 00       		.sleb128 0
 3581 08af 15       		.uleb128 0x15
 3582 08b0 01       		.uleb128 0x1
 3583 08b1 52       		.byte	0x52
 3584 08b2 02       		.uleb128 0x2
 3585 08b3 77       		.byte	0x77
 3586 08b4 00       		.sleb128 0
 3587 08b5 00       		.byte	0
 3588 08b6 17       		.uleb128 0x17
 3589 08b7 36000000 		.4byte	.LVL100
 3590 08bb 7C170000 		.4byte	0x177c
 3591 08bf CA080000 		.4byte	0x8ca
 3592 08c3 15       		.uleb128 0x15
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 118


 3593 08c4 01       		.uleb128 0x1
 3594 08c5 50       		.byte	0x50
 3595 08c6 02       		.uleb128 0x2
 3596 08c7 74       		.byte	0x74
 3597 08c8 24       		.sleb128 36
 3598 08c9 00       		.byte	0
 3599 08ca 12       		.uleb128 0x12
 3600 08cb 3E000000 		.4byte	.LVL101
 3601 08cf 94170000 		.4byte	0x1794
 3602 08d3 12       		.uleb128 0x12
 3603 08d4 48000000 		.4byte	.LVL103
 3604 08d8 94170000 		.4byte	0x1794
 3605 08dc 12       		.uleb128 0x12
 3606 08dd 4C000000 		.4byte	.LVL104
 3607 08e1 5C170000 		.4byte	0x175c
 3608 08e5 12       		.uleb128 0x12
 3609 08e6 5A000000 		.4byte	.LVL105
 3610 08ea 5C170000 		.4byte	0x175c
 3611 08ee 17       		.uleb128 0x17
 3612 08ef 68000000 		.4byte	.LVL106
 3613 08f3 B6170000 		.4byte	0x17b6
 3614 08f7 02090000 		.4byte	0x902
 3615 08fb 15       		.uleb128 0x15
 3616 08fc 01       		.uleb128 0x1
 3617 08fd 50       		.byte	0x50
 3618 08fe 02       		.uleb128 0x2
 3619 08ff 91       		.byte	0x91
 3620 0900 60       		.sleb128 -32
 3621 0901 00       		.byte	0
 3622 0902 12       		.uleb128 0x12
 3623 0903 6E000000 		.4byte	.LVL108
 3624 0907 5C170000 		.4byte	0x175c
 3625 090b 12       		.uleb128 0x12
 3626 090c 72000000 		.4byte	.LVL109
 3627 0910 C2170000 		.4byte	0x17c2
 3628 0914 12       		.uleb128 0x12
 3629 0915 76000000 		.4byte	.LVL110
 3630 0919 51170000 		.4byte	0x1751
 3631 091d 12       		.uleb128 0x12
 3632 091e 9A000000 		.4byte	.LVL111
 3633 0922 5C170000 		.4byte	0x175c
 3634 0926 17       		.uleb128 0x17
 3635 0927 A2000000 		.4byte	.LVL113
 3636 092b CE170000 		.4byte	0x17ce
 3637 092f 40090000 		.4byte	0x940
 3638 0933 15       		.uleb128 0x15
 3639 0934 01       		.uleb128 0x1
 3640 0935 50       		.byte	0x50
 3641 0936 02       		.uleb128 0x2
 3642 0937 91       		.byte	0x91
 3643 0938 60       		.sleb128 -32
 3644 0939 15       		.uleb128 0x15
 3645 093a 01       		.uleb128 0x1
 3646 093b 51       		.byte	0x51
 3647 093c 02       		.uleb128 0x2
 3648 093d 91       		.byte	0x91
 3649 093e 5C       		.sleb128 -36
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 119


 3650 093f 00       		.byte	0
 3651 0940 17       		.uleb128 0x17
 3652 0941 AC000000 		.4byte	.LVL114
 3653 0945 83030000 		.4byte	0x383
 3654 0949 54090000 		.4byte	0x954
 3655 094d 15       		.uleb128 0x15
 3656 094e 01       		.uleb128 0x1
 3657 094f 50       		.byte	0x50
 3658 0950 02       		.uleb128 0x2
 3659 0951 74       		.byte	0x74
 3660 0952 00       		.sleb128 0
 3661 0953 00       		.byte	0
 3662 0954 17       		.uleb128 0x17
 3663 0955 BA000000 		.4byte	.LVL115
 3664 0959 DA170000 		.4byte	0x17da
 3665 095d 68090000 		.4byte	0x968
 3666 0961 15       		.uleb128 0x15
 3667 0962 01       		.uleb128 0x1
 3668 0963 50       		.byte	0x50
 3669 0964 02       		.uleb128 0x2
 3670 0965 74       		.byte	0x74
 3671 0966 10       		.sleb128 16
 3672 0967 00       		.byte	0
 3673 0968 17       		.uleb128 0x17
 3674 0969 C0000000 		.4byte	.LVL116
 3675 096d FF040000 		.4byte	0x4ff
 3676 0971 7C090000 		.4byte	0x97c
 3677 0975 15       		.uleb128 0x15
 3678 0976 01       		.uleb128 0x1
 3679 0977 50       		.byte	0x50
 3680 0978 02       		.uleb128 0x2
 3681 0979 74       		.byte	0x74
 3682 097a 00       		.sleb128 0
 3683 097b 00       		.byte	0
 3684 097c 12       		.uleb128 0x12
 3685 097d C4000000 		.4byte	.LVL117
 3686 0981 E6170000 		.4byte	0x17e6
 3687 0985 12       		.uleb128 0x12
 3688 0986 CC000000 		.4byte	.LVL118
 3689 098a 94170000 		.4byte	0x1794
 3690 098e 17       		.uleb128 0x17
 3691 098f D4000000 		.4byte	.LVL119
 3692 0993 FF040000 		.4byte	0x4ff
 3693 0997 A2090000 		.4byte	0x9a2
 3694 099b 15       		.uleb128 0x15
 3695 099c 01       		.uleb128 0x1
 3696 099d 50       		.byte	0x50
 3697 099e 02       		.uleb128 0x2
 3698 099f 74       		.byte	0x74
 3699 09a0 00       		.sleb128 0
 3700 09a1 00       		.byte	0
 3701 09a2 12       		.uleb128 0x12
 3702 09a3 D8000000 		.4byte	.LVL120
 3703 09a7 E6170000 		.4byte	0x17e6
 3704 09ab 17       		.uleb128 0x17
 3705 09ac E0000000 		.4byte	.LVL121
 3706 09b0 FF040000 		.4byte	0x4ff
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 120


 3707 09b4 BF090000 		.4byte	0x9bf
 3708 09b8 15       		.uleb128 0x15
 3709 09b9 01       		.uleb128 0x1
 3710 09ba 50       		.byte	0x50
 3711 09bb 02       		.uleb128 0x2
 3712 09bc 74       		.byte	0x74
 3713 09bd 00       		.sleb128 0
 3714 09be 00       		.byte	0
 3715 09bf 12       		.uleb128 0x12
 3716 09c0 E4000000 		.4byte	.LVL122
 3717 09c4 E6170000 		.4byte	0x17e6
 3718 09c8 00       		.byte	0
 3719 09c9 07       		.uleb128 0x7
 3720 09ca B9000000 		.4byte	0xb9
 3721 09ce 13       		.uleb128 0x13
 3722 09cf 28050000 		.4byte	.LASF94
 3723 09d3 01       		.byte	0x1
 3724 09d4 C501     		.2byte	0x1c5
 3725 09d6 00000000 		.4byte	.LFB35
 3726 09da 18000000 		.4byte	.LFE35-.LFB35
 3727 09de 01       		.uleb128 0x1
 3728 09df 9C       		.byte	0x9c
 3729 09e0 150A0000 		.4byte	0xa15
 3730 09e4 10       		.uleb128 0x10
 3731 09e5 BC000000 		.4byte	.LASF81
 3732 09e9 01       		.byte	0x1
 3733 09ea C501     		.2byte	0x1c5
 3734 09ec A3040000 		.4byte	0x4a3
 3735 09f0 CF060000 		.4byte	.LLST37
 3736 09f4 14       		.uleb128 0x14
 3737 09f5 16000000 		.4byte	.LVL128
 3738 09f9 F4070000 		.4byte	0x7f4
 3739 09fd 15       		.uleb128 0x15
 3740 09fe 01       		.uleb128 0x1
 3741 09ff 50       		.byte	0x50
 3742 0a00 03       		.uleb128 0x3
 3743 0a01 F3       		.byte	0xf3
 3744 0a02 01       		.uleb128 0x1
 3745 0a03 50       		.byte	0x50
 3746 0a04 15       		.uleb128 0x15
 3747 0a05 01       		.uleb128 0x1
 3748 0a06 51       		.byte	0x51
 3749 0a07 01       		.uleb128 0x1
 3750 0a08 30       		.byte	0x30
 3751 0a09 15       		.uleb128 0x15
 3752 0a0a 01       		.uleb128 0x1
 3753 0a0b 52       		.byte	0x52
 3754 0a0c 01       		.uleb128 0x1
 3755 0a0d 30       		.byte	0x30
 3756 0a0e 15       		.uleb128 0x15
 3757 0a0f 01       		.uleb128 0x1
 3758 0a10 53       		.byte	0x53
 3759 0a11 01       		.uleb128 0x1
 3760 0a12 30       		.byte	0x30
 3761 0a13 00       		.byte	0
 3762 0a14 00       		.byte	0
 3763 0a15 1C       		.uleb128 0x1c
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 121


 3764 0a16 08050000 		.4byte	.LASF95
 3765 0a1a 01       		.byte	0x1
 3766 0a1b E301     		.2byte	0x1e3
 3767 0a1d 23020000 		.4byte	0x223
 3768 0a21 00000000 		.4byte	.LFB36
 3769 0a25 16000000 		.4byte	.LFE36-.LFB36
 3770 0a29 01       		.uleb128 0x1
 3771 0a2a 9C       		.byte	0x9c
 3772 0a2b 920A0000 		.4byte	0xa92
 3773 0a2f 10       		.uleb128 0x10
 3774 0a30 51060000 		.4byte	.LASF80
 3775 0a34 01       		.byte	0x1
 3776 0a35 E301     		.2byte	0x1e3
 3777 0a37 DF060000 		.4byte	0x6df
 3778 0a3b F0060000 		.4byte	.LLST38
 3779 0a3f 11       		.uleb128 0x11
 3780 0a40 BC000000 		.4byte	.LASF81
 3781 0a44 01       		.byte	0x1
 3782 0a45 E501     		.2byte	0x1e5
 3783 0a47 A3040000 		.4byte	0x4a3
 3784 0a4b 11070000 		.4byte	.LLST39
 3785 0a4f 1E       		.uleb128 0x1e
 3786 0a50 3B040000 		.4byte	.LASF96
 3787 0a54 01       		.byte	0x1
 3788 0a55 E601     		.2byte	0x1e6
 3789 0a57 DA060000 		.4byte	0x6da
 3790 0a5b 01       		.byte	0x1
 3791 0a5c 1E       		.uleb128 0x1e
 3792 0a5d D9010000 		.4byte	.LASF97
 3793 0a61 01       		.byte	0x1
 3794 0a62 E601     		.2byte	0x1e6
 3795 0a64 DA060000 		.4byte	0x6da
 3796 0a68 00       		.byte	0
 3797 0a69 17       		.uleb128 0x17
 3798 0a6a 0C000000 		.4byte	.LVL132
 3799 0a6e E4060000 		.4byte	0x6e4
 3800 0a72 810A0000 		.4byte	0xa81
 3801 0a76 15       		.uleb128 0x15
 3802 0a77 01       		.uleb128 0x1
 3803 0a78 50       		.byte	0x50
 3804 0a79 01       		.uleb128 0x1
 3805 0a7a 31       		.byte	0x31
 3806 0a7b 15       		.uleb128 0x15
 3807 0a7c 01       		.uleb128 0x1
 3808 0a7d 51       		.byte	0x51
 3809 0a7e 01       		.uleb128 0x1
 3810 0a7f 30       		.byte	0x30
 3811 0a80 00       		.byte	0
 3812 0a81 14       		.uleb128 0x14
 3813 0a82 12000000 		.4byte	.LVL134
 3814 0a86 CE090000 		.4byte	0x9ce
 3815 0a8a 15       		.uleb128 0x15
 3816 0a8b 01       		.uleb128 0x1
 3817 0a8c 50       		.byte	0x50
 3818 0a8d 02       		.uleb128 0x2
 3819 0a8e 74       		.byte	0x74
 3820 0a8f 00       		.sleb128 0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 122


 3821 0a90 00       		.byte	0
 3822 0a91 00       		.byte	0
 3823 0a92 1C       		.uleb128 0x1c
 3824 0a93 F9080000 		.4byte	.LASF98
 3825 0a97 01       		.byte	0x1
 3826 0a98 3F02     		.2byte	0x23f
 3827 0a9a EF000000 		.4byte	0xef
 3828 0a9e 00000000 		.4byte	.LFB37
 3829 0aa2 2E000000 		.4byte	.LFE37-.LFB37
 3830 0aa6 01       		.uleb128 0x1
 3831 0aa7 9C       		.byte	0x9c
 3832 0aa8 FE0A0000 		.4byte	0xafe
 3833 0aac 10       		.uleb128 0x10
 3834 0aad 56050000 		.4byte	.LASF99
 3835 0ab1 01       		.byte	0x1
 3836 0ab2 3F02     		.2byte	0x23f
 3837 0ab4 23020000 		.4byte	0x223
 3838 0ab8 3A070000 		.4byte	.LLST40
 3839 0abc 1D       		.uleb128 0x1d
 3840 0abd BD070000 		.4byte	.LASF67
 3841 0ac1 01       		.byte	0x1
 3842 0ac2 4102     		.2byte	0x241
 3843 0ac4 EF000000 		.4byte	0xef
 3844 0ac8 01       		.uleb128 0x1
 3845 0ac9 50       		.byte	0x50
 3846 0aca 11       		.uleb128 0x11
 3847 0acb 81000000 		.4byte	.LASF100
 3848 0acf 01       		.byte	0x1
 3849 0ad0 4202     		.2byte	0x242
 3850 0ad2 A9040000 		.4byte	0x4a9
 3851 0ad6 66070000 		.4byte	.LLST41
 3852 0ada 12       		.uleb128 0x12
 3853 0adb 0A000000 		.4byte	.LVL138
 3854 0adf F2170000 		.4byte	0x17f2
 3855 0ae3 14       		.uleb128 0x14
 3856 0ae4 22000000 		.4byte	.LVL139
 3857 0ae8 F4070000 		.4byte	0x7f4
 3858 0aec 15       		.uleb128 0x15
 3859 0aed 01       		.uleb128 0x1
 3860 0aee 50       		.byte	0x50
 3861 0aef 02       		.uleb128 0x2
 3862 0af0 74       		.byte	0x74
 3863 0af1 00       		.sleb128 0
 3864 0af2 15       		.uleb128 0x15
 3865 0af3 01       		.uleb128 0x1
 3866 0af4 51       		.byte	0x51
 3867 0af5 01       		.uleb128 0x1
 3868 0af6 30       		.byte	0x30
 3869 0af7 15       		.uleb128 0x15
 3870 0af8 01       		.uleb128 0x1
 3871 0af9 52       		.byte	0x52
 3872 0afa 01       		.uleb128 0x1
 3873 0afb 30       		.byte	0x30
 3874 0afc 00       		.byte	0
 3875 0afd 00       		.byte	0
 3876 0afe 1C       		.uleb128 0x1c
 3877 0aff 97030000 		.4byte	.LASF101
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 123


 3878 0b03 01       		.byte	0x1
 3879 0b04 9C03     		.2byte	0x39c
 3880 0b06 EF000000 		.4byte	0xef
 3881 0b0a 00000000 		.4byte	.LFB41
 3882 0b0e 78000000 		.4byte	.LFE41-.LFB41
 3883 0b12 01       		.uleb128 0x1
 3884 0b13 9C       		.byte	0x9c
 3885 0b14 ED0B0000 		.4byte	0xbed
 3886 0b18 10       		.uleb128 0x10
 3887 0b19 F4010000 		.4byte	.LASF75
 3888 0b1d 01       		.byte	0x1
 3889 0b1e 9C03     		.2byte	0x39c
 3890 0b20 23020000 		.4byte	0x223
 3891 0b24 92070000 		.4byte	.LLST42
 3892 0b28 10       		.uleb128 0x10
 3893 0b29 47070000 		.4byte	.LASF70
 3894 0b2d 01       		.byte	0x1
 3895 0b2e 9C03     		.2byte	0x39c
 3896 0b30 C9090000 		.4byte	0x9c9
 3897 0b34 BE070000 		.4byte	.LLST43
 3898 0b38 10       		.uleb128 0x10
 3899 0b39 67000000 		.4byte	.LASF102
 3900 0b3d 01       		.byte	0x1
 3901 0b3e 9C03     		.2byte	0x39c
 3902 0b40 F30B0000 		.4byte	0xbf3
 3903 0b44 E9070000 		.4byte	.LLST44
 3904 0b48 10       		.uleb128 0x10
 3905 0b49 43010000 		.4byte	.LASF90
 3906 0b4d 01       		.byte	0x1
 3907 0b4e 9C03     		.2byte	0x39c
 3908 0b50 AE040000 		.4byte	0x4ae
 3909 0b54 08080000 		.4byte	.LLST45
 3910 0b58 11       		.uleb128 0x11
 3911 0b59 BD070000 		.4byte	.LASF67
 3912 0b5d 01       		.byte	0x1
 3913 0b5e 9E03     		.2byte	0x39e
 3914 0b60 EF000000 		.4byte	0xef
 3915 0b64 B1080000 		.4byte	.LLST46
 3916 0b68 11       		.uleb128 0x11
 3917 0b69 9C010000 		.4byte	.LASF103
 3918 0b6d 01       		.byte	0x1
 3919 0b6e 9F03     		.2byte	0x39f
 3920 0b70 FA000000 		.4byte	0xfa
 3921 0b74 CF080000 		.4byte	.LLST47
 3922 0b78 11       		.uleb128 0x11
 3923 0b79 B5070000 		.4byte	.LASF65
 3924 0b7d 01       		.byte	0x1
 3925 0b7e A003     		.2byte	0x3a0
 3926 0b80 A9040000 		.4byte	0x4a9
 3927 0b84 03090000 		.4byte	.LLST48
 3928 0b88 1F       		.uleb128 0x1f
 3929 0b89 00000000 		.4byte	.Ldebug_ranges0+0
 3930 0b8d D30B0000 		.4byte	0xbd3
 3931 0b91 11       		.uleb128 0x11
 3932 0b92 11010000 		.4byte	.LASF55
 3933 0b96 01       		.byte	0x1
 3934 0b97 BF03     		.2byte	0x3bf
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 124


 3935 0b99 F80B0000 		.4byte	0xbf8
 3936 0b9d 2F090000 		.4byte	.LLST49
 3937 0ba1 17       		.uleb128 0x17
 3938 0ba2 2E000000 		.4byte	.LVL148
 3939 0ba6 1D040000 		.4byte	0x41d
 3940 0baa C20B0000 		.4byte	0xbc2
 3941 0bae 15       		.uleb128 0x15
 3942 0baf 01       		.uleb128 0x1
 3943 0bb0 50       		.byte	0x50
 3944 0bb1 02       		.uleb128 0x2
 3945 0bb2 76       		.byte	0x76
 3946 0bb3 00       		.sleb128 0
 3947 0bb4 15       		.uleb128 0x15
 3948 0bb5 01       		.uleb128 0x1
 3949 0bb6 51       		.byte	0x51
 3950 0bb7 03       		.uleb128 0x3
 3951 0bb8 7D       		.byte	0x7d
 3952 0bb9 00       		.sleb128 0
 3953 0bba 06       		.byte	0x6
 3954 0bbb 15       		.uleb128 0x15
 3955 0bbc 01       		.uleb128 0x1
 3956 0bbd 52       		.byte	0x52
 3957 0bbe 02       		.uleb128 0x2
 3958 0bbf 74       		.byte	0x74
 3959 0bc0 00       		.sleb128 0
 3960 0bc1 00       		.byte	0
 3961 0bc2 14       		.uleb128 0x14
 3962 0bc3 40000000 		.4byte	.LVL149
 3963 0bc7 7C170000 		.4byte	0x177c
 3964 0bcb 15       		.uleb128 0x15
 3965 0bcc 01       		.uleb128 0x1
 3966 0bcd 50       		.byte	0x50
 3967 0bce 02       		.uleb128 0x2
 3968 0bcf 76       		.byte	0x76
 3969 0bd0 24       		.sleb128 36
 3970 0bd1 00       		.byte	0
 3971 0bd2 00       		.byte	0
 3972 0bd3 12       		.uleb128 0x12
 3973 0bd4 10000000 		.4byte	.LVL144
 3974 0bd8 FE170000 		.4byte	0x17fe
 3975 0bdc 14       		.uleb128 0x14
 3976 0bdd 72000000 		.4byte	.LVL161
 3977 0be1 09180000 		.4byte	0x1809
 3978 0be5 15       		.uleb128 0x15
 3979 0be6 01       		.uleb128 0x1
 3980 0be7 50       		.byte	0x50
 3981 0be8 02       		.uleb128 0x2
 3982 0be9 75       		.byte	0x75
 3983 0bea 00       		.sleb128 0
 3984 0beb 00       		.byte	0
 3985 0bec 00       		.byte	0
 3986 0bed 06       		.uleb128 0x6
 3987 0bee 04       		.byte	0x4
 3988 0bef EF000000 		.4byte	0xef
 3989 0bf3 07       		.uleb128 0x7
 3990 0bf4 ED0B0000 		.4byte	0xbed
 3991 0bf8 07       		.uleb128 0x7
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 125


 3992 0bf9 C0000000 		.4byte	0xc0
 3993 0bfd 1C       		.uleb128 0x1c
 3994 0bfe 74040000 		.4byte	.LASF104
 3995 0c02 01       		.byte	0x1
 3996 0c03 3304     		.2byte	0x433
 3997 0c05 EF000000 		.4byte	0xef
 3998 0c09 00000000 		.4byte	.LFB42
 3999 0c0d 64000000 		.4byte	.LFE42-.LFB42
 4000 0c11 01       		.uleb128 0x1
 4001 0c12 9C       		.byte	0x9c
 4002 0c13 C50C0000 		.4byte	0xcc5
 4003 0c17 10       		.uleb128 0x10
 4004 0c18 F4010000 		.4byte	.LASF75
 4005 0c1c 01       		.byte	0x1
 4006 0c1d 3304     		.2byte	0x433
 4007 0c1f 23020000 		.4byte	0x223
 4008 0c23 4D090000 		.4byte	.LLST50
 4009 0c27 10       		.uleb128 0x10
 4010 0c28 67000000 		.4byte	.LASF102
 4011 0c2c 01       		.byte	0x1
 4012 0c2d 3304     		.2byte	0x433
 4013 0c2f F30B0000 		.4byte	0xbf3
 4014 0c33 F6090000 		.4byte	.LLST51
 4015 0c37 11       		.uleb128 0x11
 4016 0c38 BD070000 		.4byte	.LASF67
 4017 0c3c 01       		.byte	0x1
 4018 0c3d 3504     		.2byte	0x435
 4019 0c3f EF000000 		.4byte	0xef
 4020 0c43 220A0000 		.4byte	.LLST52
 4021 0c47 11       		.uleb128 0x11
 4022 0c48 9C010000 		.4byte	.LASF103
 4023 0c4c 01       		.byte	0x1
 4024 0c4d 3604     		.2byte	0x436
 4025 0c4f FA000000 		.4byte	0xfa
 4026 0c53 400A0000 		.4byte	.LLST53
 4027 0c57 11       		.uleb128 0x11
 4028 0c58 B5070000 		.4byte	.LASF65
 4029 0c5c 01       		.byte	0x1
 4030 0c5d 3704     		.2byte	0x437
 4031 0c5f A9040000 		.4byte	0x4a9
 4032 0c63 740A0000 		.4byte	.LLST54
 4033 0c67 16       		.uleb128 0x16
 4034 0c68 0C000000 		.4byte	.LBB6
 4035 0c6c 4E000000 		.4byte	.LBE6-.LBB6
 4036 0c70 AB0C0000 		.4byte	0xcab
 4037 0c74 11       		.uleb128 0x11
 4038 0c75 87020000 		.4byte	.LASF51
 4039 0c79 01       		.byte	0x1
 4040 0c7a 5C04     		.2byte	0x45c
 4041 0c7c DA060000 		.4byte	0x6da
 4042 0c80 1D0B0000 		.4byte	.LLST55
 4043 0c84 20       		.uleb128 0x20
 4044 0c85 18000000 		.4byte	.Ldebug_ranges0+0x18
 4045 0c89 11       		.uleb128 0x11
 4046 0c8a 11010000 		.4byte	.LASF55
 4047 0c8e 01       		.byte	0x1
 4048 0c8f 6304     		.2byte	0x463
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 126


 4049 0c91 F80B0000 		.4byte	0xbf8
 4050 0c95 8B0B0000 		.4byte	.LLST56
 4051 0c99 14       		.uleb128 0x14
 4052 0c9a 30000000 		.4byte	.LVL176
 4053 0c9e 7C170000 		.4byte	0x177c
 4054 0ca2 15       		.uleb128 0x15
 4055 0ca3 01       		.uleb128 0x1
 4056 0ca4 50       		.byte	0x50
 4057 0ca5 02       		.uleb128 0x2
 4058 0ca6 74       		.byte	0x74
 4059 0ca7 24       		.sleb128 36
 4060 0ca8 00       		.byte	0
 4061 0ca9 00       		.byte	0
 4062 0caa 00       		.byte	0
 4063 0cab 12       		.uleb128 0x12
 4064 0cac 0A000000 		.4byte	.LVL168
 4065 0cb0 FE170000 		.4byte	0x17fe
 4066 0cb4 14       		.uleb128 0x14
 4067 0cb5 60000000 		.4byte	.LVL191
 4068 0cb9 09180000 		.4byte	0x1809
 4069 0cbd 15       		.uleb128 0x15
 4070 0cbe 01       		.uleb128 0x1
 4071 0cbf 50       		.byte	0x50
 4072 0cc0 02       		.uleb128 0x2
 4073 0cc1 75       		.byte	0x75
 4074 0cc2 00       		.sleb128 0
 4075 0cc3 00       		.byte	0
 4076 0cc4 00       		.byte	0
 4077 0cc5 1C       		.uleb128 0x1c
 4078 0cc6 2D000000 		.4byte	.LASF105
 4079 0cca 01       		.byte	0x1
 4080 0ccb D804     		.2byte	0x4d8
 4081 0ccd EF000000 		.4byte	0xef
 4082 0cd1 00000000 		.4byte	.LFB43
 4083 0cd5 E4000000 		.4byte	.LFE43-.LFB43
 4084 0cd9 01       		.uleb128 0x1
 4085 0cda 9C       		.byte	0x9c
 4086 0cdb 950E0000 		.4byte	0xe95
 4087 0cdf 10       		.uleb128 0x10
 4088 0ce0 F4010000 		.4byte	.LASF75
 4089 0ce4 01       		.byte	0x1
 4090 0ce5 D804     		.2byte	0x4d8
 4091 0ce7 23020000 		.4byte	0x223
 4092 0ceb B60B0000 		.4byte	.LLST57
 4093 0cef 10       		.uleb128 0x10
 4094 0cf0 4E020000 		.4byte	.LASF72
 4095 0cf4 01       		.byte	0x1
 4096 0cf5 D804     		.2byte	0x4d8
 4097 0cf7 FA040000 		.4byte	0x4fa
 4098 0cfb E20B0000 		.4byte	.LLST58
 4099 0cff 10       		.uleb128 0x10
 4100 0d00 A8080000 		.4byte	.LASF89
 4101 0d04 01       		.byte	0x1
 4102 0d05 D804     		.2byte	0x4d8
 4103 0d07 05010000 		.4byte	0x105
 4104 0d0b 0E0C0000 		.4byte	.LLST59
 4105 0d0f 11       		.uleb128 0x11
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 127


 4106 0d10 4F030000 		.4byte	.LASF91
 4107 0d14 01       		.byte	0x1
 4108 0d15 DA04     		.2byte	0x4da
 4109 0d17 EF000000 		.4byte	0xef
 4110 0d1b 450C0000 		.4byte	.LLST60
 4111 0d1f 1D       		.uleb128 0x1d
 4112 0d20 64030000 		.4byte	.LASF93
 4113 0d24 01       		.byte	0x1
 4114 0d25 DB04     		.2byte	0x4db
 4115 0d27 18020000 		.4byte	0x218
 4116 0d2b 02       		.uleb128 0x2
 4117 0d2c 91       		.byte	0x91
 4118 0d2d 60       		.sleb128 -32
 4119 0d2e 11       		.uleb128 0x11
 4120 0d2f B5070000 		.4byte	.LASF65
 4121 0d33 01       		.byte	0x1
 4122 0d34 DC04     		.2byte	0x4dc
 4123 0d36 A9040000 		.4byte	0x4a9
 4124 0d3a 7B0C0000 		.4byte	.LLST61
 4125 0d3e 16       		.uleb128 0x16
 4126 0d3f 10000000 		.4byte	.LBB9
 4127 0d43 4A000000 		.4byte	.LBE9-.LBB9
 4128 0d47 B50D0000 		.4byte	0xdb5
 4129 0d4b 11       		.uleb128 0x11
 4130 0d4c 87020000 		.4byte	.LASF51
 4131 0d50 01       		.byte	0x1
 4132 0d51 F504     		.2byte	0x4f5
 4133 0d53 DA060000 		.4byte	0x6da
 4134 0d57 A70C0000 		.4byte	.LLST62
 4135 0d5b 17       		.uleb128 0x17
 4136 0d5c 1E000000 		.4byte	.LVL200
 4137 0d60 B3040000 		.4byte	0x4b3
 4138 0d64 750D0000 		.4byte	0xd75
 4139 0d68 15       		.uleb128 0x15
 4140 0d69 01       		.uleb128 0x1
 4141 0d6a 50       		.byte	0x50
 4142 0d6b 02       		.uleb128 0x2
 4143 0d6c 74       		.byte	0x74
 4144 0d6d 00       		.sleb128 0
 4145 0d6e 15       		.uleb128 0x15
 4146 0d6f 01       		.uleb128 0x1
 4147 0d70 51       		.byte	0x51
 4148 0d71 02       		.uleb128 0x2
 4149 0d72 75       		.byte	0x75
 4150 0d73 00       		.sleb128 0
 4151 0d74 00       		.byte	0
 4152 0d75 17       		.uleb128 0x17
 4153 0d76 30000000 		.4byte	.LVL202
 4154 0d7a 7C170000 		.4byte	0x177c
 4155 0d7e 890D0000 		.4byte	0xd89
 4156 0d82 15       		.uleb128 0x15
 4157 0d83 01       		.uleb128 0x1
 4158 0d84 50       		.byte	0x50
 4159 0d85 02       		.uleb128 0x2
 4160 0d86 74       		.byte	0x74
 4161 0d87 10       		.sleb128 16
 4162 0d88 00       		.byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 128


 4163 0d89 12       		.uleb128 0x12
 4164 0d8a 38000000 		.4byte	.LVL203
 4165 0d8e 94170000 		.4byte	0x1794
 4166 0d92 12       		.uleb128 0x12
 4167 0d93 3C000000 		.4byte	.LVL204
 4168 0d97 5C170000 		.4byte	0x175c
 4169 0d9b 12       		.uleb128 0x12
 4170 0d9c 4A000000 		.4byte	.LVL206
 4171 0da0 5C170000 		.4byte	0x175c
 4172 0da4 14       		.uleb128 0x14
 4173 0da5 58000000 		.4byte	.LVL207
 4174 0da9 B6170000 		.4byte	0x17b6
 4175 0dad 15       		.uleb128 0x15
 4176 0dae 01       		.uleb128 0x1
 4177 0daf 50       		.byte	0x50
 4178 0db0 02       		.uleb128 0x2
 4179 0db1 91       		.byte	0x91
 4180 0db2 60       		.sleb128 -32
 4181 0db3 00       		.byte	0
 4182 0db4 00       		.byte	0
 4183 0db5 12       		.uleb128 0x12
 4184 0db6 10000000 		.4byte	.LVL198
 4185 0dba 51170000 		.4byte	0x1751
 4186 0dbe 12       		.uleb128 0x12
 4187 0dbf 5E000000 		.4byte	.LVL209
 4188 0dc3 5C170000 		.4byte	0x175c
 4189 0dc7 12       		.uleb128 0x12
 4190 0dc8 62000000 		.4byte	.LVL210
 4191 0dcc C2170000 		.4byte	0x17c2
 4192 0dd0 12       		.uleb128 0x12
 4193 0dd1 66000000 		.4byte	.LVL211
 4194 0dd5 51170000 		.4byte	0x1751
 4195 0dd9 12       		.uleb128 0x12
 4196 0dda 8A000000 		.4byte	.LVL212
 4197 0dde 5C170000 		.4byte	0x175c
 4198 0de2 17       		.uleb128 0x17
 4199 0de3 92000000 		.4byte	.LVL214
 4200 0de7 CE170000 		.4byte	0x17ce
 4201 0deb FC0D0000 		.4byte	0xdfc
 4202 0def 15       		.uleb128 0x15
 4203 0df0 01       		.uleb128 0x1
 4204 0df1 50       		.byte	0x50
 4205 0df2 02       		.uleb128 0x2
 4206 0df3 91       		.byte	0x91
 4207 0df4 60       		.sleb128 -32
 4208 0df5 15       		.uleb128 0x15
 4209 0df6 01       		.uleb128 0x1
 4210 0df7 51       		.byte	0x51
 4211 0df8 02       		.uleb128 0x2
 4212 0df9 91       		.byte	0x91
 4213 0dfa 5C       		.sleb128 -36
 4214 0dfb 00       		.byte	0
 4215 0dfc 17       		.uleb128 0x17
 4216 0dfd 9C000000 		.4byte	.LVL215
 4217 0e01 D0030000 		.4byte	0x3d0
 4218 0e05 100E0000 		.4byte	0xe10
 4219 0e09 15       		.uleb128 0x15
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 129


 4220 0e0a 01       		.uleb128 0x1
 4221 0e0b 50       		.byte	0x50
 4222 0e0c 02       		.uleb128 0x2
 4223 0e0d 74       		.byte	0x74
 4224 0e0e 00       		.sleb128 0
 4225 0e0f 00       		.byte	0
 4226 0e10 17       		.uleb128 0x17
 4227 0e11 AA000000 		.4byte	.LVL216
 4228 0e15 DA170000 		.4byte	0x17da
 4229 0e19 240E0000 		.4byte	0xe24
 4230 0e1d 15       		.uleb128 0x15
 4231 0e1e 01       		.uleb128 0x1
 4232 0e1f 50       		.byte	0x50
 4233 0e20 02       		.uleb128 0x2
 4234 0e21 74       		.byte	0x74
 4235 0e22 24       		.sleb128 36
 4236 0e23 00       		.byte	0
 4237 0e24 17       		.uleb128 0x17
 4238 0e25 B0000000 		.4byte	.LVL217
 4239 0e29 FF040000 		.4byte	0x4ff
 4240 0e2d 380E0000 		.4byte	0xe38
 4241 0e31 15       		.uleb128 0x15
 4242 0e32 01       		.uleb128 0x1
 4243 0e33 50       		.byte	0x50
 4244 0e34 02       		.uleb128 0x2
 4245 0e35 74       		.byte	0x74
 4246 0e36 00       		.sleb128 0
 4247 0e37 00       		.byte	0
 4248 0e38 12       		.uleb128 0x12
 4249 0e39 B4000000 		.4byte	.LVL218
 4250 0e3d E6170000 		.4byte	0x17e6
 4251 0e41 12       		.uleb128 0x12
 4252 0e42 BC000000 		.4byte	.LVL219
 4253 0e46 94170000 		.4byte	0x1794
 4254 0e4a 17       		.uleb128 0x17
 4255 0e4b C4000000 		.4byte	.LVL220
 4256 0e4f FF040000 		.4byte	0x4ff
 4257 0e53 5E0E0000 		.4byte	0xe5e
 4258 0e57 15       		.uleb128 0x15
 4259 0e58 01       		.uleb128 0x1
 4260 0e59 50       		.byte	0x50
 4261 0e5a 02       		.uleb128 0x2
 4262 0e5b 74       		.byte	0x74
 4263 0e5c 00       		.sleb128 0
 4264 0e5d 00       		.byte	0
 4265 0e5e 12       		.uleb128 0x12
 4266 0e5f C8000000 		.4byte	.LVL221
 4267 0e63 E6170000 		.4byte	0x17e6
 4268 0e67 17       		.uleb128 0x17
 4269 0e68 D0000000 		.4byte	.LVL222
 4270 0e6c FF040000 		.4byte	0x4ff
 4271 0e70 7B0E0000 		.4byte	0xe7b
 4272 0e74 15       		.uleb128 0x15
 4273 0e75 01       		.uleb128 0x1
 4274 0e76 50       		.byte	0x50
 4275 0e77 02       		.uleb128 0x2
 4276 0e78 74       		.byte	0x74
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 130


 4277 0e79 00       		.sleb128 0
 4278 0e7a 00       		.byte	0
 4279 0e7b 12       		.uleb128 0x12
 4280 0e7c D4000000 		.4byte	.LVL223
 4281 0e80 E6170000 		.4byte	0x17e6
 4282 0e84 14       		.uleb128 0x14
 4283 0e85 DA000000 		.4byte	.LVL224
 4284 0e89 D0030000 		.4byte	0x3d0
 4285 0e8d 15       		.uleb128 0x15
 4286 0e8e 01       		.uleb128 0x1
 4287 0e8f 50       		.byte	0x50
 4288 0e90 02       		.uleb128 0x2
 4289 0e91 74       		.byte	0x74
 4290 0e92 00       		.sleb128 0
 4291 0e93 00       		.byte	0
 4292 0e94 00       		.byte	0
 4293 0e95 1C       		.uleb128 0x1c
 4294 0e96 89000000 		.4byte	.LASF106
 4295 0e9a 01       		.byte	0x1
 4296 0e9b 6605     		.2byte	0x566
 4297 0e9d EF000000 		.4byte	0xef
 4298 0ea1 00000000 		.4byte	.LFB44
 4299 0ea5 1C010000 		.4byte	.LFE44-.LFB44
 4300 0ea9 01       		.uleb128 0x1
 4301 0eaa 9C       		.byte	0x9c
 4302 0eab C0100000 		.4byte	0x10c0
 4303 0eaf 10       		.uleb128 0x10
 4304 0eb0 F4010000 		.4byte	.LASF75
 4305 0eb4 01       		.byte	0x1
 4306 0eb5 6605     		.2byte	0x566
 4307 0eb7 23020000 		.4byte	0x223
 4308 0ebb D20C0000 		.4byte	.LLST63
 4309 0ebf 10       		.uleb128 0x10
 4310 0ec0 A8080000 		.4byte	.LASF89
 4311 0ec4 01       		.byte	0x1
 4312 0ec5 6605     		.2byte	0x566
 4313 0ec7 05010000 		.4byte	0x105
 4314 0ecb FE0C0000 		.4byte	.LLST64
 4315 0ecf 11       		.uleb128 0x11
 4316 0ed0 4F030000 		.4byte	.LASF91
 4317 0ed4 01       		.byte	0x1
 4318 0ed5 6805     		.2byte	0x568
 4319 0ed7 EF000000 		.4byte	0xef
 4320 0edb 350D0000 		.4byte	.LLST65
 4321 0edf 1D       		.uleb128 0x1d
 4322 0ee0 64030000 		.4byte	.LASF93
 4323 0ee4 01       		.byte	0x1
 4324 0ee5 6905     		.2byte	0x569
 4325 0ee7 18020000 		.4byte	0x218
 4326 0eeb 02       		.uleb128 0x2
 4327 0eec 91       		.byte	0x91
 4328 0eed 68       		.sleb128 -24
 4329 0eee 11       		.uleb128 0x11
 4330 0eef B5070000 		.4byte	.LASF65
 4331 0ef3 01       		.byte	0x1
 4332 0ef4 6A05     		.2byte	0x56a
 4333 0ef6 A9040000 		.4byte	0x4a9
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 131


 4334 0efa 6B0D0000 		.4byte	.LLST66
 4335 0efe 11       		.uleb128 0x11
 4336 0eff AD060000 		.4byte	.LASF107
 4337 0f03 01       		.byte	0x1
 4338 0f04 6D05     		.2byte	0x56d
 4339 0f06 EF000000 		.4byte	0xef
 4340 0f0a 970D0000 		.4byte	.LLST67
 4341 0f0e 16       		.uleb128 0x16
 4342 0f0f 10000000 		.4byte	.LBB10
 4343 0f13 4E000000 		.4byte	.LBE10-.LBB10
 4344 0f17 740F0000 		.4byte	0xf74
 4345 0f1b 11       		.uleb128 0x11
 4346 0f1c 64060000 		.4byte	.LASF108
 4347 0f20 01       		.byte	0x1
 4348 0f21 8905     		.2byte	0x589
 4349 0f23 DA060000 		.4byte	0x6da
 4350 0f27 CC0D0000 		.4byte	.LLST68
 4351 0f2b 12       		.uleb128 0x12
 4352 0f2c 24000000 		.4byte	.LVL236
 4353 0f30 14180000 		.4byte	0x1814
 4354 0f34 17       		.uleb128 0x17
 4355 0f35 34000000 		.4byte	.LVL237
 4356 0f39 7C170000 		.4byte	0x177c
 4357 0f3d 480F0000 		.4byte	0xf48
 4358 0f41 15       		.uleb128 0x15
 4359 0f42 01       		.uleb128 0x1
 4360 0f43 50       		.byte	0x50
 4361 0f44 02       		.uleb128 0x2
 4362 0f45 74       		.byte	0x74
 4363 0f46 10       		.sleb128 16
 4364 0f47 00       		.byte	0
 4365 0f48 12       		.uleb128 0x12
 4366 0f49 3C000000 		.4byte	.LVL238
 4367 0f4d 94170000 		.4byte	0x1794
 4368 0f51 12       		.uleb128 0x12
 4369 0f52 40000000 		.4byte	.LVL239
 4370 0f56 5C170000 		.4byte	0x175c
 4371 0f5a 12       		.uleb128 0x12
 4372 0f5b 4E000000 		.4byte	.LVL242
 4373 0f5f 5C170000 		.4byte	0x175c
 4374 0f63 14       		.uleb128 0x14
 4375 0f64 5C000000 		.4byte	.LVL243
 4376 0f68 B6170000 		.4byte	0x17b6
 4377 0f6c 15       		.uleb128 0x15
 4378 0f6d 01       		.uleb128 0x1
 4379 0f6e 50       		.byte	0x50
 4380 0f6f 02       		.uleb128 0x2
 4381 0f70 91       		.byte	0x91
 4382 0f71 68       		.sleb128 -24
 4383 0f72 00       		.byte	0
 4384 0f73 00       		.byte	0
 4385 0f74 16       		.uleb128 0x16
 4386 0f75 00010000 		.4byte	.LBB11
 4387 0f79 0E000000 		.4byte	.LBE11-.LBB11
 4388 0f7d AF0F0000 		.4byte	0xfaf
 4389 0f81 11       		.uleb128 0x11
 4390 0f82 2D080000 		.4byte	.LASF109
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 132


 4391 0f86 01       		.byte	0x1
 4392 0f87 2606     		.2byte	0x626
 4393 0f89 FA000000 		.4byte	0xfa
 4394 0f8d 070E0000 		.4byte	.LLST69
 4395 0f91 17       		.uleb128 0x17
 4396 0f92 06010000 		.4byte	.LVL266
 4397 0f96 38030000 		.4byte	0x338
 4398 0f9a A50F0000 		.4byte	0xfa5
 4399 0f9e 15       		.uleb128 0x15
 4400 0f9f 01       		.uleb128 0x1
 4401 0fa0 50       		.byte	0x50
 4402 0fa1 02       		.uleb128 0x2
 4403 0fa2 74       		.byte	0x74
 4404 0fa3 00       		.sleb128 0
 4405 0fa4 00       		.byte	0
 4406 0fa5 12       		.uleb128 0x12
 4407 0fa6 0E010000 		.4byte	.LVL269
 4408 0faa 20180000 		.4byte	0x1820
 4409 0fae 00       		.byte	0
 4410 0faf 12       		.uleb128 0x12
 4411 0fb0 10000000 		.4byte	.LVL232
 4412 0fb4 51170000 		.4byte	0x1751
 4413 0fb8 12       		.uleb128 0x12
 4414 0fb9 62000000 		.4byte	.LVL245
 4415 0fbd 5C170000 		.4byte	0x175c
 4416 0fc1 12       		.uleb128 0x12
 4417 0fc2 66000000 		.4byte	.LVL246
 4418 0fc6 C2170000 		.4byte	0x17c2
 4419 0fca 12       		.uleb128 0x12
 4420 0fcb 6A000000 		.4byte	.LVL247
 4421 0fcf 51170000 		.4byte	0x1751
 4422 0fd3 12       		.uleb128 0x12
 4423 0fd4 8E000000 		.4byte	.LVL248
 4424 0fd8 5C170000 		.4byte	0x175c
 4425 0fdc 17       		.uleb128 0x17
 4426 0fdd 96000000 		.4byte	.LVL250
 4427 0fe1 CE170000 		.4byte	0x17ce
 4428 0fe5 F60F0000 		.4byte	0xff6
 4429 0fe9 15       		.uleb128 0x15
 4430 0fea 01       		.uleb128 0x1
 4431 0feb 50       		.byte	0x50
 4432 0fec 02       		.uleb128 0x2
 4433 0fed 91       		.byte	0x91
 4434 0fee 68       		.sleb128 -24
 4435 0fef 15       		.uleb128 0x15
 4436 0ff0 01       		.uleb128 0x1
 4437 0ff1 51       		.byte	0x51
 4438 0ff2 02       		.uleb128 0x2
 4439 0ff3 91       		.byte	0x91
 4440 0ff4 64       		.sleb128 -28
 4441 0ff5 00       		.byte	0
 4442 0ff6 17       		.uleb128 0x17
 4443 0ff7 A0000000 		.4byte	.LVL251
 4444 0ffb D0030000 		.4byte	0x3d0
 4445 0fff 0A100000 		.4byte	0x100a
 4446 1003 15       		.uleb128 0x15
 4447 1004 01       		.uleb128 0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 133


 4448 1005 50       		.byte	0x50
 4449 1006 02       		.uleb128 0x2
 4450 1007 74       		.byte	0x74
 4451 1008 00       		.sleb128 0
 4452 1009 00       		.byte	0
 4453 100a 12       		.uleb128 0x12
 4454 100b AE000000 		.4byte	.LVL252
 4455 100f 51170000 		.4byte	0x1751
 4456 1013 12       		.uleb128 0x12
 4457 1014 B4000000 		.4byte	.LVL253
 4458 1018 2C180000 		.4byte	0x182c
 4459 101c 12       		.uleb128 0x12
 4460 101d BA000000 		.4byte	.LVL255
 4461 1021 5C170000 		.4byte	0x175c
 4462 1025 17       		.uleb128 0x17
 4463 1026 C4000000 		.4byte	.LVL256
 4464 102a DA170000 		.4byte	0x17da
 4465 102e 39100000 		.4byte	0x1039
 4466 1032 15       		.uleb128 0x15
 4467 1033 01       		.uleb128 0x1
 4468 1034 50       		.byte	0x50
 4469 1035 02       		.uleb128 0x2
 4470 1036 74       		.byte	0x74
 4471 1037 24       		.sleb128 36
 4472 1038 00       		.byte	0
 4473 1039 17       		.uleb128 0x17
 4474 103a CA000000 		.4byte	.LVL257
 4475 103e FF040000 		.4byte	0x4ff
 4476 1042 4D100000 		.4byte	0x104d
 4477 1046 15       		.uleb128 0x15
 4478 1047 01       		.uleb128 0x1
 4479 1048 50       		.byte	0x50
 4480 1049 02       		.uleb128 0x2
 4481 104a 74       		.byte	0x74
 4482 104b 00       		.sleb128 0
 4483 104c 00       		.byte	0
 4484 104d 12       		.uleb128 0x12
 4485 104e CE000000 		.4byte	.LVL258
 4486 1052 E6170000 		.4byte	0x17e6
 4487 1056 12       		.uleb128 0x12
 4488 1057 D6000000 		.4byte	.LVL259
 4489 105b 94170000 		.4byte	0x1794
 4490 105f 17       		.uleb128 0x17
 4491 1060 DE000000 		.4byte	.LVL260
 4492 1064 FF040000 		.4byte	0x4ff
 4493 1068 73100000 		.4byte	0x1073
 4494 106c 15       		.uleb128 0x15
 4495 106d 01       		.uleb128 0x1
 4496 106e 50       		.byte	0x50
 4497 106f 02       		.uleb128 0x2
 4498 1070 74       		.byte	0x74
 4499 1071 00       		.sleb128 0
 4500 1072 00       		.byte	0
 4501 1073 12       		.uleb128 0x12
 4502 1074 E2000000 		.4byte	.LVL261
 4503 1078 E6170000 		.4byte	0x17e6
 4504 107c 17       		.uleb128 0x17
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 134


 4505 107d EA000000 		.4byte	.LVL262
 4506 1081 FF040000 		.4byte	0x4ff
 4507 1085 90100000 		.4byte	0x1090
 4508 1089 15       		.uleb128 0x15
 4509 108a 01       		.uleb128 0x1
 4510 108b 50       		.byte	0x50
 4511 108c 02       		.uleb128 0x2
 4512 108d 74       		.byte	0x74
 4513 108e 00       		.sleb128 0
 4514 108f 00       		.byte	0
 4515 1090 12       		.uleb128 0x12
 4516 1091 EE000000 		.4byte	.LVL263
 4517 1095 E6170000 		.4byte	0x17e6
 4518 1099 17       		.uleb128 0x17
 4519 109a F4000000 		.4byte	.LVL264
 4520 109e D0030000 		.4byte	0x3d0
 4521 10a2 AD100000 		.4byte	0x10ad
 4522 10a6 15       		.uleb128 0x15
 4523 10a7 01       		.uleb128 0x1
 4524 10a8 50       		.byte	0x50
 4525 10a9 02       		.uleb128 0x2
 4526 10aa 74       		.byte	0x74
 4527 10ab 00       		.sleb128 0
 4528 10ac 00       		.byte	0
 4529 10ad 12       		.uleb128 0x12
 4530 10ae 00010000 		.4byte	.LVL265
 4531 10b2 51170000 		.4byte	0x1751
 4532 10b6 12       		.uleb128 0x12
 4533 10b7 12010000 		.4byte	.LVL270
 4534 10bb 5C170000 		.4byte	0x175c
 4535 10bf 00       		.byte	0
 4536 10c0 1C       		.uleb128 0x1c
 4537 10c1 C2060000 		.4byte	.LASF110
 4538 10c5 01       		.byte	0x1
 4539 10c6 7602     		.2byte	0x276
 4540 10c8 EF000000 		.4byte	0xef
 4541 10cc 00000000 		.4byte	.LFB38
 4542 10d0 2E000000 		.4byte	.LFE38-.LFB38
 4543 10d4 01       		.uleb128 0x1
 4544 10d5 9C       		.byte	0x9c
 4545 10d6 3A110000 		.4byte	0x113a
 4546 10da 10       		.uleb128 0x10
 4547 10db 56050000 		.4byte	.LASF99
 4548 10df 01       		.byte	0x1
 4549 10e0 7602     		.2byte	0x276
 4550 10e2 23020000 		.4byte	0x223
 4551 10e6 250E0000 		.4byte	.LLST70
 4552 10ea 10       		.uleb128 0x10
 4553 10eb A8080000 		.4byte	.LASF89
 4554 10ef 01       		.byte	0x1
 4555 10f0 7602     		.2byte	0x276
 4556 10f2 05010000 		.4byte	0x105
 4557 10f6 510E0000 		.4byte	.LLST71
 4558 10fa 11       		.uleb128 0x11
 4559 10fb BD070000 		.4byte	.LASF67
 4560 10ff 01       		.byte	0x1
 4561 1100 7802     		.2byte	0x278
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 135


 4562 1102 EF000000 		.4byte	0xef
 4563 1106 7D0E0000 		.4byte	.LLST72
 4564 110a 11       		.uleb128 0x11
 4565 110b 81000000 		.4byte	.LASF100
 4566 110f 01       		.byte	0x1
 4567 1110 7902     		.2byte	0x279
 4568 1112 A9040000 		.4byte	0x4a9
 4569 1116 9C0E0000 		.4byte	.LLST73
 4570 111a 12       		.uleb128 0x12
 4571 111b 0C000000 		.4byte	.LVL276
 4572 111f F2170000 		.4byte	0x17f2
 4573 1123 14       		.uleb128 0x14
 4574 1124 22000000 		.4byte	.LVL279
 4575 1128 950E0000 		.4byte	0xe95
 4576 112c 15       		.uleb128 0x15
 4577 112d 01       		.uleb128 0x1
 4578 112e 50       		.byte	0x50
 4579 112f 02       		.uleb128 0x2
 4580 1130 74       		.byte	0x74
 4581 1131 00       		.sleb128 0
 4582 1132 15       		.uleb128 0x15
 4583 1133 01       		.uleb128 0x1
 4584 1134 51       		.byte	0x51
 4585 1135 02       		.uleb128 0x2
 4586 1136 76       		.byte	0x76
 4587 1137 00       		.sleb128 0
 4588 1138 00       		.byte	0
 4589 1139 00       		.byte	0
 4590 113a 1C       		.uleb128 0x1c
 4591 113b B6020000 		.4byte	.LASF111
 4592 113f 01       		.byte	0x1
 4593 1140 4106     		.2byte	0x641
 4594 1142 EF000000 		.4byte	0xef
 4595 1146 00000000 		.4byte	.LFB45
 4596 114a E4000000 		.4byte	.LFE45-.LFB45
 4597 114e 01       		.uleb128 0x1
 4598 114f 9C       		.byte	0x9c
 4599 1150 1A130000 		.4byte	0x131a
 4600 1154 10       		.uleb128 0x10
 4601 1155 F4010000 		.4byte	.LASF75
 4602 1159 01       		.byte	0x1
 4603 115a 4106     		.2byte	0x641
 4604 115c 23020000 		.4byte	0x223
 4605 1160 C80E0000 		.4byte	.LLST74
 4606 1164 10       		.uleb128 0x10
 4607 1165 4E020000 		.4byte	.LASF72
 4608 1169 01       		.byte	0x1
 4609 116a 4106     		.2byte	0x641
 4610 116c FA040000 		.4byte	0x4fa
 4611 1170 F40E0000 		.4byte	.LLST75
 4612 1174 10       		.uleb128 0x10
 4613 1175 A8080000 		.4byte	.LASF89
 4614 1179 01       		.byte	0x1
 4615 117a 4106     		.2byte	0x641
 4616 117c 05010000 		.4byte	0x105
 4617 1180 200F0000 		.4byte	.LLST76
 4618 1184 11       		.uleb128 0x11
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 136


 4619 1185 4F030000 		.4byte	.LASF91
 4620 1189 01       		.byte	0x1
 4621 118a 4306     		.2byte	0x643
 4622 118c EF000000 		.4byte	0xef
 4623 1190 570F0000 		.4byte	.LLST77
 4624 1194 1D       		.uleb128 0x1d
 4625 1195 64030000 		.4byte	.LASF93
 4626 1199 01       		.byte	0x1
 4627 119a 4406     		.2byte	0x644
 4628 119c 18020000 		.4byte	0x218
 4629 11a0 02       		.uleb128 0x2
 4630 11a1 91       		.byte	0x91
 4631 11a2 68       		.sleb128 -24
 4632 11a3 11       		.uleb128 0x11
 4633 11a4 1A060000 		.4byte	.LASF112
 4634 11a8 01       		.byte	0x1
 4635 11a9 4506     		.2byte	0x645
 4636 11ab 4D020000 		.4byte	0x24d
 4637 11af 980F0000 		.4byte	.LLST78
 4638 11b3 11       		.uleb128 0x11
 4639 11b4 B5070000 		.4byte	.LASF65
 4640 11b8 01       		.byte	0x1
 4641 11b9 4606     		.2byte	0x646
 4642 11bb A9040000 		.4byte	0x4a9
 4643 11bf AB0F0000 		.4byte	.LLST79
 4644 11c3 16       		.uleb128 0x16
 4645 11c4 10000000 		.4byte	.LBB12
 4646 11c8 4A000000 		.4byte	.LBE12-.LBB12
 4647 11cc 3A120000 		.4byte	0x123a
 4648 11d0 11       		.uleb128 0x11
 4649 11d1 87020000 		.4byte	.LASF51
 4650 11d5 01       		.byte	0x1
 4651 11d6 5F06     		.2byte	0x65f
 4652 11d8 DA060000 		.4byte	0x6da
 4653 11dc D70F0000 		.4byte	.LLST80
 4654 11e0 17       		.uleb128 0x17
 4655 11e1 20000000 		.4byte	.LVL289
 4656 11e5 B3040000 		.4byte	0x4b3
 4657 11e9 FA110000 		.4byte	0x11fa
 4658 11ed 15       		.uleb128 0x15
 4659 11ee 01       		.uleb128 0x1
 4660 11ef 50       		.byte	0x50
 4661 11f0 02       		.uleb128 0x2
 4662 11f1 74       		.byte	0x74
 4663 11f2 00       		.sleb128 0
 4664 11f3 15       		.uleb128 0x15
 4665 11f4 01       		.uleb128 0x1
 4666 11f5 51       		.byte	0x51
 4667 11f6 02       		.uleb128 0x2
 4668 11f7 75       		.byte	0x75
 4669 11f8 00       		.sleb128 0
 4670 11f9 00       		.byte	0
 4671 11fa 17       		.uleb128 0x17
 4672 11fb 30000000 		.4byte	.LVL290
 4673 11ff 7C170000 		.4byte	0x177c
 4674 1203 0E120000 		.4byte	0x120e
 4675 1207 15       		.uleb128 0x15
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 137


 4676 1208 01       		.uleb128 0x1
 4677 1209 50       		.byte	0x50
 4678 120a 02       		.uleb128 0x2
 4679 120b 74       		.byte	0x74
 4680 120c 24       		.sleb128 36
 4681 120d 00       		.byte	0
 4682 120e 12       		.uleb128 0x12
 4683 120f 38000000 		.4byte	.LVL291
 4684 1213 94170000 		.4byte	0x1794
 4685 1217 12       		.uleb128 0x12
 4686 1218 3C000000 		.4byte	.LVL292
 4687 121c 5C170000 		.4byte	0x175c
 4688 1220 12       		.uleb128 0x12
 4689 1221 4A000000 		.4byte	.LVL295
 4690 1225 5C170000 		.4byte	0x175c
 4691 1229 14       		.uleb128 0x14
 4692 122a 58000000 		.4byte	.LVL296
 4693 122e B6170000 		.4byte	0x17b6
 4694 1232 15       		.uleb128 0x15
 4695 1233 01       		.uleb128 0x1
 4696 1234 50       		.byte	0x50
 4697 1235 02       		.uleb128 0x2
 4698 1236 91       		.byte	0x91
 4699 1237 68       		.sleb128 -24
 4700 1238 00       		.byte	0
 4701 1239 00       		.byte	0
 4702 123a 12       		.uleb128 0x12
 4703 123b 10000000 		.4byte	.LVL286
 4704 123f 51170000 		.4byte	0x1751
 4705 1243 12       		.uleb128 0x12
 4706 1244 5E000000 		.4byte	.LVL298
 4707 1248 5C170000 		.4byte	0x175c
 4708 124c 12       		.uleb128 0x12
 4709 124d 62000000 		.4byte	.LVL299
 4710 1251 C2170000 		.4byte	0x17c2
 4711 1255 12       		.uleb128 0x12
 4712 1256 66000000 		.4byte	.LVL300
 4713 125a 51170000 		.4byte	0x1751
 4714 125e 12       		.uleb128 0x12
 4715 125f 8A000000 		.4byte	.LVL301
 4716 1263 5C170000 		.4byte	0x175c
 4717 1267 17       		.uleb128 0x17
 4718 1268 92000000 		.4byte	.LVL303
 4719 126c CE170000 		.4byte	0x17ce
 4720 1270 81120000 		.4byte	0x1281
 4721 1274 15       		.uleb128 0x15
 4722 1275 01       		.uleb128 0x1
 4723 1276 50       		.byte	0x50
 4724 1277 02       		.uleb128 0x2
 4725 1278 91       		.byte	0x91
 4726 1279 68       		.sleb128 -24
 4727 127a 15       		.uleb128 0x15
 4728 127b 01       		.uleb128 0x1
 4729 127c 51       		.byte	0x51
 4730 127d 02       		.uleb128 0x2
 4731 127e 91       		.byte	0x91
 4732 127f 64       		.sleb128 -28
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 138


 4733 1280 00       		.byte	0
 4734 1281 17       		.uleb128 0x17
 4735 1282 9C000000 		.4byte	.LVL304
 4736 1286 D0030000 		.4byte	0x3d0
 4737 128a 95120000 		.4byte	0x1295
 4738 128e 15       		.uleb128 0x15
 4739 128f 01       		.uleb128 0x1
 4740 1290 50       		.byte	0x50
 4741 1291 02       		.uleb128 0x2
 4742 1292 74       		.byte	0x74
 4743 1293 00       		.sleb128 0
 4744 1294 00       		.byte	0
 4745 1295 17       		.uleb128 0x17
 4746 1296 AA000000 		.4byte	.LVL305
 4747 129a DA170000 		.4byte	0x17da
 4748 129e A9120000 		.4byte	0x12a9
 4749 12a2 15       		.uleb128 0x15
 4750 12a3 01       		.uleb128 0x1
 4751 12a4 50       		.byte	0x50
 4752 12a5 02       		.uleb128 0x2
 4753 12a6 74       		.byte	0x74
 4754 12a7 24       		.sleb128 36
 4755 12a8 00       		.byte	0
 4756 12a9 17       		.uleb128 0x17
 4757 12aa B0000000 		.4byte	.LVL306
 4758 12ae FF040000 		.4byte	0x4ff
 4759 12b2 BD120000 		.4byte	0x12bd
 4760 12b6 15       		.uleb128 0x15
 4761 12b7 01       		.uleb128 0x1
 4762 12b8 50       		.byte	0x50
 4763 12b9 02       		.uleb128 0x2
 4764 12ba 74       		.byte	0x74
 4765 12bb 00       		.sleb128 0
 4766 12bc 00       		.byte	0
 4767 12bd 12       		.uleb128 0x12
 4768 12be B4000000 		.4byte	.LVL307
 4769 12c2 E6170000 		.4byte	0x17e6
 4770 12c6 12       		.uleb128 0x12
 4771 12c7 BC000000 		.4byte	.LVL308
 4772 12cb 94170000 		.4byte	0x1794
 4773 12cf 17       		.uleb128 0x17
 4774 12d0 C4000000 		.4byte	.LVL309
 4775 12d4 FF040000 		.4byte	0x4ff
 4776 12d8 E3120000 		.4byte	0x12e3
 4777 12dc 15       		.uleb128 0x15
 4778 12dd 01       		.uleb128 0x1
 4779 12de 50       		.byte	0x50
 4780 12df 02       		.uleb128 0x2
 4781 12e0 74       		.byte	0x74
 4782 12e1 00       		.sleb128 0
 4783 12e2 00       		.byte	0
 4784 12e3 12       		.uleb128 0x12
 4785 12e4 C8000000 		.4byte	.LVL310
 4786 12e8 E6170000 		.4byte	0x17e6
 4787 12ec 17       		.uleb128 0x17
 4788 12ed D0000000 		.4byte	.LVL311
 4789 12f1 FF040000 		.4byte	0x4ff
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 139


 4790 12f5 00130000 		.4byte	0x1300
 4791 12f9 15       		.uleb128 0x15
 4792 12fa 01       		.uleb128 0x1
 4793 12fb 50       		.byte	0x50
 4794 12fc 02       		.uleb128 0x2
 4795 12fd 74       		.byte	0x74
 4796 12fe 00       		.sleb128 0
 4797 12ff 00       		.byte	0
 4798 1300 12       		.uleb128 0x12
 4799 1301 D4000000 		.4byte	.LVL312
 4800 1305 E6170000 		.4byte	0x17e6
 4801 1309 14       		.uleb128 0x14
 4802 130a DA000000 		.4byte	.LVL313
 4803 130e D0030000 		.4byte	0x3d0
 4804 1312 15       		.uleb128 0x15
 4805 1313 01       		.uleb128 0x1
 4806 1314 50       		.byte	0x50
 4807 1315 02       		.uleb128 0x2
 4808 1316 74       		.byte	0x74
 4809 1317 00       		.sleb128 0
 4810 1318 00       		.byte	0
 4811 1319 00       		.byte	0
 4812 131a 1C       		.uleb128 0x1c
 4813 131b 3B000000 		.4byte	.LASF113
 4814 131f 01       		.byte	0x1
 4815 1320 D706     		.2byte	0x6d7
 4816 1322 EF000000 		.4byte	0xef
 4817 1326 00000000 		.4byte	.LFB46
 4818 132a 72000000 		.4byte	.LFE46-.LFB46
 4819 132e 01       		.uleb128 0x1
 4820 132f 9C       		.byte	0x9c
 4821 1330 0D140000 		.4byte	0x140d
 4822 1334 10       		.uleb128 0x10
 4823 1335 F4010000 		.4byte	.LASF75
 4824 1339 01       		.byte	0x1
 4825 133a D706     		.2byte	0x6d7
 4826 133c 23020000 		.4byte	0x223
 4827 1340 F50F0000 		.4byte	.LLST81
 4828 1344 10       		.uleb128 0x10
 4829 1345 4E020000 		.4byte	.LASF72
 4830 1349 01       		.byte	0x1
 4831 134a D706     		.2byte	0x6d7
 4832 134c FA040000 		.4byte	0x4fa
 4833 1350 9E100000 		.4byte	.LLST82
 4834 1354 10       		.uleb128 0x10
 4835 1355 67000000 		.4byte	.LASF102
 4836 1359 01       		.byte	0x1
 4837 135a D706     		.2byte	0x6d7
 4838 135c F30B0000 		.4byte	0xbf3
 4839 1360 C9100000 		.4byte	.LLST83
 4840 1364 11       		.uleb128 0x11
 4841 1365 BD070000 		.4byte	.LASF67
 4842 1369 01       		.byte	0x1
 4843 136a D906     		.2byte	0x6d9
 4844 136c EF000000 		.4byte	0xef
 4845 1370 E8100000 		.4byte	.LLST84
 4846 1374 11       		.uleb128 0x11
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 140


 4847 1375 9C010000 		.4byte	.LASF103
 4848 1379 01       		.byte	0x1
 4849 137a DA06     		.2byte	0x6da
 4850 137c FA000000 		.4byte	0xfa
 4851 1380 06110000 		.4byte	.LLST85
 4852 1384 11       		.uleb128 0x11
 4853 1385 B5070000 		.4byte	.LASF65
 4854 1389 01       		.byte	0x1
 4855 138a DB06     		.2byte	0x6db
 4856 138c A9040000 		.4byte	0x4a9
 4857 1390 3A110000 		.4byte	.LLST86
 4858 1394 16       		.uleb128 0x16
 4859 1395 10000000 		.4byte	.LBB13
 4860 1399 56000000 		.4byte	.LBE13-.LBB13
 4861 139d F3130000 		.4byte	0x13f3
 4862 13a1 11       		.uleb128 0x11
 4863 13a2 87020000 		.4byte	.LASF51
 4864 13a6 01       		.byte	0x1
 4865 13a7 F206     		.2byte	0x6f2
 4866 13a9 DA060000 		.4byte	0x6da
 4867 13ad E3110000 		.4byte	.LLST87
 4868 13b1 20       		.uleb128 0x20
 4869 13b2 30000000 		.4byte	.Ldebug_ranges0+0x30
 4870 13b6 11       		.uleb128 0x11
 4871 13b7 8C090000 		.4byte	.LASF54
 4872 13bb 01       		.byte	0x1
 4873 13bc F706     		.2byte	0x6f7
 4874 13be F80B0000 		.4byte	0xbf8
 4875 13c2 F6110000 		.4byte	.LLST88
 4876 13c6 17       		.uleb128 0x17
 4877 13c7 24000000 		.4byte	.LVL324
 4878 13cb B3040000 		.4byte	0x4b3
 4879 13cf E1130000 		.4byte	0x13e1
 4880 13d3 15       		.uleb128 0x15
 4881 13d4 01       		.uleb128 0x1
 4882 13d5 50       		.byte	0x50
 4883 13d6 02       		.uleb128 0x2
 4884 13d7 74       		.byte	0x74
 4885 13d8 00       		.sleb128 0
 4886 13d9 15       		.uleb128 0x15
 4887 13da 01       		.uleb128 0x1
 4888 13db 51       		.byte	0x51
 4889 13dc 03       		.uleb128 0x3
 4890 13dd 7D       		.byte	0x7d
 4891 13de 00       		.sleb128 0
 4892 13df 06       		.byte	0x6
 4893 13e0 00       		.byte	0
 4894 13e1 14       		.uleb128 0x14
 4895 13e2 3A000000 		.4byte	.LVL325
 4896 13e6 7C170000 		.4byte	0x177c
 4897 13ea 15       		.uleb128 0x15
 4898 13eb 01       		.uleb128 0x1
 4899 13ec 50       		.byte	0x50
 4900 13ed 02       		.uleb128 0x2
 4901 13ee 74       		.byte	0x74
 4902 13ef 10       		.sleb128 16
 4903 13f0 00       		.byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 141


 4904 13f1 00       		.byte	0
 4905 13f2 00       		.byte	0
 4906 13f3 12       		.uleb128 0x12
 4907 13f4 0E000000 		.4byte	.LVL319
 4908 13f8 FE170000 		.4byte	0x17fe
 4909 13fc 14       		.uleb128 0x14
 4910 13fd 6C000000 		.4byte	.LVL337
 4911 1401 09180000 		.4byte	0x1809
 4912 1405 15       		.uleb128 0x15
 4913 1406 01       		.uleb128 0x1
 4914 1407 50       		.byte	0x50
 4915 1408 02       		.uleb128 0x2
 4916 1409 75       		.byte	0x75
 4917 140a 00       		.sleb128 0
 4918 140b 00       		.byte	0
 4919 140c 00       		.byte	0
 4920 140d 1C       		.uleb128 0x1c
 4921 140e 1B080000 		.4byte	.LASF114
 4922 1412 01       		.byte	0x1
 4923 1413 3207     		.2byte	0x732
 4924 1415 EF000000 		.4byte	0xef
 4925 1419 00000000 		.4byte	.LFB47
 4926 141d 2E000000 		.4byte	.LFE47-.LFB47
 4927 1421 01       		.uleb128 0x1
 4928 1422 9C       		.byte	0x9c
 4929 1423 BB140000 		.4byte	0x14bb
 4930 1427 10       		.uleb128 0x10
 4931 1428 F4010000 		.4byte	.LASF75
 4932 142c 01       		.byte	0x1
 4933 142d 3207     		.2byte	0x732
 4934 142f 23020000 		.4byte	0x223
 4935 1433 14120000 		.4byte	.LLST89
 4936 1437 10       		.uleb128 0x10
 4937 1438 4E020000 		.4byte	.LASF72
 4938 143c 01       		.byte	0x1
 4939 143d 3207     		.2byte	0x732
 4940 143f FA040000 		.4byte	0x4fa
 4941 1443 59120000 		.4byte	.LLST90
 4942 1447 11       		.uleb128 0x11
 4943 1448 BD070000 		.4byte	.LASF67
 4944 144c 01       		.byte	0x1
 4945 144d 3407     		.2byte	0x734
 4946 144f EF000000 		.4byte	0xef
 4947 1453 85120000 		.4byte	.LLST91
 4948 1457 11       		.uleb128 0x11
 4949 1458 9C010000 		.4byte	.LASF103
 4950 145c 01       		.byte	0x1
 4951 145d 3507     		.2byte	0x735
 4952 145f FA000000 		.4byte	0xfa
 4953 1463 AF120000 		.4byte	.LLST92
 4954 1467 11       		.uleb128 0x11
 4955 1468 1A060000 		.4byte	.LASF112
 4956 146c 01       		.byte	0x1
 4957 146d 3607     		.2byte	0x736
 4958 146f 4D020000 		.4byte	0x24d
 4959 1473 E3120000 		.4byte	.LLST93
 4960 1477 11       		.uleb128 0x11
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 142


 4961 1478 B5070000 		.4byte	.LASF65
 4962 147c 01       		.byte	0x1
 4963 147d 3707     		.2byte	0x737
 4964 147f A9040000 		.4byte	0x4a9
 4965 1483 F6120000 		.4byte	.LLST94
 4966 1487 12       		.uleb128 0x12
 4967 1488 0A000000 		.4byte	.LVL344
 4968 148c FE170000 		.4byte	0x17fe
 4969 1490 17       		.uleb128 0x17
 4970 1491 1C000000 		.4byte	.LVL348
 4971 1495 B3040000 		.4byte	0x4b3
 4972 1499 AA140000 		.4byte	0x14aa
 4973 149d 15       		.uleb128 0x15
 4974 149e 01       		.uleb128 0x1
 4975 149f 50       		.byte	0x50
 4976 14a0 02       		.uleb128 0x2
 4977 14a1 74       		.byte	0x74
 4978 14a2 00       		.sleb128 0
 4979 14a3 15       		.uleb128 0x15
 4980 14a4 01       		.uleb128 0x1
 4981 14a5 51       		.byte	0x51
 4982 14a6 02       		.uleb128 0x2
 4983 14a7 76       		.byte	0x76
 4984 14a8 00       		.sleb128 0
 4985 14a9 00       		.byte	0
 4986 14aa 14       		.uleb128 0x14
 4987 14ab 2A000000 		.4byte	.LVL353
 4988 14af 09180000 		.4byte	0x1809
 4989 14b3 15       		.uleb128 0x15
 4990 14b4 01       		.uleb128 0x1
 4991 14b5 50       		.byte	0x50
 4992 14b6 02       		.uleb128 0x2
 4993 14b7 75       		.byte	0x75
 4994 14b8 00       		.sleb128 0
 4995 14b9 00       		.byte	0
 4996 14ba 00       		.byte	0
 4997 14bb 1C       		.uleb128 0x1c
 4998 14bc 8D070000 		.4byte	.LASF115
 4999 14c0 01       		.byte	0x1
 5000 14c1 6807     		.2byte	0x768
 5001 14c3 FA000000 		.4byte	0xfa
 5002 14c7 00000000 		.4byte	.LFB48
 5003 14cb 12000000 		.4byte	.LFE48-.LFB48
 5004 14cf 01       		.uleb128 0x1
 5005 14d0 9C       		.byte	0x9c
 5006 14d1 08150000 		.4byte	0x1508
 5007 14d5 10       		.uleb128 0x10
 5008 14d6 F4010000 		.4byte	.LASF75
 5009 14da 01       		.byte	0x1
 5010 14db 6807     		.2byte	0x768
 5011 14dd 08150000 		.4byte	0x1508
 5012 14e1 3B130000 		.4byte	.LLST95
 5013 14e5 11       		.uleb128 0x11
 5014 14e6 51010000 		.4byte	.LASF116
 5015 14ea 01       		.byte	0x1
 5016 14eb 6A07     		.2byte	0x76a
 5017 14ed FA000000 		.4byte	0xfa
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 143


 5018 14f1 67130000 		.4byte	.LLST96
 5019 14f5 12       		.uleb128 0x12
 5020 14f6 08000000 		.4byte	.LVL358
 5021 14fa 51170000 		.4byte	0x1751
 5022 14fe 12       		.uleb128 0x12
 5023 14ff 0E000000 		.4byte	.LVL360
 5024 1503 5C170000 		.4byte	0x175c
 5025 1507 00       		.byte	0
 5026 1508 07       		.uleb128 0x7
 5027 1509 23020000 		.4byte	0x223
 5028 150d 1C       		.uleb128 0x1c
 5029 150e FA000000 		.4byte	.LASF117
 5030 1512 01       		.byte	0x1
 5031 1513 7807     		.2byte	0x778
 5032 1515 FA000000 		.4byte	0xfa
 5033 1519 00000000 		.4byte	.LFB49
 5034 151d 16000000 		.4byte	.LFE49-.LFB49
 5035 1521 01       		.uleb128 0x1
 5036 1522 9C       		.byte	0x9c
 5037 1523 6A150000 		.4byte	0x156a
 5038 1527 10       		.uleb128 0x10
 5039 1528 F4010000 		.4byte	.LASF75
 5040 152c 01       		.byte	0x1
 5041 152d 7807     		.2byte	0x778
 5042 152f 08150000 		.4byte	0x1508
 5043 1533 85130000 		.4byte	.LLST97
 5044 1537 11       		.uleb128 0x11
 5045 1538 51010000 		.4byte	.LASF116
 5046 153c 01       		.byte	0x1
 5047 153d 7A07     		.2byte	0x77a
 5048 153f FA000000 		.4byte	0xfa
 5049 1543 B1130000 		.4byte	.LLST98
 5050 1547 11       		.uleb128 0x11
 5051 1548 B5070000 		.4byte	.LASF65
 5052 154c 01       		.byte	0x1
 5053 154d 7B07     		.2byte	0x77b
 5054 154f A3040000 		.4byte	0x4a3
 5055 1553 CF130000 		.4byte	.LLST99
 5056 1557 12       		.uleb128 0x12
 5057 1558 08000000 		.4byte	.LVL364
 5058 155c 51170000 		.4byte	0x1751
 5059 1560 12       		.uleb128 0x12
 5060 1561 12000000 		.4byte	.LVL367
 5061 1565 5C170000 		.4byte	0x175c
 5062 1569 00       		.byte	0
 5063 156a 1C       		.uleb128 0x1c
 5064 156b AC040000 		.4byte	.LASF118
 5065 156f 01       		.byte	0x1
 5066 1570 8A07     		.2byte	0x78a
 5067 1572 FA000000 		.4byte	0xfa
 5068 1576 00000000 		.4byte	.LFB50
 5069 157a 04000000 		.4byte	.LFE50-.LFB50
 5070 157e 01       		.uleb128 0x1
 5071 157f 9C       		.byte	0x9c
 5072 1580 A3150000 		.4byte	0x15a3
 5073 1584 10       		.uleb128 0x10
 5074 1585 F4010000 		.4byte	.LASF75
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 144


 5075 1589 01       		.byte	0x1
 5076 158a 8A07     		.2byte	0x78a
 5077 158c 08150000 		.4byte	0x1508
 5078 1590 FB130000 		.4byte	.LLST100
 5079 1594 1D       		.uleb128 0x1d
 5080 1595 51010000 		.4byte	.LASF116
 5081 1599 01       		.byte	0x1
 5082 159a 8C07     		.2byte	0x78c
 5083 159c FA000000 		.4byte	0xfa
 5084 15a0 01       		.uleb128 0x1
 5085 15a1 50       		.byte	0x50
 5086 15a2 00       		.byte	0
 5087 15a3 1C       		.uleb128 0x1c
 5088 15a4 34090000 		.4byte	.LASF119
 5089 15a8 01       		.byte	0x1
 5090 15a9 E708     		.2byte	0x8e7
 5091 15ab EF000000 		.4byte	0xef
 5092 15af 00000000 		.4byte	.LFB57
 5093 15b3 0E000000 		.4byte	.LFE57-.LFB57
 5094 15b7 01       		.uleb128 0x1
 5095 15b8 9C       		.byte	0x9c
 5096 15b9 DC150000 		.4byte	0x15dc
 5097 15bd 10       		.uleb128 0x10
 5098 15be F4010000 		.4byte	.LASF75
 5099 15c2 01       		.byte	0x1
 5100 15c3 E708     		.2byte	0x8e7
 5101 15c5 08150000 		.4byte	0x1508
 5102 15c9 1C140000 		.4byte	.LLST101
 5103 15cd 1D       		.uleb128 0x1d
 5104 15ce BD070000 		.4byte	.LASF67
 5105 15d2 01       		.byte	0x1
 5106 15d3 E908     		.2byte	0x8e9
 5107 15d5 EF000000 		.4byte	0xef
 5108 15d9 01       		.uleb128 0x1
 5109 15da 50       		.byte	0x50
 5110 15db 00       		.byte	0
 5111 15dc 1C       		.uleb128 0x1c
 5112 15dd 74070000 		.4byte	.LASF120
 5113 15e1 01       		.byte	0x1
 5114 15e2 0E09     		.2byte	0x90e
 5115 15e4 EF000000 		.4byte	0xef
 5116 15e8 00000000 		.4byte	.LFB59
 5117 15ec 10000000 		.4byte	.LFE59-.LFB59
 5118 15f0 01       		.uleb128 0x1
 5119 15f1 9C       		.byte	0x9c
 5120 15f2 15160000 		.4byte	0x1615
 5121 15f6 10       		.uleb128 0x10
 5122 15f7 F4010000 		.4byte	.LASF75
 5123 15fb 01       		.byte	0x1
 5124 15fc 0E09     		.2byte	0x90e
 5125 15fe 08150000 		.4byte	0x1508
 5126 1602 56140000 		.4byte	.LLST102
 5127 1606 1D       		.uleb128 0x1d
 5128 1607 BD070000 		.4byte	.LASF67
 5129 160b 01       		.byte	0x1
 5130 160c 1009     		.2byte	0x910
 5131 160e EF000000 		.4byte	0xef
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 145


 5132 1612 01       		.uleb128 0x1
 5133 1613 50       		.byte	0x50
 5134 1614 00       		.byte	0
 5135 1615 21       		.uleb128 0x21
 5136 1616 C3050000 		.4byte	.LASF123
 5137 161a 01       		.byte	0x1
 5138 161b 350A     		.2byte	0xa35
 5139 161d 00000000 		.4byte	.LFB60
 5140 1621 28000000 		.4byte	.LFE60-.LFB60
 5141 1625 01       		.uleb128 0x1
 5142 1626 9C       		.byte	0x9c
 5143 1627 57160000 		.4byte	0x1657
 5144 162b 1B       		.uleb128 0x1b
 5145 162c F4010000 		.4byte	.LASF75
 5146 1630 01       		.byte	0x1
 5147 1631 350A     		.2byte	0xa35
 5148 1633 23020000 		.4byte	0x223
 5149 1637 01       		.uleb128 0x1
 5150 1638 50       		.byte	0x50
 5151 1639 1B       		.uleb128 0x1b
 5152 163a 75030000 		.4byte	.LASF59
 5153 163e 01       		.byte	0x1
 5154 163f 350A     		.2byte	0xa35
 5155 1641 AE000000 		.4byte	0xae
 5156 1645 01       		.uleb128 0x1
 5157 1646 51       		.byte	0x51
 5158 1647 22       		.uleb128 0x22
 5159 1648 757800   		.ascii	"ux\000"
 5160 164b 01       		.byte	0x1
 5161 164c 370A     		.2byte	0xa37
 5162 164e FA000000 		.4byte	0xfa
 5163 1652 90140000 		.4byte	.LLST103
 5164 1656 00       		.byte	0
 5165 1657 1C       		.uleb128 0x1c
 5166 1658 E7060000 		.4byte	.LASF121
 5167 165c 01       		.byte	0x1
 5168 165d 520A     		.2byte	0xa52
 5169 165f AE000000 		.4byte	0xae
 5170 1663 00000000 		.4byte	.LFB61
 5171 1667 24000000 		.4byte	.LFE61-.LFB61
 5172 166b 01       		.uleb128 0x1
 5173 166c 9C       		.byte	0x9c
 5174 166d A1160000 		.4byte	0x16a1
 5175 1671 10       		.uleb128 0x10
 5176 1672 F4010000 		.4byte	.LASF75
 5177 1676 01       		.byte	0x1
 5178 1677 520A     		.2byte	0xa52
 5179 1679 23020000 		.4byte	0x223
 5180 167d BA140000 		.4byte	.LLST104
 5181 1681 22       		.uleb128 0x22
 5182 1682 757800   		.ascii	"ux\000"
 5183 1685 01       		.byte	0x1
 5184 1686 540A     		.2byte	0xa54
 5185 1688 FA000000 		.4byte	0xfa
 5186 168c F4140000 		.4byte	.LLST105
 5187 1690 11       		.uleb128 0x11
 5188 1691 F6060000 		.4byte	.LASF122
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 146


 5189 1695 01       		.byte	0x1
 5190 1696 550A     		.2byte	0xa55
 5191 1698 AE000000 		.4byte	0xae
 5192 169c 1E150000 		.4byte	.LLST106
 5193 16a0 00       		.byte	0
 5194 16a1 21       		.uleb128 0x21
 5195 16a2 86010000 		.4byte	.LASF124
 5196 16a6 01       		.byte	0x1
 5197 16a7 6E0A     		.2byte	0xa6e
 5198 16a9 00000000 		.4byte	.LFB62
 5199 16ad 28000000 		.4byte	.LFE62-.LFB62
 5200 16b1 01       		.uleb128 0x1
 5201 16b2 9C       		.byte	0x9c
 5202 16b3 D5160000 		.4byte	0x16d5
 5203 16b7 1B       		.uleb128 0x1b
 5204 16b8 F4010000 		.4byte	.LASF75
 5205 16bc 01       		.byte	0x1
 5206 16bd 6E0A     		.2byte	0xa6e
 5207 16bf 23020000 		.4byte	0x223
 5208 16c3 01       		.uleb128 0x1
 5209 16c4 50       		.byte	0x50
 5210 16c5 22       		.uleb128 0x22
 5211 16c6 757800   		.ascii	"ux\000"
 5212 16c9 01       		.byte	0x1
 5213 16ca 700A     		.2byte	0xa70
 5214 16cc FA000000 		.4byte	0xfa
 5215 16d0 54150000 		.4byte	.LLST107
 5216 16d4 00       		.byte	0
 5217 16d5 21       		.uleb128 0x21
 5218 16d6 6E010000 		.4byte	.LASF125
 5219 16da 01       		.byte	0x1
 5220 16db 9607     		.2byte	0x796
 5221 16dd 00000000 		.4byte	.LFB51
 5222 16e1 10000000 		.4byte	.LFE51-.LFB51
 5223 16e5 01       		.uleb128 0x1
 5224 16e6 9C       		.byte	0x9c
 5225 16e7 30170000 		.4byte	0x1730
 5226 16eb 10       		.uleb128 0x10
 5227 16ec F4010000 		.4byte	.LASF75
 5228 16f0 01       		.byte	0x1
 5229 16f1 9607     		.2byte	0x796
 5230 16f3 23020000 		.4byte	0x223
 5231 16f7 7E150000 		.4byte	.LLST108
 5232 16fb 11       		.uleb128 0x11
 5233 16fc B5070000 		.4byte	.LASF65
 5234 1700 01       		.byte	0x1
 5235 1701 9807     		.2byte	0x798
 5236 1703 A9040000 		.4byte	0x4a9
 5237 1707 AA150000 		.4byte	.LLST109
 5238 170b 17       		.uleb128 0x17
 5239 170c 08000000 		.4byte	.LVL401
 5240 1710 A1160000 		.4byte	0x16a1
 5241 1714 1F170000 		.4byte	0x171f
 5242 1718 15       		.uleb128 0x15
 5243 1719 01       		.uleb128 0x1
 5244 171a 50       		.byte	0x50
 5245 171b 02       		.uleb128 0x2
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 147


 5246 171c 74       		.byte	0x74
 5247 171d 00       		.sleb128 0
 5248 171e 00       		.byte	0
 5249 171f 14       		.uleb128 0x14
 5250 1720 0E000000 		.4byte	.LVL402
 5251 1724 38180000 		.4byte	0x1838
 5252 1728 15       		.uleb128 0x15
 5253 1729 01       		.uleb128 0x1
 5254 172a 50       		.byte	0x50
 5255 172b 02       		.uleb128 0x2
 5256 172c 74       		.byte	0x74
 5257 172d 00       		.sleb128 0
 5258 172e 00       		.byte	0
 5259 172f 00       		.byte	0
 5260 1730 23       		.uleb128 0x23
 5261 1731 2D030000 		.4byte	0x32d
 5262 1735 40170000 		.4byte	0x1740
 5263 1739 24       		.uleb128 0x24
 5264 173a 9E000000 		.4byte	0x9e
 5265 173e 09       		.byte	0x9
 5266 173f 00       		.byte	0
 5267 1740 25       		.uleb128 0x25
 5268 1741 86040000 		.4byte	.LASF149
 5269 1745 01       		.byte	0x1
 5270 1746 9B       		.byte	0x9b
 5271 1747 30170000 		.4byte	0x1730
 5272 174b 05       		.uleb128 0x5
 5273 174c 03       		.byte	0x3
 5274 174d 00000000 		.4byte	xQueueRegistry
 5275 1751 26       		.uleb128 0x26
 5276 1752 28010000 		.4byte	.LASF126
 5277 1756 28010000 		.4byte	.LASF126
 5278 175a 05       		.byte	0x5
 5279 175b 5B       		.byte	0x5b
 5280 175c 26       		.uleb128 0x26
 5281 175d 10000000 		.4byte	.LASF127
 5282 1761 10000000 		.4byte	.LASF127
 5283 1765 05       		.byte	0x5
 5284 1766 5C       		.byte	0x5c
 5285 1767 27       		.uleb128 0x27
 5286 1768 23040000 		.4byte	.LASF128
 5287 176c 23040000 		.4byte	.LASF128
 5288 1770 07       		.byte	0x7
 5289 1771 DF08     		.2byte	0x8df
 5290 1773 28       		.uleb128 0x28
 5291 1774 6D090000 		.4byte	.LASF150
 5292 1778 6D090000 		.4byte	.LASF150
 5293 177c 27       		.uleb128 0x27
 5294 177d AE090000 		.4byte	.LASF129
 5295 1781 AE090000 		.4byte	.LASF129
 5296 1785 07       		.byte	0x7
 5297 1786 A608     		.2byte	0x8a6
 5298 1788 27       		.uleb128 0x27
 5299 1789 CE070000 		.4byte	.LASF130
 5300 178d CE070000 		.4byte	.LASF130
 5301 1791 07       		.byte	0x7
 5302 1792 CD08     		.2byte	0x8cd
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 148


 5303 1794 26       		.uleb128 0x26
 5304 1795 22000000 		.4byte	.LASF131
 5305 1799 22000000 		.4byte	.LASF131
 5306 179d 05       		.byte	0x5
 5307 179e 51       		.byte	0x51
 5308 179f 27       		.uleb128 0x27
 5309 17a0 5F080000 		.4byte	.LASF132
 5310 17a4 5F080000 		.4byte	.LASF132
 5311 17a8 06       		.byte	0x6
 5312 17a9 5901     		.2byte	0x159
 5313 17ab 26       		.uleb128 0x26
 5314 17ac 99020000 		.4byte	.LASF133
 5315 17b0 99020000 		.4byte	.LASF133
 5316 17b4 09       		.byte	0x9
 5317 17b5 82       		.byte	0x82
 5318 17b6 27       		.uleb128 0x27
 5319 17b7 FD050000 		.4byte	.LASF134
 5320 17bb FD050000 		.4byte	.LASF134
 5321 17bf 07       		.byte	0x7
 5322 17c0 1A09     		.2byte	0x91a
 5323 17c2 27       		.uleb128 0x27
 5324 17c3 A6020000 		.4byte	.LASF135
 5325 17c7 A6020000 		.4byte	.LASF135
 5326 17cb 07       		.byte	0x7
 5327 17cc FA04     		.2byte	0x4fa
 5328 17ce 27       		.uleb128 0x27
 5329 17cf 55070000 		.4byte	.LASF136
 5330 17d3 55070000 		.4byte	.LASF136
 5331 17d7 07       		.byte	0x7
 5332 17d8 C708     		.2byte	0x8c7
 5333 17da 27       		.uleb128 0x27
 5334 17db D5030000 		.4byte	.LASF137
 5335 17df D5030000 		.4byte	.LASF137
 5336 17e3 07       		.byte	0x7
 5337 17e4 7E08     		.2byte	0x87e
 5338 17e6 27       		.uleb128 0x27
 5339 17e7 38070000 		.4byte	.LASF138
 5340 17eb 38070000 		.4byte	.LASF138
 5341 17ef 07       		.byte	0x7
 5342 17f0 3005     		.2byte	0x530
 5343 17f2 27       		.uleb128 0x27
 5344 17f3 D8080000 		.4byte	.LASF139
 5345 17f7 D8080000 		.4byte	.LASF139
 5346 17fb 07       		.byte	0x7
 5347 17fc BC08     		.2byte	0x8bc
 5348 17fe 26       		.uleb128 0x26
 5349 17ff 94090000 		.4byte	.LASF140
 5350 1803 94090000 		.4byte	.LASF140
 5351 1807 05       		.byte	0x5
 5352 1808 5D       		.byte	0x5d
 5353 1809 26       		.uleb128 0x26
 5354 180a BD080000 		.4byte	.LASF141
 5355 180e BD080000 		.4byte	.LASF141
 5356 1812 05       		.byte	0x5
 5357 1813 5E       		.byte	0x5e
 5358 1814 27       		.uleb128 0x27
 5359 1815 EB030000 		.4byte	.LASF142
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 149


 5360 1819 EB030000 		.4byte	.LASF142
 5361 181d 07       		.byte	0x7
 5362 181e 1409     		.2byte	0x914
 5363 1820 27       		.uleb128 0x27
 5364 1821 84080000 		.4byte	.LASF143
 5365 1825 84080000 		.4byte	.LASF143
 5366 1829 07       		.byte	0x7
 5367 182a E908     		.2byte	0x8e9
 5368 182c 27       		.uleb128 0x27
 5369 182d F1070000 		.4byte	.LASF144
 5370 1831 F1070000 		.4byte	.LASF144
 5371 1835 07       		.byte	0x7
 5372 1836 D908     		.2byte	0x8d9
 5373 1838 26       		.uleb128 0x26
 5374 1839 6A070000 		.4byte	.LASF145
 5375 183d 6A070000 		.4byte	.LASF145
 5376 1841 09       		.byte	0x9
 5377 1842 83       		.byte	0x83
 5378 1843 00       		.byte	0
 5379              		.section	.debug_abbrev,"",%progbits
 5380              	.Ldebug_abbrev0:
 5381 0000 01       		.uleb128 0x1
 5382 0001 11       		.uleb128 0x11
 5383 0002 01       		.byte	0x1
 5384 0003 25       		.uleb128 0x25
 5385 0004 0E       		.uleb128 0xe
 5386 0005 13       		.uleb128 0x13
 5387 0006 0B       		.uleb128 0xb
 5388 0007 03       		.uleb128 0x3
 5389 0008 0E       		.uleb128 0xe
 5390 0009 1B       		.uleb128 0x1b
 5391 000a 0E       		.uleb128 0xe
 5392 000b 55       		.uleb128 0x55
 5393 000c 17       		.uleb128 0x17
 5394 000d 11       		.uleb128 0x11
 5395 000e 01       		.uleb128 0x1
 5396 000f 10       		.uleb128 0x10
 5397 0010 17       		.uleb128 0x17
 5398 0011 00       		.byte	0
 5399 0012 00       		.byte	0
 5400 0013 02       		.uleb128 0x2
 5401 0014 16       		.uleb128 0x16
 5402 0015 00       		.byte	0
 5403 0016 03       		.uleb128 0x3
 5404 0017 0E       		.uleb128 0xe
 5405 0018 3A       		.uleb128 0x3a
 5406 0019 0B       		.uleb128 0xb
 5407 001a 3B       		.uleb128 0x3b
 5408 001b 0B       		.uleb128 0xb
 5409 001c 49       		.uleb128 0x49
 5410 001d 13       		.uleb128 0x13
 5411 001e 00       		.byte	0
 5412 001f 00       		.byte	0
 5413 0020 03       		.uleb128 0x3
 5414 0021 24       		.uleb128 0x24
 5415 0022 00       		.byte	0
 5416 0023 0B       		.uleb128 0xb
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 150


 5417 0024 0B       		.uleb128 0xb
 5418 0025 3E       		.uleb128 0x3e
 5419 0026 0B       		.uleb128 0xb
 5420 0027 03       		.uleb128 0x3
 5421 0028 0E       		.uleb128 0xe
 5422 0029 00       		.byte	0
 5423 002a 00       		.byte	0
 5424 002b 04       		.uleb128 0x4
 5425 002c 24       		.uleb128 0x24
 5426 002d 00       		.byte	0
 5427 002e 0B       		.uleb128 0xb
 5428 002f 0B       		.uleb128 0xb
 5429 0030 3E       		.uleb128 0x3e
 5430 0031 0B       		.uleb128 0xb
 5431 0032 03       		.uleb128 0x3
 5432 0033 08       		.uleb128 0x8
 5433 0034 00       		.byte	0
 5434 0035 00       		.byte	0
 5435 0036 05       		.uleb128 0x5
 5436 0037 0F       		.uleb128 0xf
 5437 0038 00       		.byte	0
 5438 0039 0B       		.uleb128 0xb
 5439 003a 0B       		.uleb128 0xb
 5440 003b 00       		.byte	0
 5441 003c 00       		.byte	0
 5442 003d 06       		.uleb128 0x6
 5443 003e 0F       		.uleb128 0xf
 5444 003f 00       		.byte	0
 5445 0040 0B       		.uleb128 0xb
 5446 0041 0B       		.uleb128 0xb
 5447 0042 49       		.uleb128 0x49
 5448 0043 13       		.uleb128 0x13
 5449 0044 00       		.byte	0
 5450 0045 00       		.byte	0
 5451 0046 07       		.uleb128 0x7
 5452 0047 26       		.uleb128 0x26
 5453 0048 00       		.byte	0
 5454 0049 49       		.uleb128 0x49
 5455 004a 13       		.uleb128 0x13
 5456 004b 00       		.byte	0
 5457 004c 00       		.byte	0
 5458 004d 08       		.uleb128 0x8
 5459 004e 26       		.uleb128 0x26
 5460 004f 00       		.byte	0
 5461 0050 00       		.byte	0
 5462 0051 00       		.byte	0
 5463 0052 09       		.uleb128 0x9
 5464 0053 13       		.uleb128 0x13
 5465 0054 01       		.byte	0x1
 5466 0055 03       		.uleb128 0x3
 5467 0056 0E       		.uleb128 0xe
 5468 0057 0B       		.uleb128 0xb
 5469 0058 0B       		.uleb128 0xb
 5470 0059 3A       		.uleb128 0x3a
 5471 005a 0B       		.uleb128 0xb
 5472 005b 3B       		.uleb128 0x3b
 5473 005c 0B       		.uleb128 0xb
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 151


 5474 005d 01       		.uleb128 0x1
 5475 005e 13       		.uleb128 0x13
 5476 005f 00       		.byte	0
 5477 0060 00       		.byte	0
 5478 0061 0A       		.uleb128 0xa
 5479 0062 0D       		.uleb128 0xd
 5480 0063 00       		.byte	0
 5481 0064 03       		.uleb128 0x3
 5482 0065 0E       		.uleb128 0xe
 5483 0066 3A       		.uleb128 0x3a
 5484 0067 0B       		.uleb128 0xb
 5485 0068 3B       		.uleb128 0x3b
 5486 0069 0B       		.uleb128 0xb
 5487 006a 49       		.uleb128 0x49
 5488 006b 13       		.uleb128 0x13
 5489 006c 38       		.uleb128 0x38
 5490 006d 0B       		.uleb128 0xb
 5491 006e 00       		.byte	0
 5492 006f 00       		.byte	0
 5493 0070 0B       		.uleb128 0xb
 5494 0071 35       		.uleb128 0x35
 5495 0072 00       		.byte	0
 5496 0073 49       		.uleb128 0x49
 5497 0074 13       		.uleb128 0x13
 5498 0075 00       		.byte	0
 5499 0076 00       		.byte	0
 5500 0077 0C       		.uleb128 0xc
 5501 0078 17       		.uleb128 0x17
 5502 0079 01       		.byte	0x1
 5503 007a 0B       		.uleb128 0xb
 5504 007b 0B       		.uleb128 0xb
 5505 007c 3A       		.uleb128 0x3a
 5506 007d 0B       		.uleb128 0xb
 5507 007e 3B       		.uleb128 0x3b
 5508 007f 0B       		.uleb128 0xb
 5509 0080 01       		.uleb128 0x1
 5510 0081 13       		.uleb128 0x13
 5511 0082 00       		.byte	0
 5512 0083 00       		.byte	0
 5513 0084 0D       		.uleb128 0xd
 5514 0085 0D       		.uleb128 0xd
 5515 0086 00       		.byte	0
 5516 0087 03       		.uleb128 0x3
 5517 0088 0E       		.uleb128 0xe
 5518 0089 3A       		.uleb128 0x3a
 5519 008a 0B       		.uleb128 0xb
 5520 008b 3B       		.uleb128 0x3b
 5521 008c 0B       		.uleb128 0xb
 5522 008d 49       		.uleb128 0x49
 5523 008e 13       		.uleb128 0x13
 5524 008f 00       		.byte	0
 5525 0090 00       		.byte	0
 5526 0091 0E       		.uleb128 0xe
 5527 0092 0D       		.uleb128 0xd
 5528 0093 00       		.byte	0
 5529 0094 03       		.uleb128 0x3
 5530 0095 08       		.uleb128 0x8
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 152


 5531 0096 3A       		.uleb128 0x3a
 5532 0097 0B       		.uleb128 0xb
 5533 0098 3B       		.uleb128 0x3b
 5534 0099 0B       		.uleb128 0xb
 5535 009a 49       		.uleb128 0x49
 5536 009b 13       		.uleb128 0x13
 5537 009c 38       		.uleb128 0x38
 5538 009d 0B       		.uleb128 0xb
 5539 009e 00       		.byte	0
 5540 009f 00       		.byte	0
 5541 00a0 0F       		.uleb128 0xf
 5542 00a1 2E       		.uleb128 0x2e
 5543 00a2 01       		.byte	0x1
 5544 00a3 03       		.uleb128 0x3
 5545 00a4 0E       		.uleb128 0xe
 5546 00a5 3A       		.uleb128 0x3a
 5547 00a6 0B       		.uleb128 0xb
 5548 00a7 3B       		.uleb128 0x3b
 5549 00a8 05       		.uleb128 0x5
 5550 00a9 27       		.uleb128 0x27
 5551 00aa 19       		.uleb128 0x19
 5552 00ab 49       		.uleb128 0x49
 5553 00ac 13       		.uleb128 0x13
 5554 00ad 11       		.uleb128 0x11
 5555 00ae 01       		.uleb128 0x1
 5556 00af 12       		.uleb128 0x12
 5557 00b0 06       		.uleb128 0x6
 5558 00b1 40       		.uleb128 0x40
 5559 00b2 18       		.uleb128 0x18
 5560 00b3 9742     		.uleb128 0x2117
 5561 00b5 19       		.uleb128 0x19
 5562 00b6 01       		.uleb128 0x1
 5563 00b7 13       		.uleb128 0x13
 5564 00b8 00       		.byte	0
 5565 00b9 00       		.byte	0
 5566 00ba 10       		.uleb128 0x10
 5567 00bb 05       		.uleb128 0x5
 5568 00bc 00       		.byte	0
 5569 00bd 03       		.uleb128 0x3
 5570 00be 0E       		.uleb128 0xe
 5571 00bf 3A       		.uleb128 0x3a
 5572 00c0 0B       		.uleb128 0xb
 5573 00c1 3B       		.uleb128 0x3b
 5574 00c2 05       		.uleb128 0x5
 5575 00c3 49       		.uleb128 0x49
 5576 00c4 13       		.uleb128 0x13
 5577 00c5 02       		.uleb128 0x2
 5578 00c6 17       		.uleb128 0x17
 5579 00c7 00       		.byte	0
 5580 00c8 00       		.byte	0
 5581 00c9 11       		.uleb128 0x11
 5582 00ca 34       		.uleb128 0x34
 5583 00cb 00       		.byte	0
 5584 00cc 03       		.uleb128 0x3
 5585 00cd 0E       		.uleb128 0xe
 5586 00ce 3A       		.uleb128 0x3a
 5587 00cf 0B       		.uleb128 0xb
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 153


 5588 00d0 3B       		.uleb128 0x3b
 5589 00d1 05       		.uleb128 0x5
 5590 00d2 49       		.uleb128 0x49
 5591 00d3 13       		.uleb128 0x13
 5592 00d4 02       		.uleb128 0x2
 5593 00d5 17       		.uleb128 0x17
 5594 00d6 00       		.byte	0
 5595 00d7 00       		.byte	0
 5596 00d8 12       		.uleb128 0x12
 5597 00d9 898201   		.uleb128 0x4109
 5598 00dc 00       		.byte	0
 5599 00dd 11       		.uleb128 0x11
 5600 00de 01       		.uleb128 0x1
 5601 00df 31       		.uleb128 0x31
 5602 00e0 13       		.uleb128 0x13
 5603 00e1 00       		.byte	0
 5604 00e2 00       		.byte	0
 5605 00e3 13       		.uleb128 0x13
 5606 00e4 2E       		.uleb128 0x2e
 5607 00e5 01       		.byte	0x1
 5608 00e6 03       		.uleb128 0x3
 5609 00e7 0E       		.uleb128 0xe
 5610 00e8 3A       		.uleb128 0x3a
 5611 00e9 0B       		.uleb128 0xb
 5612 00ea 3B       		.uleb128 0x3b
 5613 00eb 05       		.uleb128 0x5
 5614 00ec 27       		.uleb128 0x27
 5615 00ed 19       		.uleb128 0x19
 5616 00ee 11       		.uleb128 0x11
 5617 00ef 01       		.uleb128 0x1
 5618 00f0 12       		.uleb128 0x12
 5619 00f1 06       		.uleb128 0x6
 5620 00f2 40       		.uleb128 0x40
 5621 00f3 18       		.uleb128 0x18
 5622 00f4 9742     		.uleb128 0x2117
 5623 00f6 19       		.uleb128 0x19
 5624 00f7 01       		.uleb128 0x1
 5625 00f8 13       		.uleb128 0x13
 5626 00f9 00       		.byte	0
 5627 00fa 00       		.byte	0
 5628 00fb 14       		.uleb128 0x14
 5629 00fc 898201   		.uleb128 0x4109
 5630 00ff 01       		.byte	0x1
 5631 0100 11       		.uleb128 0x11
 5632 0101 01       		.uleb128 0x1
 5633 0102 31       		.uleb128 0x31
 5634 0103 13       		.uleb128 0x13
 5635 0104 00       		.byte	0
 5636 0105 00       		.byte	0
 5637 0106 15       		.uleb128 0x15
 5638 0107 8A8201   		.uleb128 0x410a
 5639 010a 00       		.byte	0
 5640 010b 02       		.uleb128 0x2
 5641 010c 18       		.uleb128 0x18
 5642 010d 9142     		.uleb128 0x2111
 5643 010f 18       		.uleb128 0x18
 5644 0110 00       		.byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 154


 5645 0111 00       		.byte	0
 5646 0112 16       		.uleb128 0x16
 5647 0113 0B       		.uleb128 0xb
 5648 0114 01       		.byte	0x1
 5649 0115 11       		.uleb128 0x11
 5650 0116 01       		.uleb128 0x1
 5651 0117 12       		.uleb128 0x12
 5652 0118 06       		.uleb128 0x6
 5653 0119 01       		.uleb128 0x1
 5654 011a 13       		.uleb128 0x13
 5655 011b 00       		.byte	0
 5656 011c 00       		.byte	0
 5657 011d 17       		.uleb128 0x17
 5658 011e 898201   		.uleb128 0x4109
 5659 0121 01       		.byte	0x1
 5660 0122 11       		.uleb128 0x11
 5661 0123 01       		.uleb128 0x1
 5662 0124 31       		.uleb128 0x31
 5663 0125 13       		.uleb128 0x13
 5664 0126 01       		.uleb128 0x1
 5665 0127 13       		.uleb128 0x13
 5666 0128 00       		.byte	0
 5667 0129 00       		.byte	0
 5668 012a 18       		.uleb128 0x18
 5669 012b 2E       		.uleb128 0x2e
 5670 012c 01       		.byte	0x1
 5671 012d 3F       		.uleb128 0x3f
 5672 012e 19       		.uleb128 0x19
 5673 012f 03       		.uleb128 0x3
 5674 0130 0E       		.uleb128 0xe
 5675 0131 3A       		.uleb128 0x3a
 5676 0132 0B       		.uleb128 0xb
 5677 0133 3B       		.uleb128 0x3b
 5678 0134 0B       		.uleb128 0xb
 5679 0135 27       		.uleb128 0x27
 5680 0136 19       		.uleb128 0x19
 5681 0137 49       		.uleb128 0x49
 5682 0138 13       		.uleb128 0x13
 5683 0139 11       		.uleb128 0x11
 5684 013a 01       		.uleb128 0x1
 5685 013b 12       		.uleb128 0x12
 5686 013c 06       		.uleb128 0x6
 5687 013d 40       		.uleb128 0x40
 5688 013e 18       		.uleb128 0x18
 5689 013f 9742     		.uleb128 0x2117
 5690 0141 19       		.uleb128 0x19
 5691 0142 01       		.uleb128 0x1
 5692 0143 13       		.uleb128 0x13
 5693 0144 00       		.byte	0
 5694 0145 00       		.byte	0
 5695 0146 19       		.uleb128 0x19
 5696 0147 05       		.uleb128 0x5
 5697 0148 00       		.byte	0
 5698 0149 03       		.uleb128 0x3
 5699 014a 0E       		.uleb128 0xe
 5700 014b 3A       		.uleb128 0x3a
 5701 014c 0B       		.uleb128 0xb
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 155


 5702 014d 3B       		.uleb128 0x3b
 5703 014e 0B       		.uleb128 0xb
 5704 014f 49       		.uleb128 0x49
 5705 0150 13       		.uleb128 0x13
 5706 0151 02       		.uleb128 0x2
 5707 0152 17       		.uleb128 0x17
 5708 0153 00       		.byte	0
 5709 0154 00       		.byte	0
 5710 0155 1A       		.uleb128 0x1a
 5711 0156 34       		.uleb128 0x34
 5712 0157 00       		.byte	0
 5713 0158 03       		.uleb128 0x3
 5714 0159 0E       		.uleb128 0xe
 5715 015a 3A       		.uleb128 0x3a
 5716 015b 0B       		.uleb128 0xb
 5717 015c 3B       		.uleb128 0x3b
 5718 015d 0B       		.uleb128 0xb
 5719 015e 49       		.uleb128 0x49
 5720 015f 13       		.uleb128 0x13
 5721 0160 02       		.uleb128 0x2
 5722 0161 17       		.uleb128 0x17
 5723 0162 00       		.byte	0
 5724 0163 00       		.byte	0
 5725 0164 1B       		.uleb128 0x1b
 5726 0165 05       		.uleb128 0x5
 5727 0166 00       		.byte	0
 5728 0167 03       		.uleb128 0x3
 5729 0168 0E       		.uleb128 0xe
 5730 0169 3A       		.uleb128 0x3a
 5731 016a 0B       		.uleb128 0xb
 5732 016b 3B       		.uleb128 0x3b
 5733 016c 05       		.uleb128 0x5
 5734 016d 49       		.uleb128 0x49
 5735 016e 13       		.uleb128 0x13
 5736 016f 02       		.uleb128 0x2
 5737 0170 18       		.uleb128 0x18
 5738 0171 00       		.byte	0
 5739 0172 00       		.byte	0
 5740 0173 1C       		.uleb128 0x1c
 5741 0174 2E       		.uleb128 0x2e
 5742 0175 01       		.byte	0x1
 5743 0176 3F       		.uleb128 0x3f
 5744 0177 19       		.uleb128 0x19
 5745 0178 03       		.uleb128 0x3
 5746 0179 0E       		.uleb128 0xe
 5747 017a 3A       		.uleb128 0x3a
 5748 017b 0B       		.uleb128 0xb
 5749 017c 3B       		.uleb128 0x3b
 5750 017d 05       		.uleb128 0x5
 5751 017e 27       		.uleb128 0x27
 5752 017f 19       		.uleb128 0x19
 5753 0180 49       		.uleb128 0x49
 5754 0181 13       		.uleb128 0x13
 5755 0182 11       		.uleb128 0x11
 5756 0183 01       		.uleb128 0x1
 5757 0184 12       		.uleb128 0x12
 5758 0185 06       		.uleb128 0x6
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 156


 5759 0186 40       		.uleb128 0x40
 5760 0187 18       		.uleb128 0x18
 5761 0188 9742     		.uleb128 0x2117
 5762 018a 19       		.uleb128 0x19
 5763 018b 01       		.uleb128 0x1
 5764 018c 13       		.uleb128 0x13
 5765 018d 00       		.byte	0
 5766 018e 00       		.byte	0
 5767 018f 1D       		.uleb128 0x1d
 5768 0190 34       		.uleb128 0x34
 5769 0191 00       		.byte	0
 5770 0192 03       		.uleb128 0x3
 5771 0193 0E       		.uleb128 0xe
 5772 0194 3A       		.uleb128 0x3a
 5773 0195 0B       		.uleb128 0xb
 5774 0196 3B       		.uleb128 0x3b
 5775 0197 05       		.uleb128 0x5
 5776 0198 49       		.uleb128 0x49
 5777 0199 13       		.uleb128 0x13
 5778 019a 02       		.uleb128 0x2
 5779 019b 18       		.uleb128 0x18
 5780 019c 00       		.byte	0
 5781 019d 00       		.byte	0
 5782 019e 1E       		.uleb128 0x1e
 5783 019f 34       		.uleb128 0x34
 5784 01a0 00       		.byte	0
 5785 01a1 03       		.uleb128 0x3
 5786 01a2 0E       		.uleb128 0xe
 5787 01a3 3A       		.uleb128 0x3a
 5788 01a4 0B       		.uleb128 0xb
 5789 01a5 3B       		.uleb128 0x3b
 5790 01a6 05       		.uleb128 0x5
 5791 01a7 49       		.uleb128 0x49
 5792 01a8 13       		.uleb128 0x13
 5793 01a9 1C       		.uleb128 0x1c
 5794 01aa 0B       		.uleb128 0xb
 5795 01ab 00       		.byte	0
 5796 01ac 00       		.byte	0
 5797 01ad 1F       		.uleb128 0x1f
 5798 01ae 0B       		.uleb128 0xb
 5799 01af 01       		.byte	0x1
 5800 01b0 55       		.uleb128 0x55
 5801 01b1 17       		.uleb128 0x17
 5802 01b2 01       		.uleb128 0x1
 5803 01b3 13       		.uleb128 0x13
 5804 01b4 00       		.byte	0
 5805 01b5 00       		.byte	0
 5806 01b6 20       		.uleb128 0x20
 5807 01b7 0B       		.uleb128 0xb
 5808 01b8 01       		.byte	0x1
 5809 01b9 55       		.uleb128 0x55
 5810 01ba 17       		.uleb128 0x17
 5811 01bb 00       		.byte	0
 5812 01bc 00       		.byte	0
 5813 01bd 21       		.uleb128 0x21
 5814 01be 2E       		.uleb128 0x2e
 5815 01bf 01       		.byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 157


 5816 01c0 3F       		.uleb128 0x3f
 5817 01c1 19       		.uleb128 0x19
 5818 01c2 03       		.uleb128 0x3
 5819 01c3 0E       		.uleb128 0xe
 5820 01c4 3A       		.uleb128 0x3a
 5821 01c5 0B       		.uleb128 0xb
 5822 01c6 3B       		.uleb128 0x3b
 5823 01c7 05       		.uleb128 0x5
 5824 01c8 27       		.uleb128 0x27
 5825 01c9 19       		.uleb128 0x19
 5826 01ca 11       		.uleb128 0x11
 5827 01cb 01       		.uleb128 0x1
 5828 01cc 12       		.uleb128 0x12
 5829 01cd 06       		.uleb128 0x6
 5830 01ce 40       		.uleb128 0x40
 5831 01cf 18       		.uleb128 0x18
 5832 01d0 9742     		.uleb128 0x2117
 5833 01d2 19       		.uleb128 0x19
 5834 01d3 01       		.uleb128 0x1
 5835 01d4 13       		.uleb128 0x13
 5836 01d5 00       		.byte	0
 5837 01d6 00       		.byte	0
 5838 01d7 22       		.uleb128 0x22
 5839 01d8 34       		.uleb128 0x34
 5840 01d9 00       		.byte	0
 5841 01da 03       		.uleb128 0x3
 5842 01db 08       		.uleb128 0x8
 5843 01dc 3A       		.uleb128 0x3a
 5844 01dd 0B       		.uleb128 0xb
 5845 01de 3B       		.uleb128 0x3b
 5846 01df 05       		.uleb128 0x5
 5847 01e0 49       		.uleb128 0x49
 5848 01e1 13       		.uleb128 0x13
 5849 01e2 02       		.uleb128 0x2
 5850 01e3 17       		.uleb128 0x17
 5851 01e4 00       		.byte	0
 5852 01e5 00       		.byte	0
 5853 01e6 23       		.uleb128 0x23
 5854 01e7 01       		.uleb128 0x1
 5855 01e8 01       		.byte	0x1
 5856 01e9 49       		.uleb128 0x49
 5857 01ea 13       		.uleb128 0x13
 5858 01eb 01       		.uleb128 0x1
 5859 01ec 13       		.uleb128 0x13
 5860 01ed 00       		.byte	0
 5861 01ee 00       		.byte	0
 5862 01ef 24       		.uleb128 0x24
 5863 01f0 21       		.uleb128 0x21
 5864 01f1 00       		.byte	0
 5865 01f2 49       		.uleb128 0x49
 5866 01f3 13       		.uleb128 0x13
 5867 01f4 2F       		.uleb128 0x2f
 5868 01f5 0B       		.uleb128 0xb
 5869 01f6 00       		.byte	0
 5870 01f7 00       		.byte	0
 5871 01f8 25       		.uleb128 0x25
 5872 01f9 34       		.uleb128 0x34
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 158


 5873 01fa 00       		.byte	0
 5874 01fb 03       		.uleb128 0x3
 5875 01fc 0E       		.uleb128 0xe
 5876 01fd 3A       		.uleb128 0x3a
 5877 01fe 0B       		.uleb128 0xb
 5878 01ff 3B       		.uleb128 0x3b
 5879 0200 0B       		.uleb128 0xb
 5880 0201 49       		.uleb128 0x49
 5881 0202 13       		.uleb128 0x13
 5882 0203 3F       		.uleb128 0x3f
 5883 0204 19       		.uleb128 0x19
 5884 0205 02       		.uleb128 0x2
 5885 0206 18       		.uleb128 0x18
 5886 0207 00       		.byte	0
 5887 0208 00       		.byte	0
 5888 0209 26       		.uleb128 0x26
 5889 020a 2E       		.uleb128 0x2e
 5890 020b 00       		.byte	0
 5891 020c 3F       		.uleb128 0x3f
 5892 020d 19       		.uleb128 0x19
 5893 020e 3C       		.uleb128 0x3c
 5894 020f 19       		.uleb128 0x19
 5895 0210 6E       		.uleb128 0x6e
 5896 0211 0E       		.uleb128 0xe
 5897 0212 03       		.uleb128 0x3
 5898 0213 0E       		.uleb128 0xe
 5899 0214 3A       		.uleb128 0x3a
 5900 0215 0B       		.uleb128 0xb
 5901 0216 3B       		.uleb128 0x3b
 5902 0217 0B       		.uleb128 0xb
 5903 0218 00       		.byte	0
 5904 0219 00       		.byte	0
 5905 021a 27       		.uleb128 0x27
 5906 021b 2E       		.uleb128 0x2e
 5907 021c 00       		.byte	0
 5908 021d 3F       		.uleb128 0x3f
 5909 021e 19       		.uleb128 0x19
 5910 021f 3C       		.uleb128 0x3c
 5911 0220 19       		.uleb128 0x19
 5912 0221 6E       		.uleb128 0x6e
 5913 0222 0E       		.uleb128 0xe
 5914 0223 03       		.uleb128 0x3
 5915 0224 0E       		.uleb128 0xe
 5916 0225 3A       		.uleb128 0x3a
 5917 0226 0B       		.uleb128 0xb
 5918 0227 3B       		.uleb128 0x3b
 5919 0228 05       		.uleb128 0x5
 5920 0229 00       		.byte	0
 5921 022a 00       		.byte	0
 5922 022b 28       		.uleb128 0x28
 5923 022c 2E       		.uleb128 0x2e
 5924 022d 00       		.byte	0
 5925 022e 3F       		.uleb128 0x3f
 5926 022f 19       		.uleb128 0x19
 5927 0230 3C       		.uleb128 0x3c
 5928 0231 19       		.uleb128 0x19
 5929 0232 6E       		.uleb128 0x6e
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 159


 5930 0233 0E       		.uleb128 0xe
 5931 0234 03       		.uleb128 0x3
 5932 0235 0E       		.uleb128 0xe
 5933 0236 00       		.byte	0
 5934 0237 00       		.byte	0
 5935 0238 00       		.byte	0
 5936              		.section	.debug_loc,"",%progbits
 5937              	.Ldebug_loc0:
 5938              	.LLST0:
 5939 0000 00000000 		.4byte	.LVL0
 5940 0004 0A000000 		.4byte	.LVL1
 5941 0008 0100     		.2byte	0x1
 5942 000a 50       		.byte	0x50
 5943 000b 0A000000 		.4byte	.LVL1
 5944 000f 10000000 		.4byte	.LVL3
 5945 0013 0400     		.2byte	0x4
 5946 0015 F3       		.byte	0xf3
 5947 0016 01       		.uleb128 0x1
 5948 0017 50       		.byte	0x50
 5949 0018 9F       		.byte	0x9f
 5950 0019 10000000 		.4byte	.LVL3
 5951 001d 12000000 		.4byte	.LVL4
 5952 0021 0100     		.2byte	0x1
 5953 0023 50       		.byte	0x50
 5954 0024 12000000 		.4byte	.LVL4
 5955 0028 14000000 		.4byte	.LFE52
 5956 002c 0400     		.2byte	0x4
 5957 002e F3       		.byte	0xf3
 5958 002f 01       		.uleb128 0x1
 5959 0030 50       		.byte	0x50
 5960 0031 9F       		.byte	0x9f
 5961 0032 00000000 		.4byte	0
 5962 0036 00000000 		.4byte	0
 5963              	.LLST1:
 5964 003a 0E000000 		.4byte	.LVL2
 5965 003e 10000000 		.4byte	.LVL3
 5966 0042 0100     		.2byte	0x1
 5967 0044 50       		.byte	0x50
 5968 0045 12000000 		.4byte	.LVL4
 5969 0049 14000000 		.4byte	.LFE52
 5970 004d 0100     		.2byte	0x1
 5971 004f 50       		.byte	0x50
 5972 0050 00000000 		.4byte	0
 5973 0054 00000000 		.4byte	0
 5974              	.LLST2:
 5975 0058 00000000 		.4byte	.LVL5
 5976 005c 07000000 		.4byte	.LVL6-1
 5977 0060 0100     		.2byte	0x1
 5978 0062 50       		.byte	0x50
 5979 0063 07000000 		.4byte	.LVL6-1
 5980 0067 12000000 		.4byte	.LVL7
 5981 006b 0100     		.2byte	0x1
 5982 006d 54       		.byte	0x54
 5983 006e 12000000 		.4byte	.LVL7
 5984 0072 14000000 		.4byte	.LVL8
 5985 0076 0400     		.2byte	0x4
 5986 0078 F3       		.byte	0xf3
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 160


 5987 0079 01       		.uleb128 0x1
 5988 007a 50       		.byte	0x50
 5989 007b 9F       		.byte	0x9f
 5990 007c 14000000 		.4byte	.LVL8
 5991 0080 16000000 		.4byte	.LVL9
 5992 0084 0100     		.2byte	0x1
 5993 0086 54       		.byte	0x54
 5994 0087 16000000 		.4byte	.LVL9
 5995 008b 1E000000 		.4byte	.LFE58
 5996 008f 0400     		.2byte	0x4
 5997 0091 F3       		.byte	0xf3
 5998 0092 01       		.uleb128 0x1
 5999 0093 50       		.byte	0x50
 6000 0094 9F       		.byte	0x9f
 6001 0095 00000000 		.4byte	0
 6002 0099 00000000 		.4byte	0
 6003              	.LLST3:
 6004 009d 16000000 		.4byte	.LVL9
 6005 00a1 1C000000 		.4byte	.LVL11
 6006 00a5 0100     		.2byte	0x1
 6007 00a7 54       		.byte	0x54
 6008 00a8 1C000000 		.4byte	.LVL11
 6009 00ac 1E000000 		.4byte	.LFE58
 6010 00b0 0100     		.2byte	0x1
 6011 00b2 50       		.byte	0x50
 6012 00b3 00000000 		.4byte	0
 6013 00b7 00000000 		.4byte	0
 6014              	.LLST4:
 6015 00bb 00000000 		.4byte	.LVL12
 6016 00bf 07000000 		.4byte	.LVL13-1
 6017 00c3 0100     		.2byte	0x1
 6018 00c5 50       		.byte	0x50
 6019 00c6 07000000 		.4byte	.LVL13-1
 6020 00ca 10000000 		.4byte	.LVL14
 6021 00ce 0100     		.2byte	0x1
 6022 00d0 54       		.byte	0x54
 6023 00d1 10000000 		.4byte	.LVL14
 6024 00d5 12000000 		.4byte	.LVL15
 6025 00d9 0400     		.2byte	0x4
 6026 00db F3       		.byte	0xf3
 6027 00dc 01       		.uleb128 0x1
 6028 00dd 50       		.byte	0x50
 6029 00de 9F       		.byte	0x9f
 6030 00df 12000000 		.4byte	.LVL15
 6031 00e3 14000000 		.4byte	.LVL16
 6032 00e7 0100     		.2byte	0x1
 6033 00e9 54       		.byte	0x54
 6034 00ea 14000000 		.4byte	.LVL16
 6035 00ee 1C000000 		.4byte	.LFE56
 6036 00f2 0400     		.2byte	0x4
 6037 00f4 F3       		.byte	0xf3
 6038 00f5 01       		.uleb128 0x1
 6039 00f6 50       		.byte	0x50
 6040 00f7 9F       		.byte	0x9f
 6041 00f8 00000000 		.4byte	0
 6042 00fc 00000000 		.4byte	0
 6043              	.LLST5:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 161


 6044 0100 14000000 		.4byte	.LVL16
 6045 0104 1A000000 		.4byte	.LVL18
 6046 0108 0100     		.2byte	0x1
 6047 010a 54       		.byte	0x54
 6048 010b 1A000000 		.4byte	.LVL18
 6049 010f 1C000000 		.4byte	.LFE56
 6050 0113 0100     		.2byte	0x1
 6051 0115 50       		.byte	0x50
 6052 0116 00000000 		.4byte	0
 6053 011a 00000000 		.4byte	0
 6054              	.LLST6:
 6055 011e 00000000 		.4byte	.LVL19
 6056 0122 16000000 		.4byte	.LVL23
 6057 0126 0100     		.2byte	0x1
 6058 0128 50       		.byte	0x50
 6059 0129 16000000 		.4byte	.LVL23
 6060 012d 20000000 		.4byte	.LVL25
 6061 0131 0100     		.2byte	0x1
 6062 0133 54       		.byte	0x54
 6063 0134 20000000 		.4byte	.LVL25
 6064 0138 26000000 		.4byte	.LVL26
 6065 013c 0100     		.2byte	0x1
 6066 013e 50       		.byte	0x50
 6067 013f 26000000 		.4byte	.LVL26
 6068 0143 42000000 		.4byte	.LVL28
 6069 0147 0100     		.2byte	0x1
 6070 0149 54       		.byte	0x54
 6071 014a 42000000 		.4byte	.LVL28
 6072 014e 44000000 		.4byte	.LVL29
 6073 0152 0100     		.2byte	0x1
 6074 0154 50       		.byte	0x50
 6075 0155 44000000 		.4byte	.LVL29
 6076 0159 6E000000 		.4byte	.LVL32
 6077 015d 0100     		.2byte	0x1
 6078 015f 54       		.byte	0x54
 6079 0160 6E000000 		.4byte	.LVL32
 6080 0164 70000000 		.4byte	.LVL33
 6081 0168 0100     		.2byte	0x1
 6082 016a 50       		.byte	0x50
 6083 016b 70000000 		.4byte	.LVL33
 6084 016f 80000000 		.4byte	.LVL37
 6085 0173 0100     		.2byte	0x1
 6086 0175 54       		.byte	0x54
 6087 0176 80000000 		.4byte	.LVL37
 6088 017a 82000000 		.4byte	.LFE53
 6089 017e 0400     		.2byte	0x4
 6090 0180 F3       		.byte	0xf3
 6091 0181 01       		.uleb128 0x1
 6092 0182 50       		.byte	0x50
 6093 0183 9F       		.byte	0x9f
 6094 0184 00000000 		.4byte	0
 6095 0188 00000000 		.4byte	0
 6096              	.LLST7:
 6097 018c 00000000 		.4byte	.LVL19
 6098 0190 19000000 		.4byte	.LVL24-1
 6099 0194 0100     		.2byte	0x1
 6100 0196 51       		.byte	0x51
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 162


 6101 0197 19000000 		.4byte	.LVL24-1
 6102 019b 20000000 		.4byte	.LVL25
 6103 019f 0400     		.2byte	0x4
 6104 01a1 F3       		.byte	0xf3
 6105 01a2 01       		.uleb128 0x1
 6106 01a3 51       		.byte	0x51
 6107 01a4 9F       		.byte	0x9f
 6108 01a5 20000000 		.4byte	.LVL25
 6109 01a9 29000000 		.4byte	.LVL27-1
 6110 01ad 0100     		.2byte	0x1
 6111 01af 51       		.byte	0x51
 6112 01b0 29000000 		.4byte	.LVL27-1
 6113 01b4 42000000 		.4byte	.LVL28
 6114 01b8 0400     		.2byte	0x4
 6115 01ba F3       		.byte	0xf3
 6116 01bb 01       		.uleb128 0x1
 6117 01bc 51       		.byte	0x51
 6118 01bd 9F       		.byte	0x9f
 6119 01be 42000000 		.4byte	.LVL28
 6120 01c2 47000000 		.4byte	.LVL30-1
 6121 01c6 0100     		.2byte	0x1
 6122 01c8 51       		.byte	0x51
 6123 01c9 47000000 		.4byte	.LVL30-1
 6124 01cd 6E000000 		.4byte	.LVL32
 6125 01d1 0400     		.2byte	0x4
 6126 01d3 F3       		.byte	0xf3
 6127 01d4 01       		.uleb128 0x1
 6128 01d5 51       		.byte	0x51
 6129 01d6 9F       		.byte	0x9f
 6130 01d7 6E000000 		.4byte	.LVL32
 6131 01db 72000000 		.4byte	.LVL34
 6132 01df 0100     		.2byte	0x1
 6133 01e1 51       		.byte	0x51
 6134 01e2 72000000 		.4byte	.LVL34
 6135 01e6 82000000 		.4byte	.LFE53
 6136 01ea 0400     		.2byte	0x4
 6137 01ec F3       		.byte	0xf3
 6138 01ed 01       		.uleb128 0x1
 6139 01ee 51       		.byte	0x51
 6140 01ef 9F       		.byte	0x9f
 6141 01f0 00000000 		.4byte	0
 6142 01f4 00000000 		.4byte	0
 6143              	.LLST8:
 6144 01f8 00000000 		.4byte	.LVL19
 6145 01fc 0A000000 		.4byte	.LVL22
 6146 0200 0100     		.2byte	0x1
 6147 0202 52       		.byte	0x52
 6148 0203 0A000000 		.4byte	.LVL22
 6149 0207 80000000 		.4byte	.LVL39
 6150 020b 0100     		.2byte	0x1
 6151 020d 56       		.byte	0x56
 6152 020e 80000000 		.4byte	.LVL39
 6153 0212 82000000 		.4byte	.LFE53
 6154 0216 0400     		.2byte	0x4
 6155 0218 F3       		.byte	0xf3
 6156 0219 01       		.uleb128 0x1
 6157 021a 52       		.byte	0x52
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 163


 6158 021b 9F       		.byte	0x9f
 6159 021c 00000000 		.4byte	0
 6160 0220 00000000 		.4byte	0
 6161              	.LLST9:
 6162 0224 06000000 		.4byte	.LVL20
 6163 0228 1A000000 		.4byte	.LVL24
 6164 022c 0200     		.2byte	0x2
 6165 022e 30       		.byte	0x30
 6166 022f 9F       		.byte	0x9f
 6167 0230 1A000000 		.4byte	.LVL24
 6168 0234 20000000 		.4byte	.LVL25
 6169 0238 0100     		.2byte	0x1
 6170 023a 50       		.byte	0x50
 6171 023b 20000000 		.4byte	.LVL25
 6172 023f 7C000000 		.4byte	.LVL35
 6173 0243 0200     		.2byte	0x2
 6174 0245 30       		.byte	0x30
 6175 0246 9F       		.byte	0x9f
 6176 0247 7C000000 		.4byte	.LVL35
 6177 024b 82000000 		.4byte	.LFE53
 6178 024f 0100     		.2byte	0x1
 6179 0251 50       		.byte	0x50
 6180 0252 00000000 		.4byte	0
 6181 0256 00000000 		.4byte	0
 6182              	.LLST10:
 6183 025a 08000000 		.4byte	.LVL21
 6184 025e 7E000000 		.4byte	.LVL36
 6185 0262 0100     		.2byte	0x1
 6186 0264 55       		.byte	0x55
 6187 0265 7E000000 		.4byte	.LVL36
 6188 0269 80000000 		.4byte	.LVL38
 6189 026d 0300     		.2byte	0x3
 6190 026f 75       		.byte	0x75
 6191 0270 7F       		.sleb128 -1
 6192 0271 9F       		.byte	0x9f
 6193 0272 80000000 		.4byte	.LVL38
 6194 0276 82000000 		.4byte	.LFE53
 6195 027a 0900     		.2byte	0x9
 6196 027c F3       		.byte	0xf3
 6197 027d 01       		.uleb128 0x1
 6198 027e 50       		.byte	0x50
 6199 027f 23       		.byte	0x23
 6200 0280 38       		.uleb128 0x38
 6201 0281 06       		.byte	0x6
 6202 0282 31       		.byte	0x31
 6203 0283 1C       		.byte	0x1c
 6204 0284 9F       		.byte	0x9f
 6205 0285 00000000 		.4byte	0
 6206 0289 00000000 		.4byte	0
 6207              	.LLST11:
 6208 028d 00000000 		.4byte	.LVL40
 6209 0291 1E000000 		.4byte	.LVL42
 6210 0295 0100     		.2byte	0x1
 6211 0297 50       		.byte	0x50
 6212 0298 1E000000 		.4byte	.LVL42
 6213 029c 24000000 		.4byte	.LFE54
 6214 02a0 0400     		.2byte	0x4
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 164


 6215 02a2 F3       		.byte	0xf3
 6216 02a3 01       		.uleb128 0x1
 6217 02a4 50       		.byte	0x50
 6218 02a5 9F       		.byte	0x9f
 6219 02a6 00000000 		.4byte	0
 6220 02aa 00000000 		.4byte	0
 6221              	.LLST12:
 6222 02ae 00000000 		.4byte	.LVL40
 6223 02b2 12000000 		.4byte	.LVL41
 6224 02b6 0100     		.2byte	0x1
 6225 02b8 51       		.byte	0x51
 6226 02b9 12000000 		.4byte	.LVL41
 6227 02bd 22000000 		.4byte	.LVL44
 6228 02c1 0100     		.2byte	0x1
 6229 02c3 54       		.byte	0x54
 6230 02c4 22000000 		.4byte	.LVL44
 6231 02c8 24000000 		.4byte	.LFE54
 6232 02cc 0400     		.2byte	0x4
 6233 02ce F3       		.byte	0xf3
 6234 02cf 01       		.uleb128 0x1
 6235 02d0 51       		.byte	0x51
 6236 02d1 9F       		.byte	0x9f
 6237 02d2 00000000 		.4byte	0
 6238 02d6 00000000 		.4byte	0
 6239              	.LLST13:
 6240 02da 00000000 		.4byte	.LVL45
 6241 02de 07000000 		.4byte	.LVL46-1
 6242 02e2 0100     		.2byte	0x1
 6243 02e4 50       		.byte	0x50
 6244 02e5 07000000 		.4byte	.LVL46-1
 6245 02e9 6C000000 		.4byte	.LVL62
 6246 02ed 0100     		.2byte	0x1
 6247 02ef 55       		.byte	0x55
 6248 02f0 6C000000 		.4byte	.LVL62
 6249 02f4 6E000000 		.4byte	.LFE55
 6250 02f8 0400     		.2byte	0x4
 6251 02fa F3       		.byte	0xf3
 6252 02fb 01       		.uleb128 0x1
 6253 02fc 50       		.byte	0x50
 6254 02fd 9F       		.byte	0x9f
 6255 02fe 00000000 		.4byte	0
 6256 0302 00000000 		.4byte	0
 6257              	.LLST14:
 6258 0306 0E000000 		.4byte	.LVL47
 6259 030a 28000000 		.4byte	.LVL50
 6260 030e 0100     		.2byte	0x1
 6261 0310 54       		.byte	0x54
 6262 0311 2A000000 		.4byte	.LVL51
 6263 0315 40000000 		.4byte	.LVL54
 6264 0319 0100     		.2byte	0x1
 6265 031b 54       		.byte	0x54
 6266 031c 00000000 		.4byte	0
 6267 0320 00000000 		.4byte	0
 6268              	.LLST15:
 6269 0324 42000000 		.4byte	.LVL55
 6270 0328 5C000000 		.4byte	.LVL58
 6271 032c 0100     		.2byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 165


 6272 032e 54       		.byte	0x54
 6273 032f 5E000000 		.4byte	.LVL59
 6274 0333 6C000000 		.4byte	.LVL61
 6275 0337 0100     		.2byte	0x1
 6276 0339 54       		.byte	0x54
 6277 033a 00000000 		.4byte	0
 6278 033e 00000000 		.4byte	0
 6279              	.LLST16:
 6280 0342 00000000 		.4byte	.LVL63
 6281 0346 09000000 		.4byte	.LVL65-1
 6282 034a 0100     		.2byte	0x1
 6283 034c 50       		.byte	0x50
 6284 034d 09000000 		.4byte	.LVL65-1
 6285 0351 62000000 		.4byte	.LVL71
 6286 0355 0100     		.2byte	0x1
 6287 0357 54       		.byte	0x54
 6288 0358 62000000 		.4byte	.LVL71
 6289 035c 64000000 		.4byte	.LFE32
 6290 0360 0400     		.2byte	0x4
 6291 0362 F3       		.byte	0xf3
 6292 0363 01       		.uleb128 0x1
 6293 0364 50       		.byte	0x50
 6294 0365 9F       		.byte	0x9f
 6295 0366 00000000 		.4byte	0
 6296 036a 00000000 		.4byte	0
 6297              	.LLST17:
 6298 036e 00000000 		.4byte	.LVL63
 6299 0372 09000000 		.4byte	.LVL65-1
 6300 0376 0100     		.2byte	0x1
 6301 0378 51       		.byte	0x51
 6302 0379 09000000 		.4byte	.LVL65-1
 6303 037d 62000000 		.4byte	.LVL72
 6304 0381 0100     		.2byte	0x1
 6305 0383 55       		.byte	0x55
 6306 0384 62000000 		.4byte	.LVL72
 6307 0388 64000000 		.4byte	.LFE32
 6308 038c 0400     		.2byte	0x4
 6309 038e F3       		.byte	0xf3
 6310 038f 01       		.uleb128 0x1
 6311 0390 51       		.byte	0x51
 6312 0391 9F       		.byte	0x9f
 6313 0392 00000000 		.4byte	0
 6314 0396 00000000 		.4byte	0
 6315              	.LLST18:
 6316 039a 06000000 		.4byte	.LVL64
 6317 039e 09000000 		.4byte	.LVL65-1
 6318 03a2 0100     		.2byte	0x1
 6319 03a4 50       		.byte	0x50
 6320 03a5 09000000 		.4byte	.LVL65-1
 6321 03a9 62000000 		.4byte	.LVL71
 6322 03ad 0100     		.2byte	0x1
 6323 03af 54       		.byte	0x54
 6324 03b0 62000000 		.4byte	.LVL71
 6325 03b4 64000000 		.4byte	.LFE32
 6326 03b8 0400     		.2byte	0x4
 6327 03ba F3       		.byte	0xf3
 6328 03bb 01       		.uleb128 0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 166


 6329 03bc 50       		.byte	0x50
 6330 03bd 9F       		.byte	0x9f
 6331 03be 00000000 		.4byte	0
 6332 03c2 00000000 		.4byte	0
 6333              	.LLST19:
 6334 03c6 00000000 		.4byte	.LVL73
 6335 03ca 16000000 		.4byte	.LVL76
 6336 03ce 0100     		.2byte	0x1
 6337 03d0 50       		.byte	0x50
 6338 03d1 16000000 		.4byte	.LVL76
 6339 03d5 19000000 		.4byte	.LVL77-1
 6340 03d9 0200     		.2byte	0x2
 6341 03db 73       		.byte	0x73
 6342 03dc 3C       		.sleb128 60
 6343 03dd 19000000 		.4byte	.LVL77-1
 6344 03e1 1C000000 		.4byte	.LFE34
 6345 03e5 0400     		.2byte	0x4
 6346 03e7 F3       		.byte	0xf3
 6347 03e8 01       		.uleb128 0x1
 6348 03e9 50       		.byte	0x50
 6349 03ea 9F       		.byte	0x9f
 6350 03eb 00000000 		.4byte	0
 6351 03ef 00000000 		.4byte	0
 6352              	.LLST20:
 6353 03f3 00000000 		.4byte	.LVL73
 6354 03f7 14000000 		.4byte	.LVL75
 6355 03fb 0100     		.2byte	0x1
 6356 03fd 51       		.byte	0x51
 6357 03fe 14000000 		.4byte	.LVL75
 6358 0402 19000000 		.4byte	.LVL77-1
 6359 0406 0300     		.2byte	0x3
 6360 0408 73       		.byte	0x73
 6361 0409 C000     		.sleb128 64
 6362 040b 19000000 		.4byte	.LVL77-1
 6363 040f 1C000000 		.4byte	.LFE34
 6364 0413 0400     		.2byte	0x4
 6365 0415 F3       		.byte	0xf3
 6366 0416 01       		.uleb128 0x1
 6367 0417 51       		.byte	0x51
 6368 0418 9F       		.byte	0x9f
 6369 0419 00000000 		.4byte	0
 6370 041d 00000000 		.4byte	0
 6371              	.LLST21:
 6372 0421 00000000 		.4byte	.LVL73
 6373 0425 19000000 		.4byte	.LVL77-1
 6374 0429 0100     		.2byte	0x1
 6375 042b 52       		.byte	0x52
 6376 042c 19000000 		.4byte	.LVL77-1
 6377 0430 1C000000 		.4byte	.LFE34
 6378 0434 0400     		.2byte	0x4
 6379 0436 F3       		.byte	0xf3
 6380 0437 01       		.uleb128 0x1
 6381 0438 52       		.byte	0x52
 6382 0439 9F       		.byte	0x9f
 6383 043a 00000000 		.4byte	0
 6384 043e 00000000 		.4byte	0
 6385              	.LLST22:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 167


 6386 0442 00000000 		.4byte	.LVL73
 6387 0446 04000000 		.4byte	.LVL74
 6388 044a 0100     		.2byte	0x1
 6389 044c 53       		.byte	0x53
 6390 044d 04000000 		.4byte	.LVL74
 6391 0451 1C000000 		.4byte	.LFE34
 6392 0455 0400     		.2byte	0x4
 6393 0457 F3       		.byte	0xf3
 6394 0458 01       		.uleb128 0x1
 6395 0459 53       		.byte	0x53
 6396 045a 9F       		.byte	0x9f
 6397 045b 00000000 		.4byte	0
 6398 045f 00000000 		.4byte	0
 6399              	.LLST23:
 6400 0463 00000000 		.4byte	.LVL78
 6401 0467 10000000 		.4byte	.LVL79
 6402 046b 0100     		.2byte	0x1
 6403 046d 50       		.byte	0x50
 6404 046e 10000000 		.4byte	.LVL79
 6405 0472 12000000 		.4byte	.LVL80
 6406 0476 0100     		.2byte	0x1
 6407 0478 55       		.byte	0x55
 6408 0479 12000000 		.4byte	.LVL80
 6409 047d 14000000 		.4byte	.LVL81
 6410 0481 0100     		.2byte	0x1
 6411 0483 50       		.byte	0x50
 6412 0484 14000000 		.4byte	.LVL81
 6413 0488 32000000 		.4byte	.LVL88
 6414 048c 0100     		.2byte	0x1
 6415 048e 55       		.byte	0x55
 6416 048f 32000000 		.4byte	.LVL88
 6417 0493 34000000 		.4byte	.LFE33
 6418 0497 0400     		.2byte	0x4
 6419 0499 F3       		.byte	0xf3
 6420 049a 01       		.uleb128 0x1
 6421 049b 50       		.byte	0x50
 6422 049c 9F       		.byte	0x9f
 6423 049d 00000000 		.4byte	0
 6424 04a1 00000000 		.4byte	0
 6425              	.LLST24:
 6426 04a5 00000000 		.4byte	.LVL78
 6427 04a9 19000000 		.4byte	.LVL83-1
 6428 04ad 0100     		.2byte	0x1
 6429 04af 51       		.byte	0x51
 6430 04b0 19000000 		.4byte	.LVL83-1
 6431 04b4 32000000 		.4byte	.LVL89
 6432 04b8 0100     		.2byte	0x1
 6433 04ba 57       		.byte	0x57
 6434 04bb 32000000 		.4byte	.LVL89
 6435 04bf 34000000 		.4byte	.LFE33
 6436 04c3 0400     		.2byte	0x4
 6437 04c5 F3       		.byte	0xf3
 6438 04c6 01       		.uleb128 0x1
 6439 04c7 51       		.byte	0x51
 6440 04c8 9F       		.byte	0x9f
 6441 04c9 00000000 		.4byte	0
 6442 04cd 00000000 		.4byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 168


 6443              	.LLST25:
 6444 04d1 00000000 		.4byte	.LVL78
 6445 04d5 19000000 		.4byte	.LVL83-1
 6446 04d9 0100     		.2byte	0x1
 6447 04db 52       		.byte	0x52
 6448 04dc 19000000 		.4byte	.LVL83-1
 6449 04e0 34000000 		.4byte	.LFE33
 6450 04e4 0400     		.2byte	0x4
 6451 04e6 F3       		.byte	0xf3
 6452 04e7 01       		.uleb128 0x1
 6453 04e8 52       		.byte	0x52
 6454 04e9 9F       		.byte	0x9f
 6455 04ea 00000000 		.4byte	0
 6456 04ee 00000000 		.4byte	0
 6457              	.LLST26:
 6458 04f2 1C000000 		.4byte	.LVL84
 6459 04f6 2A000000 		.4byte	.LVL85
 6460 04fa 0100     		.2byte	0x1
 6461 04fc 50       		.byte	0x50
 6462 04fd 2A000000 		.4byte	.LVL85
 6463 0501 32000000 		.4byte	.LVL87
 6464 0505 0100     		.2byte	0x1
 6465 0507 54       		.byte	0x54
 6466 0508 32000000 		.4byte	.LVL87
 6467 050c 34000000 		.4byte	.LFE33
 6468 0510 0100     		.2byte	0x1
 6469 0512 50       		.byte	0x50
 6470 0513 00000000 		.4byte	0
 6471 0517 00000000 		.4byte	0
 6472              	.LLST27:
 6473 051b 10000000 		.4byte	.LVL79
 6474 051f 12000000 		.4byte	.LVL80
 6475 0523 0100     		.2byte	0x1
 6476 0525 50       		.byte	0x50
 6477 0526 14000000 		.4byte	.LVL81
 6478 052a 16000000 		.4byte	.LVL82
 6479 052e 0100     		.2byte	0x1
 6480 0530 50       		.byte	0x50
 6481 0531 16000000 		.4byte	.LVL82
 6482 0535 19000000 		.4byte	.LVL83-1
 6483 0539 0400     		.2byte	0x4
 6484 053b 70       		.byte	0x70
 6485 053c B87F     		.sleb128 -72
 6486 053e 9F       		.byte	0x9f
 6487 053f 00000000 		.4byte	0
 6488 0543 00000000 		.4byte	0
 6489              	.LLST28:
 6490 0547 00000000 		.4byte	.LVL90
 6491 054b 0B000000 		.4byte	.LVL92-1
 6492 054f 0100     		.2byte	0x1
 6493 0551 50       		.byte	0x50
 6494 0552 0B000000 		.4byte	.LVL92-1
 6495 0556 14000000 		.4byte	.LFE39
 6496 055a 0400     		.2byte	0x4
 6497 055c F3       		.byte	0xf3
 6498 055d 01       		.uleb128 0x1
 6499 055e 50       		.byte	0x50
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 169


 6500 055f 9F       		.byte	0x9f
 6501 0560 00000000 		.4byte	0
 6502 0564 00000000 		.4byte	0
 6503              	.LLST29:
 6504 0568 00000000 		.4byte	.LVL90
 6505 056c 08000000 		.4byte	.LVL91
 6506 0570 0100     		.2byte	0x1
 6507 0572 51       		.byte	0x51
 6508 0573 08000000 		.4byte	.LVL91
 6509 0577 12000000 		.4byte	.LVL93
 6510 057b 0100     		.2byte	0x1
 6511 057d 54       		.byte	0x54
 6512 057e 12000000 		.4byte	.LVL93
 6513 0582 14000000 		.4byte	.LFE39
 6514 0586 0400     		.2byte	0x4
 6515 0588 F3       		.byte	0xf3
 6516 0589 01       		.uleb128 0x1
 6517 058a 51       		.byte	0x51
 6518 058b 9F       		.byte	0x9f
 6519 058c 00000000 		.4byte	0
 6520 0590 00000000 		.4byte	0
 6521              	.LLST30:
 6522 0594 00000000 		.4byte	.LVL94
 6523 0598 0E000000 		.4byte	.LVL96
 6524 059c 0100     		.2byte	0x1
 6525 059e 50       		.byte	0x50
 6526 059f 0E000000 		.4byte	.LVL96
 6527 05a3 E8000000 		.4byte	.LVL123
 6528 05a7 0100     		.2byte	0x1
 6529 05a9 54       		.byte	0x54
 6530 05aa E8000000 		.4byte	.LVL123
 6531 05ae EA000000 		.4byte	.LFE40
 6532 05b2 0400     		.2byte	0x4
 6533 05b4 F3       		.byte	0xf3
 6534 05b5 01       		.uleb128 0x1
 6535 05b6 50       		.byte	0x50
 6536 05b7 9F       		.byte	0x9f
 6537 05b8 00000000 		.4byte	0
 6538 05bc 00000000 		.4byte	0
 6539              	.LLST31:
 6540 05c0 00000000 		.4byte	.LVL94
 6541 05c4 0E000000 		.4byte	.LVL96
 6542 05c8 0100     		.2byte	0x1
 6543 05ca 51       		.byte	0x51
 6544 05cb 0E000000 		.4byte	.LVL96
 6545 05cf E8000000 		.4byte	.LVL124
 6546 05d3 0100     		.2byte	0x1
 6547 05d5 55       		.byte	0x55
 6548 05d6 E8000000 		.4byte	.LVL124
 6549 05da EA000000 		.4byte	.LFE40
 6550 05de 0400     		.2byte	0x4
 6551 05e0 F3       		.byte	0xf3
 6552 05e1 01       		.uleb128 0x1
 6553 05e2 51       		.byte	0x51
 6554 05e3 9F       		.byte	0x9f
 6555 05e4 00000000 		.4byte	0
 6556 05e8 00000000 		.4byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 170


 6557              	.LLST32:
 6558 05ec 00000000 		.4byte	.LVL94
 6559 05f0 0E000000 		.4byte	.LVL96
 6560 05f4 0100     		.2byte	0x1
 6561 05f6 52       		.byte	0x52
 6562 05f7 0E000000 		.4byte	.LVL96
 6563 05fb 9C000000 		.4byte	.LVL112
 6564 05ff 0200     		.2byte	0x2
 6565 0601 91       		.byte	0x91
 6566 0602 5C       		.sleb128 -36
 6567 0603 9C000000 		.4byte	.LVL112
 6568 0607 A1000000 		.4byte	.LVL113-1
 6569 060b 0200     		.2byte	0x2
 6570 060d 71       		.byte	0x71
 6571 060e 00       		.sleb128 0
 6572 060f A1000000 		.4byte	.LVL113-1
 6573 0613 EA000000 		.4byte	.LFE40
 6574 0617 0200     		.2byte	0x2
 6575 0619 91       		.byte	0x91
 6576 061a 5C       		.sleb128 -36
 6577 061b 00000000 		.4byte	0
 6578 061f 00000000 		.4byte	0
 6579              	.LLST33:
 6580 0623 00000000 		.4byte	.LVL94
 6581 0627 0E000000 		.4byte	.LVL96
 6582 062b 0100     		.2byte	0x1
 6583 062d 53       		.byte	0x53
 6584 062e 0E000000 		.4byte	.LVL96
 6585 0632 E8000000 		.4byte	.LVL126
 6586 0636 0100     		.2byte	0x1
 6587 0638 57       		.byte	0x57
 6588 0639 E8000000 		.4byte	.LVL126
 6589 063d EA000000 		.4byte	.LFE40
 6590 0641 0400     		.2byte	0x4
 6591 0643 F3       		.byte	0xf3
 6592 0644 01       		.uleb128 0x1
 6593 0645 53       		.byte	0x53
 6594 0646 9F       		.byte	0x9f
 6595 0647 00000000 		.4byte	0
 6596 064b 00000000 		.4byte	0
 6597              	.LLST34:
 6598 064f 0C000000 		.4byte	.LVL95
 6599 0653 0E000000 		.4byte	.LVL96
 6600 0657 0200     		.2byte	0x2
 6601 0659 30       		.byte	0x30
 6602 065a 9F       		.byte	0x9f
 6603 065b 0E000000 		.4byte	.LVL96
 6604 065f 68000000 		.4byte	.LVL106
 6605 0663 0100     		.2byte	0x1
 6606 0665 56       		.byte	0x56
 6607 0666 68000000 		.4byte	.LVL106
 6608 066a 6A000000 		.4byte	.LVL107
 6609 066e 0200     		.2byte	0x2
 6610 0670 31       		.byte	0x31
 6611 0671 9F       		.byte	0x9f
 6612 0672 6A000000 		.4byte	.LVL107
 6613 0676 E8000000 		.4byte	.LVL125
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 171


 6614 067a 0100     		.2byte	0x1
 6615 067c 56       		.byte	0x56
 6616 067d 00000000 		.4byte	0
 6617 0681 00000000 		.4byte	0
 6618              	.LLST35:
 6619 0685 28000000 		.4byte	.LVL98
 6620 0689 30000000 		.4byte	.LVL99
 6621 068d 0100     		.2byte	0x1
 6622 068f 50       		.byte	0x50
 6623 0690 40000000 		.4byte	.LVL102
 6624 0694 47000000 		.4byte	.LVL103-1
 6625 0698 0100     		.2byte	0x1
 6626 069a 50       		.byte	0x50
 6627 069b 00000000 		.4byte	0
 6628 069f 00000000 		.4byte	0
 6629              	.LLST36:
 6630 06a3 0C000000 		.4byte	.LVL95
 6631 06a7 0E000000 		.4byte	.LVL96
 6632 06ab 0100     		.2byte	0x1
 6633 06ad 50       		.byte	0x50
 6634 06ae 0E000000 		.4byte	.LVL96
 6635 06b2 E8000000 		.4byte	.LVL123
 6636 06b6 0100     		.2byte	0x1
 6637 06b8 54       		.byte	0x54
 6638 06b9 E8000000 		.4byte	.LVL123
 6639 06bd EA000000 		.4byte	.LFE40
 6640 06c1 0400     		.2byte	0x4
 6641 06c3 F3       		.byte	0xf3
 6642 06c4 01       		.uleb128 0x1
 6643 06c5 50       		.byte	0x50
 6644 06c6 9F       		.byte	0x9f
 6645 06c7 00000000 		.4byte	0
 6646 06cb 00000000 		.4byte	0
 6647              	.LLST37:
 6648 06cf 00000000 		.4byte	.LVL127
 6649 06d3 15000000 		.4byte	.LVL128-1
 6650 06d7 0100     		.2byte	0x1
 6651 06d9 50       		.byte	0x50
 6652 06da 15000000 		.4byte	.LVL128-1
 6653 06de 18000000 		.4byte	.LFE35
 6654 06e2 0400     		.2byte	0x4
 6655 06e4 F3       		.byte	0xf3
 6656 06e5 01       		.uleb128 0x1
 6657 06e6 50       		.byte	0x50
 6658 06e7 9F       		.byte	0x9f
 6659 06e8 00000000 		.4byte	0
 6660 06ec 00000000 		.4byte	0
 6661              	.LLST38:
 6662 06f0 00000000 		.4byte	.LVL129
 6663 06f4 08000000 		.4byte	.LVL131
 6664 06f8 0100     		.2byte	0x1
 6665 06fa 50       		.byte	0x50
 6666 06fb 08000000 		.4byte	.LVL131
 6667 06ff 16000000 		.4byte	.LFE36
 6668 0703 0400     		.2byte	0x4
 6669 0705 F3       		.byte	0xf3
 6670 0706 01       		.uleb128 0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 172


 6671 0707 50       		.byte	0x50
 6672 0708 9F       		.byte	0x9f
 6673 0709 00000000 		.4byte	0
 6674 070d 00000000 		.4byte	0
 6675              	.LLST39:
 6676 0711 0E000000 		.4byte	.LVL133
 6677 0715 11000000 		.4byte	.LVL134-1
 6678 0719 0100     		.2byte	0x1
 6679 071b 50       		.byte	0x50
 6680 071c 11000000 		.4byte	.LVL134-1
 6681 0720 14000000 		.4byte	.LVL135
 6682 0724 0100     		.2byte	0x1
 6683 0726 54       		.byte	0x54
 6684 0727 14000000 		.4byte	.LVL135
 6685 072b 16000000 		.4byte	.LFE36
 6686 072f 0100     		.2byte	0x1
 6687 0731 50       		.byte	0x50
 6688 0732 00000000 		.4byte	0
 6689 0736 00000000 		.4byte	0
 6690              	.LLST40:
 6691 073a 00000000 		.4byte	.LVL136
 6692 073e 09000000 		.4byte	.LVL138-1
 6693 0742 0100     		.2byte	0x1
 6694 0744 50       		.byte	0x50
 6695 0745 09000000 		.4byte	.LVL138-1
 6696 0749 2C000000 		.4byte	.LVL141
 6697 074d 0100     		.2byte	0x1
 6698 074f 54       		.byte	0x54
 6699 0750 2C000000 		.4byte	.LVL141
 6700 0754 2E000000 		.4byte	.LFE37
 6701 0758 0400     		.2byte	0x4
 6702 075a F3       		.byte	0xf3
 6703 075b 01       		.uleb128 0x1
 6704 075c 50       		.byte	0x50
 6705 075d 9F       		.byte	0x9f
 6706 075e 00000000 		.4byte	0
 6707 0762 00000000 		.4byte	0
 6708              	.LLST41:
 6709 0766 04000000 		.4byte	.LVL137
 6710 076a 09000000 		.4byte	.LVL138-1
 6711 076e 0100     		.2byte	0x1
 6712 0770 50       		.byte	0x50
 6713 0771 09000000 		.4byte	.LVL138-1
 6714 0775 2C000000 		.4byte	.LVL141
 6715 0779 0100     		.2byte	0x1
 6716 077b 54       		.byte	0x54
 6717 077c 2C000000 		.4byte	.LVL141
 6718 0780 2E000000 		.4byte	.LFE37
 6719 0784 0400     		.2byte	0x4
 6720 0786 F3       		.byte	0xf3
 6721 0787 01       		.uleb128 0x1
 6722 0788 50       		.byte	0x50
 6723 0789 9F       		.byte	0x9f
 6724 078a 00000000 		.4byte	0
 6725 078e 00000000 		.4byte	0
 6726              	.LLST42:
 6727 0792 00000000 		.4byte	.LVL142
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 173


 6728 0796 0F000000 		.4byte	.LVL144-1
 6729 079a 0100     		.2byte	0x1
 6730 079c 50       		.byte	0x50
 6731 079d 0F000000 		.4byte	.LVL144-1
 6732 07a1 76000000 		.4byte	.LVL165
 6733 07a5 0100     		.2byte	0x1
 6734 07a7 56       		.byte	0x56
 6735 07a8 76000000 		.4byte	.LVL165
 6736 07ac 78000000 		.4byte	.LFE41
 6737 07b0 0400     		.2byte	0x4
 6738 07b2 F3       		.byte	0xf3
 6739 07b3 01       		.uleb128 0x1
 6740 07b4 50       		.byte	0x50
 6741 07b5 9F       		.byte	0x9f
 6742 07b6 00000000 		.4byte	0
 6743 07ba 00000000 		.4byte	0
 6744              	.LLST43:
 6745 07be 00000000 		.4byte	.LVL142
 6746 07c2 0F000000 		.4byte	.LVL144-1
 6747 07c6 0100     		.2byte	0x1
 6748 07c8 51       		.byte	0x51
 6749 07c9 0F000000 		.4byte	.LVL144-1
 6750 07cd 76000000 		.4byte	.LVL162
 6751 07d1 0200     		.2byte	0x2
 6752 07d3 7D       		.byte	0x7d
 6753 07d4 00       		.sleb128 0
 6754 07d5 76000000 		.4byte	.LVL162
 6755 07d9 78000000 		.4byte	.LFE41
 6756 07dd 0200     		.2byte	0x2
 6757 07df 91       		.byte	0x91
 6758 07e0 60       		.sleb128 -32
 6759 07e1 00000000 		.4byte	0
 6760 07e5 00000000 		.4byte	0
 6761              	.LLST44:
 6762 07e9 00000000 		.4byte	.LVL142
 6763 07ed 0F000000 		.4byte	.LVL144-1
 6764 07f1 0100     		.2byte	0x1
 6765 07f3 52       		.byte	0x52
 6766 07f4 0F000000 		.4byte	.LVL144-1
 6767 07f8 78000000 		.4byte	.LFE41
 6768 07fc 0200     		.2byte	0x2
 6769 07fe 91       		.byte	0x91
 6770 07ff 64       		.sleb128 -28
 6771 0800 00000000 		.4byte	0
 6772 0804 00000000 		.4byte	0
 6773              	.LLST45:
 6774 0808 00000000 		.4byte	.LVL142
 6775 080c 0F000000 		.4byte	.LVL144-1
 6776 0810 0100     		.2byte	0x1
 6777 0812 53       		.byte	0x53
 6778 0813 0F000000 		.4byte	.LVL144-1
 6779 0817 50000000 		.4byte	.LVL150
 6780 081b 0100     		.2byte	0x1
 6781 081d 54       		.byte	0x54
 6782 081e 50000000 		.4byte	.LVL150
 6783 0822 52000000 		.4byte	.LVL151
 6784 0826 0400     		.2byte	0x4
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 174


 6785 0828 F3       		.byte	0xf3
 6786 0829 01       		.uleb128 0x1
 6787 082a 53       		.byte	0x53
 6788 082b 9F       		.byte	0x9f
 6789 082c 52000000 		.4byte	.LVL151
 6790 0830 5C000000 		.4byte	.LVL152
 6791 0834 0100     		.2byte	0x1
 6792 0836 54       		.byte	0x54
 6793 0837 5C000000 		.4byte	.LVL152
 6794 083b 5E000000 		.4byte	.LVL153
 6795 083f 0400     		.2byte	0x4
 6796 0841 F3       		.byte	0xf3
 6797 0842 01       		.uleb128 0x1
 6798 0843 53       		.byte	0x53
 6799 0844 9F       		.byte	0x9f
 6800 0845 5E000000 		.4byte	.LVL153
 6801 0849 60000000 		.4byte	.LVL154
 6802 084d 0100     		.2byte	0x1
 6803 084f 54       		.byte	0x54
 6804 0850 60000000 		.4byte	.LVL154
 6805 0854 62000000 		.4byte	.LVL155
 6806 0858 0400     		.2byte	0x4
 6807 085a F3       		.byte	0xf3
 6808 085b 01       		.uleb128 0x1
 6809 085c 53       		.byte	0x53
 6810 085d 9F       		.byte	0x9f
 6811 085e 62000000 		.4byte	.LVL155
 6812 0862 64000000 		.4byte	.LVL156
 6813 0866 0100     		.2byte	0x1
 6814 0868 54       		.byte	0x54
 6815 0869 64000000 		.4byte	.LVL156
 6816 086d 66000000 		.4byte	.LVL157
 6817 0871 0400     		.2byte	0x4
 6818 0873 F3       		.byte	0xf3
 6819 0874 01       		.uleb128 0x1
 6820 0875 53       		.byte	0x53
 6821 0876 9F       		.byte	0x9f
 6822 0877 66000000 		.4byte	.LVL157
 6823 087b 68000000 		.4byte	.LVL158
 6824 087f 0100     		.2byte	0x1
 6825 0881 54       		.byte	0x54
 6826 0882 68000000 		.4byte	.LVL158
 6827 0886 6A000000 		.4byte	.LVL159
 6828 088a 0400     		.2byte	0x4
 6829 088c F3       		.byte	0xf3
 6830 088d 01       		.uleb128 0x1
 6831 088e 53       		.byte	0x53
 6832 088f 9F       		.byte	0x9f
 6833 0890 6A000000 		.4byte	.LVL159
 6834 0894 6C000000 		.4byte	.LVL160
 6835 0898 0100     		.2byte	0x1
 6836 089a 54       		.byte	0x54
 6837 089b 6C000000 		.4byte	.LVL160
 6838 089f 78000000 		.4byte	.LFE41
 6839 08a3 0400     		.2byte	0x4
 6840 08a5 F3       		.byte	0xf3
 6841 08a6 01       		.uleb128 0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 175


 6842 08a7 53       		.byte	0x53
 6843 08a8 9F       		.byte	0x9f
 6844 08a9 00000000 		.4byte	0
 6845 08ad 00000000 		.4byte	0
 6846              	.LLST46:
 6847 08b1 6C000000 		.4byte	.LVL160
 6848 08b5 76000000 		.4byte	.LVL163
 6849 08b9 0100     		.2byte	0x1
 6850 08bb 54       		.byte	0x54
 6851 08bc 76000000 		.4byte	.LVL163
 6852 08c0 78000000 		.4byte	.LFE41
 6853 08c4 0100     		.2byte	0x1
 6854 08c6 50       		.byte	0x50
 6855 08c7 00000000 		.4byte	0
 6856 08cb 00000000 		.4byte	0
 6857              	.LLST47:
 6858 08cf 12000000 		.4byte	.LVL145
 6859 08d3 2A000000 		.4byte	.LVL147
 6860 08d7 0100     		.2byte	0x1
 6861 08d9 50       		.byte	0x50
 6862 08da 2A000000 		.4byte	.LVL147
 6863 08de 5E000000 		.4byte	.LVL153
 6864 08e2 0100     		.2byte	0x1
 6865 08e4 55       		.byte	0x55
 6866 08e5 5E000000 		.4byte	.LVL153
 6867 08e9 62000000 		.4byte	.LVL155
 6868 08ed 0100     		.2byte	0x1
 6869 08ef 50       		.byte	0x50
 6870 08f0 62000000 		.4byte	.LVL155
 6871 08f4 76000000 		.4byte	.LVL164
 6872 08f8 0100     		.2byte	0x1
 6873 08fa 55       		.byte	0x55
 6874 08fb 00000000 		.4byte	0
 6875 08ff 00000000 		.4byte	0
 6876              	.LLST48:
 6877 0903 0C000000 		.4byte	.LVL143
 6878 0907 0F000000 		.4byte	.LVL144-1
 6879 090b 0100     		.2byte	0x1
 6880 090d 50       		.byte	0x50
 6881 090e 0F000000 		.4byte	.LVL144-1
 6882 0912 76000000 		.4byte	.LVL165
 6883 0916 0100     		.2byte	0x1
 6884 0918 56       		.byte	0x56
 6885 0919 76000000 		.4byte	.LVL165
 6886 091d 78000000 		.4byte	.LFE41
 6887 0921 0400     		.2byte	0x4
 6888 0923 F3       		.byte	0xf3
 6889 0924 01       		.uleb128 0x1
 6890 0925 50       		.byte	0x50
 6891 0926 9F       		.byte	0x9f
 6892 0927 00000000 		.4byte	0
 6893 092b 00000000 		.4byte	0
 6894              	.LLST49:
 6895 092f 24000000 		.4byte	.LVL146
 6896 0933 5E000000 		.4byte	.LVL153
 6897 0937 0100     		.2byte	0x1
 6898 0939 57       		.byte	0x57
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 176


 6899 093a 62000000 		.4byte	.LVL155
 6900 093e 6C000000 		.4byte	.LVL160
 6901 0942 0100     		.2byte	0x1
 6902 0944 57       		.byte	0x57
 6903 0945 00000000 		.4byte	0
 6904 0949 00000000 		.4byte	0
 6905              	.LLST50:
 6906 094d 00000000 		.4byte	.LVL166
 6907 0951 09000000 		.4byte	.LVL168-1
 6908 0955 0100     		.2byte	0x1
 6909 0957 50       		.byte	0x50
 6910 0958 09000000 		.4byte	.LVL168-1
 6911 095c 3E000000 		.4byte	.LVL177
 6912 0960 0100     		.2byte	0x1
 6913 0962 54       		.byte	0x54
 6914 0963 3E000000 		.4byte	.LVL177
 6915 0967 40000000 		.4byte	.LVL178
 6916 096b 0400     		.2byte	0x4
 6917 096d F3       		.byte	0xf3
 6918 096e 01       		.uleb128 0x1
 6919 096f 50       		.byte	0x50
 6920 0970 9F       		.byte	0x9f
 6921 0971 40000000 		.4byte	.LVL178
 6922 0975 4A000000 		.4byte	.LVL182
 6923 0979 0100     		.2byte	0x1
 6924 097b 54       		.byte	0x54
 6925 097c 4A000000 		.4byte	.LVL182
 6926 0980 4C000000 		.4byte	.LVL183
 6927 0984 0400     		.2byte	0x4
 6928 0986 F3       		.byte	0xf3
 6929 0987 01       		.uleb128 0x1
 6930 0988 50       		.byte	0x50
 6931 0989 9F       		.byte	0x9f
 6932 098a 4C000000 		.4byte	.LVL183
 6933 098e 4E000000 		.4byte	.LVL184
 6934 0992 0100     		.2byte	0x1
 6935 0994 54       		.byte	0x54
 6936 0995 4E000000 		.4byte	.LVL184
 6937 0999 50000000 		.4byte	.LVL185
 6938 099d 0400     		.2byte	0x4
 6939 099f F3       		.byte	0xf3
 6940 09a0 01       		.uleb128 0x1
 6941 09a1 50       		.byte	0x50
 6942 09a2 9F       		.byte	0x9f
 6943 09a3 50000000 		.4byte	.LVL185
 6944 09a7 52000000 		.4byte	.LVL186
 6945 09ab 0100     		.2byte	0x1
 6946 09ad 54       		.byte	0x54
 6947 09ae 52000000 		.4byte	.LVL186
 6948 09b2 54000000 		.4byte	.LVL187
 6949 09b6 0400     		.2byte	0x4
 6950 09b8 F3       		.byte	0xf3
 6951 09b9 01       		.uleb128 0x1
 6952 09ba 50       		.byte	0x50
 6953 09bb 9F       		.byte	0x9f
 6954 09bc 54000000 		.4byte	.LVL187
 6955 09c0 56000000 		.4byte	.LVL188
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 177


 6956 09c4 0100     		.2byte	0x1
 6957 09c6 54       		.byte	0x54
 6958 09c7 56000000 		.4byte	.LVL188
 6959 09cb 58000000 		.4byte	.LVL189
 6960 09cf 0400     		.2byte	0x4
 6961 09d1 F3       		.byte	0xf3
 6962 09d2 01       		.uleb128 0x1
 6963 09d3 50       		.byte	0x50
 6964 09d4 9F       		.byte	0x9f
 6965 09d5 58000000 		.4byte	.LVL189
 6966 09d9 5A000000 		.4byte	.LVL190
 6967 09dd 0100     		.2byte	0x1
 6968 09df 54       		.byte	0x54
 6969 09e0 5A000000 		.4byte	.LVL190
 6970 09e4 64000000 		.4byte	.LFE42
 6971 09e8 0400     		.2byte	0x4
 6972 09ea F3       		.byte	0xf3
 6973 09eb 01       		.uleb128 0x1
 6974 09ec 50       		.byte	0x50
 6975 09ed 9F       		.byte	0x9f
 6976 09ee 00000000 		.4byte	0
 6977 09f2 00000000 		.4byte	0
 6978              	.LLST51:
 6979 09f6 00000000 		.4byte	.LVL166
 6980 09fa 09000000 		.4byte	.LVL168-1
 6981 09fe 0100     		.2byte	0x1
 6982 0a00 51       		.byte	0x51
 6983 0a01 09000000 		.4byte	.LVL168-1
 6984 0a05 62000000 		.4byte	.LVL194
 6985 0a09 0100     		.2byte	0x1
 6986 0a0b 56       		.byte	0x56
 6987 0a0c 62000000 		.4byte	.LVL194
 6988 0a10 64000000 		.4byte	.LFE42
 6989 0a14 0400     		.2byte	0x4
 6990 0a16 F3       		.byte	0xf3
 6991 0a17 01       		.uleb128 0x1
 6992 0a18 51       		.byte	0x51
 6993 0a19 9F       		.byte	0x9f
 6994 0a1a 00000000 		.4byte	0
 6995 0a1e 00000000 		.4byte	0
 6996              	.LLST52:
 6997 0a22 5A000000 		.4byte	.LVL190
 6998 0a26 62000000 		.4byte	.LVL192
 6999 0a2a 0100     		.2byte	0x1
 7000 0a2c 54       		.byte	0x54
 7001 0a2d 62000000 		.4byte	.LVL192
 7002 0a31 64000000 		.4byte	.LFE42
 7003 0a35 0100     		.2byte	0x1
 7004 0a37 50       		.byte	0x50
 7005 0a38 00000000 		.4byte	0
 7006 0a3c 00000000 		.4byte	0
 7007              	.LLST53:
 7008 0a40 0C000000 		.4byte	.LVL169
 7009 0a44 2A000000 		.4byte	.LVL175
 7010 0a48 0100     		.2byte	0x1
 7011 0a4a 50       		.byte	0x50
 7012 0a4b 2A000000 		.4byte	.LVL175
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 178


 7013 0a4f 40000000 		.4byte	.LVL178
 7014 0a53 0100     		.2byte	0x1
 7015 0a55 55       		.byte	0x55
 7016 0a56 40000000 		.4byte	.LVL178
 7017 0a5a 54000000 		.4byte	.LVL187
 7018 0a5e 0100     		.2byte	0x1
 7019 0a60 50       		.byte	0x50
 7020 0a61 54000000 		.4byte	.LVL187
 7021 0a65 62000000 		.4byte	.LVL193
 7022 0a69 0100     		.2byte	0x1
 7023 0a6b 55       		.byte	0x55
 7024 0a6c 00000000 		.4byte	0
 7025 0a70 00000000 		.4byte	0
 7026              	.LLST54:
 7027 0a74 06000000 		.4byte	.LVL167
 7028 0a78 09000000 		.4byte	.LVL168-1
 7029 0a7c 0100     		.2byte	0x1
 7030 0a7e 50       		.byte	0x50
 7031 0a7f 09000000 		.4byte	.LVL168-1
 7032 0a83 3E000000 		.4byte	.LVL177
 7033 0a87 0100     		.2byte	0x1
 7034 0a89 54       		.byte	0x54
 7035 0a8a 3E000000 		.4byte	.LVL177
 7036 0a8e 40000000 		.4byte	.LVL178
 7037 0a92 0400     		.2byte	0x4
 7038 0a94 F3       		.byte	0xf3
 7039 0a95 01       		.uleb128 0x1
 7040 0a96 50       		.byte	0x50
 7041 0a97 9F       		.byte	0x9f
 7042 0a98 40000000 		.4byte	.LVL178
 7043 0a9c 4A000000 		.4byte	.LVL182
 7044 0aa0 0100     		.2byte	0x1
 7045 0aa2 54       		.byte	0x54
 7046 0aa3 4A000000 		.4byte	.LVL182
 7047 0aa7 4C000000 		.4byte	.LVL183
 7048 0aab 0400     		.2byte	0x4
 7049 0aad F3       		.byte	0xf3
 7050 0aae 01       		.uleb128 0x1
 7051 0aaf 50       		.byte	0x50
 7052 0ab0 9F       		.byte	0x9f
 7053 0ab1 4C000000 		.4byte	.LVL183
 7054 0ab5 4E000000 		.4byte	.LVL184
 7055 0ab9 0100     		.2byte	0x1
 7056 0abb 54       		.byte	0x54
 7057 0abc 4E000000 		.4byte	.LVL184
 7058 0ac0 50000000 		.4byte	.LVL185
 7059 0ac4 0400     		.2byte	0x4
 7060 0ac6 F3       		.byte	0xf3
 7061 0ac7 01       		.uleb128 0x1
 7062 0ac8 50       		.byte	0x50
 7063 0ac9 9F       		.byte	0x9f
 7064 0aca 50000000 		.4byte	.LVL185
 7065 0ace 52000000 		.4byte	.LVL186
 7066 0ad2 0100     		.2byte	0x1
 7067 0ad4 54       		.byte	0x54
 7068 0ad5 52000000 		.4byte	.LVL186
 7069 0ad9 54000000 		.4byte	.LVL187
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 179


 7070 0add 0400     		.2byte	0x4
 7071 0adf F3       		.byte	0xf3
 7072 0ae0 01       		.uleb128 0x1
 7073 0ae1 50       		.byte	0x50
 7074 0ae2 9F       		.byte	0x9f
 7075 0ae3 54000000 		.4byte	.LVL187
 7076 0ae7 56000000 		.4byte	.LVL188
 7077 0aeb 0100     		.2byte	0x1
 7078 0aed 54       		.byte	0x54
 7079 0aee 56000000 		.4byte	.LVL188
 7080 0af2 58000000 		.4byte	.LVL189
 7081 0af6 0400     		.2byte	0x4
 7082 0af8 F3       		.byte	0xf3
 7083 0af9 01       		.uleb128 0x1
 7084 0afa 50       		.byte	0x50
 7085 0afb 9F       		.byte	0x9f
 7086 0afc 58000000 		.4byte	.LVL189
 7087 0b00 5A000000 		.4byte	.LVL190
 7088 0b04 0100     		.2byte	0x1
 7089 0b06 54       		.byte	0x54
 7090 0b07 5A000000 		.4byte	.LVL190
 7091 0b0b 64000000 		.4byte	.LFE42
 7092 0b0f 0400     		.2byte	0x4
 7093 0b11 F3       		.byte	0xf3
 7094 0b12 01       		.uleb128 0x1
 7095 0b13 50       		.byte	0x50
 7096 0b14 9F       		.byte	0x9f
 7097 0b15 00000000 		.4byte	0
 7098 0b19 00000000 		.4byte	0
 7099              	.LLST55:
 7100 0b1d 0E000000 		.4byte	.LVL170
 7101 0b21 1C000000 		.4byte	.LVL172
 7102 0b25 0100     		.2byte	0x1
 7103 0b27 52       		.byte	0x52
 7104 0b28 1C000000 		.4byte	.LVL172
 7105 0b2c 22000000 		.4byte	.LVL173
 7106 0b30 0300     		.2byte	0x3
 7107 0b32 72       		.byte	0x72
 7108 0b33 7F       		.sleb128 -1
 7109 0b34 9F       		.byte	0x9f
 7110 0b35 22000000 		.4byte	.LVL173
 7111 0b39 2F000000 		.4byte	.LVL176-1
 7112 0b3d 0600     		.2byte	0x6
 7113 0b3f 74       		.byte	0x74
 7114 0b40 38       		.sleb128 56
 7115 0b41 06       		.byte	0x6
 7116 0b42 31       		.byte	0x31
 7117 0b43 1C       		.byte	0x1c
 7118 0b44 9F       		.byte	0x9f
 7119 0b45 40000000 		.4byte	.LVL178
 7120 0b49 48000000 		.4byte	.LVL181
 7121 0b4d 0600     		.2byte	0x6
 7122 0b4f 74       		.byte	0x74
 7123 0b50 38       		.sleb128 56
 7124 0b51 06       		.byte	0x6
 7125 0b52 31       		.byte	0x31
 7126 0b53 1C       		.byte	0x1c
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 180


 7127 0b54 9F       		.byte	0x9f
 7128 0b55 4C000000 		.4byte	.LVL183
 7129 0b59 50000000 		.4byte	.LVL185
 7130 0b5d 0100     		.2byte	0x1
 7131 0b5f 52       		.byte	0x52
 7132 0b60 50000000 		.4byte	.LVL185
 7133 0b64 52000000 		.4byte	.LVL186
 7134 0b68 0600     		.2byte	0x6
 7135 0b6a 74       		.byte	0x74
 7136 0b6b 38       		.sleb128 56
 7137 0b6c 06       		.byte	0x6
 7138 0b6d 31       		.byte	0x31
 7139 0b6e 1C       		.byte	0x1c
 7140 0b6f 9F       		.byte	0x9f
 7141 0b70 52000000 		.4byte	.LVL186
 7142 0b74 54000000 		.4byte	.LVL187
 7143 0b78 0900     		.2byte	0x9
 7144 0b7a F3       		.byte	0xf3
 7145 0b7b 01       		.uleb128 0x1
 7146 0b7c 50       		.byte	0x50
 7147 0b7d 23       		.byte	0x23
 7148 0b7e 38       		.uleb128 0x38
 7149 0b7f 06       		.byte	0x6
 7150 0b80 31       		.byte	0x31
 7151 0b81 1C       		.byte	0x1c
 7152 0b82 9F       		.byte	0x9f
 7153 0b83 00000000 		.4byte	0
 7154 0b87 00000000 		.4byte	0
 7155              	.LLST56:
 7156 0b8b 1A000000 		.4byte	.LVL171
 7157 0b8f 24000000 		.4byte	.LVL174
 7158 0b93 0100     		.2byte	0x1
 7159 0b95 53       		.byte	0x53
 7160 0b96 40000000 		.4byte	.LVL178
 7161 0b9a 42000000 		.4byte	.LVL179
 7162 0b9e 0100     		.2byte	0x1
 7163 0ba0 53       		.byte	0x53
 7164 0ba1 42000000 		.4byte	.LVL179
 7165 0ba5 44000000 		.4byte	.LVL180
 7166 0ba9 0300     		.2byte	0x3
 7167 0bab 73       		.byte	0x73
 7168 0bac 7F       		.sleb128 -1
 7169 0bad 9F       		.byte	0x9f
 7170 0bae 00000000 		.4byte	0
 7171 0bb2 00000000 		.4byte	0
 7172              	.LLST57:
 7173 0bb6 00000000 		.4byte	.LVL195
 7174 0bba 0C000000 		.4byte	.LVL197
 7175 0bbe 0100     		.2byte	0x1
 7176 0bc0 50       		.byte	0x50
 7177 0bc1 0C000000 		.4byte	.LVL197
 7178 0bc5 E2000000 		.4byte	.LVL226
 7179 0bc9 0100     		.2byte	0x1
 7180 0bcb 54       		.byte	0x54
 7181 0bcc E2000000 		.4byte	.LVL226
 7182 0bd0 E4000000 		.4byte	.LFE43
 7183 0bd4 0400     		.2byte	0x4
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 181


 7184 0bd6 F3       		.byte	0xf3
 7185 0bd7 01       		.uleb128 0x1
 7186 0bd8 50       		.byte	0x50
 7187 0bd9 9F       		.byte	0x9f
 7188 0bda 00000000 		.4byte	0
 7189 0bde 00000000 		.4byte	0
 7190              	.LLST58:
 7191 0be2 00000000 		.4byte	.LVL195
 7192 0be6 0C000000 		.4byte	.LVL197
 7193 0bea 0100     		.2byte	0x1
 7194 0bec 51       		.byte	0x51
 7195 0bed 0C000000 		.4byte	.LVL197
 7196 0bf1 E2000000 		.4byte	.LVL227
 7197 0bf5 0100     		.2byte	0x1
 7198 0bf7 55       		.byte	0x55
 7199 0bf8 E2000000 		.4byte	.LVL227
 7200 0bfc E4000000 		.4byte	.LFE43
 7201 0c00 0400     		.2byte	0x4
 7202 0c02 F3       		.byte	0xf3
 7203 0c03 01       		.uleb128 0x1
 7204 0c04 51       		.byte	0x51
 7205 0c05 9F       		.byte	0x9f
 7206 0c06 00000000 		.4byte	0
 7207 0c0a 00000000 		.4byte	0
 7208              	.LLST59:
 7209 0c0e 00000000 		.4byte	.LVL195
 7210 0c12 0C000000 		.4byte	.LVL197
 7211 0c16 0100     		.2byte	0x1
 7212 0c18 52       		.byte	0x52
 7213 0c19 0C000000 		.4byte	.LVL197
 7214 0c1d 8C000000 		.4byte	.LVL213
 7215 0c21 0200     		.2byte	0x2
 7216 0c23 91       		.byte	0x91
 7217 0c24 5C       		.sleb128 -36
 7218 0c25 8C000000 		.4byte	.LVL213
 7219 0c29 91000000 		.4byte	.LVL214-1
 7220 0c2d 0200     		.2byte	0x2
 7221 0c2f 71       		.byte	0x71
 7222 0c30 00       		.sleb128 0
 7223 0c31 91000000 		.4byte	.LVL214-1
 7224 0c35 E4000000 		.4byte	.LFE43
 7225 0c39 0200     		.2byte	0x2
 7226 0c3b 91       		.byte	0x91
 7227 0c3c 5C       		.sleb128 -36
 7228 0c3d 00000000 		.4byte	0
 7229 0c41 00000000 		.4byte	0
 7230              	.LLST60:
 7231 0c45 0A000000 		.4byte	.LVL196
 7232 0c49 0C000000 		.4byte	.LVL197
 7233 0c4d 0200     		.2byte	0x2
 7234 0c4f 30       		.byte	0x30
 7235 0c50 9F       		.byte	0x9f
 7236 0c51 0C000000 		.4byte	.LVL197
 7237 0c55 58000000 		.4byte	.LVL207
 7238 0c59 0100     		.2byte	0x1
 7239 0c5b 57       		.byte	0x57
 7240 0c5c 58000000 		.4byte	.LVL207
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 182


 7241 0c60 5A000000 		.4byte	.LVL208
 7242 0c64 0200     		.2byte	0x2
 7243 0c66 31       		.byte	0x31
 7244 0c67 9F       		.byte	0x9f
 7245 0c68 5A000000 		.4byte	.LVL208
 7246 0c6c E2000000 		.4byte	.LVL228
 7247 0c70 0100     		.2byte	0x1
 7248 0c72 57       		.byte	0x57
 7249 0c73 00000000 		.4byte	0
 7250 0c77 00000000 		.4byte	0
 7251              	.LLST61:
 7252 0c7b 0A000000 		.4byte	.LVL196
 7253 0c7f 0C000000 		.4byte	.LVL197
 7254 0c83 0100     		.2byte	0x1
 7255 0c85 50       		.byte	0x50
 7256 0c86 0C000000 		.4byte	.LVL197
 7257 0c8a E2000000 		.4byte	.LVL226
 7258 0c8e 0100     		.2byte	0x1
 7259 0c90 54       		.byte	0x54
 7260 0c91 E2000000 		.4byte	.LVL226
 7261 0c95 E4000000 		.4byte	.LFE43
 7262 0c99 0400     		.2byte	0x4
 7263 0c9b F3       		.byte	0xf3
 7264 0c9c 01       		.uleb128 0x1
 7265 0c9d 50       		.byte	0x50
 7266 0c9e 9F       		.byte	0x9f
 7267 0c9f 00000000 		.4byte	0
 7268 0ca3 00000000 		.4byte	0
 7269              	.LLST62:
 7270 0ca7 12000000 		.4byte	.LVL199
 7271 0cab 20000000 		.4byte	.LVL201
 7272 0caf 0100     		.2byte	0x1
 7273 0cb1 56       		.byte	0x56
 7274 0cb2 20000000 		.4byte	.LVL201
 7275 0cb6 40000000 		.4byte	.LVL205
 7276 0cba 0300     		.2byte	0x3
 7277 0cbc 76       		.byte	0x76
 7278 0cbd 01       		.sleb128 1
 7279 0cbe 9F       		.byte	0x9f
 7280 0cbf 40000000 		.4byte	.LVL205
 7281 0cc3 E0000000 		.4byte	.LVL225
 7282 0cc7 0100     		.2byte	0x1
 7283 0cc9 56       		.byte	0x56
 7284 0cca 00000000 		.4byte	0
 7285 0cce 00000000 		.4byte	0
 7286              	.LLST63:
 7287 0cd2 00000000 		.4byte	.LVL229
 7288 0cd6 0C000000 		.4byte	.LVL231
 7289 0cda 0100     		.2byte	0x1
 7290 0cdc 50       		.byte	0x50
 7291 0cdd 0C000000 		.4byte	.LVL231
 7292 0ce1 1A010000 		.4byte	.LVL271
 7293 0ce5 0100     		.2byte	0x1
 7294 0ce7 54       		.byte	0x54
 7295 0ce8 1A010000 		.4byte	.LVL271
 7296 0cec 1C010000 		.4byte	.LFE44
 7297 0cf0 0400     		.2byte	0x4
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 183


 7298 0cf2 F3       		.byte	0xf3
 7299 0cf3 01       		.uleb128 0x1
 7300 0cf4 50       		.byte	0x50
 7301 0cf5 9F       		.byte	0x9f
 7302 0cf6 00000000 		.4byte	0
 7303 0cfa 00000000 		.4byte	0
 7304              	.LLST64:
 7305 0cfe 00000000 		.4byte	.LVL229
 7306 0d02 0C000000 		.4byte	.LVL231
 7307 0d06 0100     		.2byte	0x1
 7308 0d08 51       		.byte	0x51
 7309 0d09 0C000000 		.4byte	.LVL231
 7310 0d0d 90000000 		.4byte	.LVL249
 7311 0d11 0200     		.2byte	0x2
 7312 0d13 91       		.byte	0x91
 7313 0d14 64       		.sleb128 -28
 7314 0d15 90000000 		.4byte	.LVL249
 7315 0d19 95000000 		.4byte	.LVL250-1
 7316 0d1d 0200     		.2byte	0x2
 7317 0d1f 71       		.byte	0x71
 7318 0d20 00       		.sleb128 0
 7319 0d21 95000000 		.4byte	.LVL250-1
 7320 0d25 1C010000 		.4byte	.LFE44
 7321 0d29 0200     		.2byte	0x2
 7322 0d2b 91       		.byte	0x91
 7323 0d2c 64       		.sleb128 -28
 7324 0d2d 00000000 		.4byte	0
 7325 0d31 00000000 		.4byte	0
 7326              	.LLST65:
 7327 0d35 08000000 		.4byte	.LVL230
 7328 0d39 0C000000 		.4byte	.LVL231
 7329 0d3d 0200     		.2byte	0x2
 7330 0d3f 30       		.byte	0x30
 7331 0d40 9F       		.byte	0x9f
 7332 0d41 0C000000 		.4byte	.LVL231
 7333 0d45 5C000000 		.4byte	.LVL243
 7334 0d49 0100     		.2byte	0x1
 7335 0d4b 55       		.byte	0x55
 7336 0d4c 5C000000 		.4byte	.LVL243
 7337 0d50 5E000000 		.4byte	.LVL244
 7338 0d54 0200     		.2byte	0x2
 7339 0d56 31       		.byte	0x31
 7340 0d57 9F       		.byte	0x9f
 7341 0d58 5E000000 		.4byte	.LVL244
 7342 0d5c 1A010000 		.4byte	.LVL272
 7343 0d60 0100     		.2byte	0x1
 7344 0d62 55       		.byte	0x55
 7345 0d63 00000000 		.4byte	0
 7346 0d67 00000000 		.4byte	0
 7347              	.LLST66:
 7348 0d6b 08000000 		.4byte	.LVL230
 7349 0d6f 0C000000 		.4byte	.LVL231
 7350 0d73 0100     		.2byte	0x1
 7351 0d75 50       		.byte	0x50
 7352 0d76 0C000000 		.4byte	.LVL231
 7353 0d7a 1A010000 		.4byte	.LVL271
 7354 0d7e 0100     		.2byte	0x1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 184


 7355 0d80 54       		.byte	0x54
 7356 0d81 1A010000 		.4byte	.LVL271
 7357 0d85 1C010000 		.4byte	.LFE44
 7358 0d89 0400     		.2byte	0x4
 7359 0d8b F3       		.byte	0xf3
 7360 0d8c 01       		.uleb128 0x1
 7361 0d8d 50       		.byte	0x50
 7362 0d8e 9F       		.byte	0x9f
 7363 0d8f 00000000 		.4byte	0
 7364 0d93 00000000 		.4byte	0
 7365              	.LLST67:
 7366 0d97 08000000 		.4byte	.LVL230
 7367 0d9b 0C000000 		.4byte	.LVL231
 7368 0d9f 0200     		.2byte	0x2
 7369 0da1 30       		.byte	0x30
 7370 0da2 9F       		.byte	0x9f
 7371 0da3 0C000000 		.4byte	.LVL231
 7372 0da7 B6000000 		.4byte	.LVL254
 7373 0dab 0100     		.2byte	0x1
 7374 0dad 56       		.byte	0x56
 7375 0dae B6000000 		.4byte	.LVL254
 7376 0db2 B9000000 		.4byte	.LVL255-1
 7377 0db6 0100     		.2byte	0x1
 7378 0db8 50       		.byte	0x50
 7379 0db9 B9000000 		.4byte	.LVL255-1
 7380 0dbd 1A010000 		.4byte	.LVL273
 7381 0dc1 0100     		.2byte	0x1
 7382 0dc3 56       		.byte	0x56
 7383 0dc4 00000000 		.4byte	0
 7384 0dc8 00000000 		.4byte	0
 7385              	.LLST68:
 7386 0dcc 12000000 		.4byte	.LVL233
 7387 0dd0 18000000 		.4byte	.LVL234
 7388 0dd4 0100     		.2byte	0x1
 7389 0dd6 53       		.byte	0x53
 7390 0dd7 18000000 		.4byte	.LVL234
 7391 0ddb 1C000000 		.4byte	.LVL235
 7392 0ddf 0300     		.2byte	0x3
 7393 0de1 73       		.byte	0x73
 7394 0de2 01       		.sleb128 1
 7395 0de3 9F       		.byte	0x9f
 7396 0de4 1C000000 		.4byte	.LVL235
 7397 0de8 23000000 		.4byte	.LVL236-1
 7398 0dec 0600     		.2byte	0x6
 7399 0dee 74       		.byte	0x74
 7400 0def 38       		.sleb128 56
 7401 0df0 06       		.byte	0x6
 7402 0df1 23       		.byte	0x23
 7403 0df2 01       		.uleb128 0x1
 7404 0df3 9F       		.byte	0x9f
 7405 0df4 44000000 		.4byte	.LVL240
 7406 0df8 46000000 		.4byte	.LVL241
 7407 0dfc 0100     		.2byte	0x1
 7408 0dfe 53       		.byte	0x53
 7409 0dff 00000000 		.4byte	0
 7410 0e03 00000000 		.4byte	0
 7411              	.LLST69:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 185


 7412 0e07 08010000 		.4byte	.LVL267
 7413 0e0b 0A010000 		.4byte	.LVL268
 7414 0e0f 0100     		.2byte	0x1
 7415 0e11 50       		.byte	0x50
 7416 0e12 0A010000 		.4byte	.LVL268
 7417 0e16 0D010000 		.4byte	.LVL269-1
 7418 0e1a 0100     		.2byte	0x1
 7419 0e1c 51       		.byte	0x51
 7420 0e1d 00000000 		.4byte	0
 7421 0e21 00000000 		.4byte	0
 7422              	.LLST70:
 7423 0e25 00000000 		.4byte	.LVL274
 7424 0e29 0B000000 		.4byte	.LVL276-1
 7425 0e2d 0100     		.2byte	0x1
 7426 0e2f 50       		.byte	0x50
 7427 0e30 0B000000 		.4byte	.LVL276-1
 7428 0e34 2C000000 		.4byte	.LVL281
 7429 0e38 0100     		.2byte	0x1
 7430 0e3a 54       		.byte	0x54
 7431 0e3b 2C000000 		.4byte	.LVL281
 7432 0e3f 2E000000 		.4byte	.LFE38
 7433 0e43 0400     		.2byte	0x4
 7434 0e45 F3       		.byte	0xf3
 7435 0e46 01       		.uleb128 0x1
 7436 0e47 50       		.byte	0x50
 7437 0e48 9F       		.byte	0x9f
 7438 0e49 00000000 		.4byte	0
 7439 0e4d 00000000 		.4byte	0
 7440              	.LLST71:
 7441 0e51 00000000 		.4byte	.LVL274
 7442 0e55 0B000000 		.4byte	.LVL276-1
 7443 0e59 0100     		.2byte	0x1
 7444 0e5b 51       		.byte	0x51
 7445 0e5c 0B000000 		.4byte	.LVL276-1
 7446 0e60 2C000000 		.4byte	.LVL282
 7447 0e64 0100     		.2byte	0x1
 7448 0e66 56       		.byte	0x56
 7449 0e67 2C000000 		.4byte	.LVL282
 7450 0e6b 2E000000 		.4byte	.LFE38
 7451 0e6f 0400     		.2byte	0x4
 7452 0e71 F3       		.byte	0xf3
 7453 0e72 01       		.uleb128 0x1
 7454 0e73 51       		.byte	0x51
 7455 0e74 9F       		.byte	0x9f
 7456 0e75 00000000 		.4byte	0
 7457 0e79 00000000 		.4byte	0
 7458              	.LLST72:
 7459 0e7d 16000000 		.4byte	.LVL277
 7460 0e81 1A000000 		.4byte	.LVL278
 7461 0e85 0200     		.2byte	0x2
 7462 0e87 31       		.byte	0x31
 7463 0e88 9F       		.byte	0x9f
 7464 0e89 22000000 		.4byte	.LVL279
 7465 0e8d 2E000000 		.4byte	.LFE38
 7466 0e91 0100     		.2byte	0x1
 7467 0e93 50       		.byte	0x50
 7468 0e94 00000000 		.4byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 186


 7469 0e98 00000000 		.4byte	0
 7470              	.LLST73:
 7471 0e9c 06000000 		.4byte	.LVL275
 7472 0ea0 0B000000 		.4byte	.LVL276-1
 7473 0ea4 0100     		.2byte	0x1
 7474 0ea6 50       		.byte	0x50
 7475 0ea7 0B000000 		.4byte	.LVL276-1
 7476 0eab 2C000000 		.4byte	.LVL281
 7477 0eaf 0100     		.2byte	0x1
 7478 0eb1 54       		.byte	0x54
 7479 0eb2 2C000000 		.4byte	.LVL281
 7480 0eb6 2E000000 		.4byte	.LFE38
 7481 0eba 0400     		.2byte	0x4
 7482 0ebc F3       		.byte	0xf3
 7483 0ebd 01       		.uleb128 0x1
 7484 0ebe 50       		.byte	0x50
 7485 0ebf 9F       		.byte	0x9f
 7486 0ec0 00000000 		.4byte	0
 7487 0ec4 00000000 		.4byte	0
 7488              	.LLST74:
 7489 0ec8 00000000 		.4byte	.LVL283
 7490 0ecc 0C000000 		.4byte	.LVL285
 7491 0ed0 0100     		.2byte	0x1
 7492 0ed2 50       		.byte	0x50
 7493 0ed3 0C000000 		.4byte	.LVL285
 7494 0ed7 E2000000 		.4byte	.LVL315
 7495 0edb 0100     		.2byte	0x1
 7496 0edd 54       		.byte	0x54
 7497 0ede E2000000 		.4byte	.LVL315
 7498 0ee2 E4000000 		.4byte	.LFE45
 7499 0ee6 0400     		.2byte	0x4
 7500 0ee8 F3       		.byte	0xf3
 7501 0ee9 01       		.uleb128 0x1
 7502 0eea 50       		.byte	0x50
 7503 0eeb 9F       		.byte	0x9f
 7504 0eec 00000000 		.4byte	0
 7505 0ef0 00000000 		.4byte	0
 7506              	.LLST75:
 7507 0ef4 00000000 		.4byte	.LVL283
 7508 0ef8 0C000000 		.4byte	.LVL285
 7509 0efc 0100     		.2byte	0x1
 7510 0efe 51       		.byte	0x51
 7511 0eff 0C000000 		.4byte	.LVL285
 7512 0f03 E2000000 		.4byte	.LVL316
 7513 0f07 0100     		.2byte	0x1
 7514 0f09 55       		.byte	0x55
 7515 0f0a E2000000 		.4byte	.LVL316
 7516 0f0e E4000000 		.4byte	.LFE45
 7517 0f12 0400     		.2byte	0x4
 7518 0f14 F3       		.byte	0xf3
 7519 0f15 01       		.uleb128 0x1
 7520 0f16 51       		.byte	0x51
 7521 0f17 9F       		.byte	0x9f
 7522 0f18 00000000 		.4byte	0
 7523 0f1c 00000000 		.4byte	0
 7524              	.LLST76:
 7525 0f20 00000000 		.4byte	.LVL283
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 187


 7526 0f24 0C000000 		.4byte	.LVL285
 7527 0f28 0100     		.2byte	0x1
 7528 0f2a 52       		.byte	0x52
 7529 0f2b 0C000000 		.4byte	.LVL285
 7530 0f2f 8C000000 		.4byte	.LVL302
 7531 0f33 0200     		.2byte	0x2
 7532 0f35 91       		.byte	0x91
 7533 0f36 64       		.sleb128 -28
 7534 0f37 8C000000 		.4byte	.LVL302
 7535 0f3b 91000000 		.4byte	.LVL303-1
 7536 0f3f 0200     		.2byte	0x2
 7537 0f41 71       		.byte	0x71
 7538 0f42 00       		.sleb128 0
 7539 0f43 91000000 		.4byte	.LVL303-1
 7540 0f47 E4000000 		.4byte	.LFE45
 7541 0f4b 0200     		.2byte	0x2
 7542 0f4d 91       		.byte	0x91
 7543 0f4e 64       		.sleb128 -28
 7544 0f4f 00000000 		.4byte	0
 7545 0f53 00000000 		.4byte	0
 7546              	.LLST77:
 7547 0f57 0A000000 		.4byte	.LVL284
 7548 0f5b 0C000000 		.4byte	.LVL285
 7549 0f5f 0200     		.2byte	0x2
 7550 0f61 30       		.byte	0x30
 7551 0f62 9F       		.byte	0x9f
 7552 0f63 0C000000 		.4byte	.LVL285
 7553 0f67 18000000 		.4byte	.LVL288
 7554 0f6b 0100     		.2byte	0x1
 7555 0f6d 56       		.byte	0x56
 7556 0f6e 40000000 		.4byte	.LVL293
 7557 0f72 58000000 		.4byte	.LVL296
 7558 0f76 0100     		.2byte	0x1
 7559 0f78 56       		.byte	0x56
 7560 0f79 58000000 		.4byte	.LVL296
 7561 0f7d 5A000000 		.4byte	.LVL297
 7562 0f81 0200     		.2byte	0x2
 7563 0f83 31       		.byte	0x31
 7564 0f84 9F       		.byte	0x9f
 7565 0f85 5A000000 		.4byte	.LVL297
 7566 0f89 E0000000 		.4byte	.LVL314
 7567 0f8d 0100     		.2byte	0x1
 7568 0f8f 56       		.byte	0x56
 7569 0f90 00000000 		.4byte	0
 7570 0f94 00000000 		.4byte	0
 7571              	.LLST78:
 7572 0f98 18000000 		.4byte	.LVL288
 7573 0f9c 40000000 		.4byte	.LVL293
 7574 0fa0 0100     		.2byte	0x1
 7575 0fa2 56       		.byte	0x56
 7576 0fa3 00000000 		.4byte	0
 7577 0fa7 00000000 		.4byte	0
 7578              	.LLST79:
 7579 0fab 0A000000 		.4byte	.LVL284
 7580 0faf 0C000000 		.4byte	.LVL285
 7581 0fb3 0100     		.2byte	0x1
 7582 0fb5 50       		.byte	0x50
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 188


 7583 0fb6 0C000000 		.4byte	.LVL285
 7584 0fba E2000000 		.4byte	.LVL315
 7585 0fbe 0100     		.2byte	0x1
 7586 0fc0 54       		.byte	0x54
 7587 0fc1 E2000000 		.4byte	.LVL315
 7588 0fc5 E4000000 		.4byte	.LFE45
 7589 0fc9 0400     		.2byte	0x4
 7590 0fcb F3       		.byte	0xf3
 7591 0fcc 01       		.uleb128 0x1
 7592 0fcd 50       		.byte	0x50
 7593 0fce 9F       		.byte	0x9f
 7594 0fcf 00000000 		.4byte	0
 7595 0fd3 00000000 		.4byte	0
 7596              	.LLST80:
 7597 0fd7 12000000 		.4byte	.LVL287
 7598 0fdb 1F000000 		.4byte	.LVL289-1
 7599 0fdf 0100     		.2byte	0x1
 7600 0fe1 53       		.byte	0x53
 7601 0fe2 40000000 		.4byte	.LVL293
 7602 0fe6 42000000 		.4byte	.LVL294
 7603 0fea 0100     		.2byte	0x1
 7604 0fec 53       		.byte	0x53
 7605 0fed 00000000 		.4byte	0
 7606 0ff1 00000000 		.4byte	0
 7607              	.LLST81:
 7608 0ff5 00000000 		.4byte	.LVL317
 7609 0ff9 0D000000 		.4byte	.LVL319-1
 7610 0ffd 0100     		.2byte	0x1
 7611 0fff 50       		.byte	0x50
 7612 1000 0D000000 		.4byte	.LVL319-1
 7613 1004 4A000000 		.4byte	.LVL326
 7614 1008 0100     		.2byte	0x1
 7615 100a 54       		.byte	0x54
 7616 100b 4A000000 		.4byte	.LVL326
 7617 100f 4C000000 		.4byte	.LVL327
 7618 1013 0400     		.2byte	0x4
 7619 1015 F3       		.byte	0xf3
 7620 1016 01       		.uleb128 0x1
 7621 1017 50       		.byte	0x50
 7622 1018 9F       		.byte	0x9f
 7623 1019 4C000000 		.4byte	.LVL327
 7624 101d 56000000 		.4byte	.LVL328
 7625 1021 0100     		.2byte	0x1
 7626 1023 54       		.byte	0x54
 7627 1024 56000000 		.4byte	.LVL328
 7628 1028 58000000 		.4byte	.LVL329
 7629 102c 0400     		.2byte	0x4
 7630 102e F3       		.byte	0xf3
 7631 102f 01       		.uleb128 0x1
 7632 1030 50       		.byte	0x50
 7633 1031 9F       		.byte	0x9f
 7634 1032 58000000 		.4byte	.LVL329
 7635 1036 5A000000 		.4byte	.LVL330
 7636 103a 0100     		.2byte	0x1
 7637 103c 54       		.byte	0x54
 7638 103d 5A000000 		.4byte	.LVL330
 7639 1041 5C000000 		.4byte	.LVL331
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 189


 7640 1045 0400     		.2byte	0x4
 7641 1047 F3       		.byte	0xf3
 7642 1048 01       		.uleb128 0x1
 7643 1049 50       		.byte	0x50
 7644 104a 9F       		.byte	0x9f
 7645 104b 5C000000 		.4byte	.LVL331
 7646 104f 5E000000 		.4byte	.LVL332
 7647 1053 0100     		.2byte	0x1
 7648 1055 54       		.byte	0x54
 7649 1056 5E000000 		.4byte	.LVL332
 7650 105a 60000000 		.4byte	.LVL333
 7651 105e 0400     		.2byte	0x4
 7652 1060 F3       		.byte	0xf3
 7653 1061 01       		.uleb128 0x1
 7654 1062 50       		.byte	0x50
 7655 1063 9F       		.byte	0x9f
 7656 1064 60000000 		.4byte	.LVL333
 7657 1068 62000000 		.4byte	.LVL334
 7658 106c 0100     		.2byte	0x1
 7659 106e 54       		.byte	0x54
 7660 106f 62000000 		.4byte	.LVL334
 7661 1073 64000000 		.4byte	.LVL335
 7662 1077 0400     		.2byte	0x4
 7663 1079 F3       		.byte	0xf3
 7664 107a 01       		.uleb128 0x1
 7665 107b 50       		.byte	0x50
 7666 107c 9F       		.byte	0x9f
 7667 107d 64000000 		.4byte	.LVL335
 7668 1081 66000000 		.4byte	.LVL336
 7669 1085 0100     		.2byte	0x1
 7670 1087 54       		.byte	0x54
 7671 1088 66000000 		.4byte	.LVL336
 7672 108c 72000000 		.4byte	.LFE46
 7673 1090 0400     		.2byte	0x4
 7674 1092 F3       		.byte	0xf3
 7675 1093 01       		.uleb128 0x1
 7676 1094 50       		.byte	0x50
 7677 1095 9F       		.byte	0x9f
 7678 1096 00000000 		.4byte	0
 7679 109a 00000000 		.4byte	0
 7680              	.LLST82:
 7681 109e 00000000 		.4byte	.LVL317
 7682 10a2 0D000000 		.4byte	.LVL319-1
 7683 10a6 0100     		.2byte	0x1
 7684 10a8 51       		.byte	0x51
 7685 10a9 0D000000 		.4byte	.LVL319-1
 7686 10ad 70000000 		.4byte	.LVL338
 7687 10b1 0200     		.2byte	0x2
 7688 10b3 7D       		.byte	0x7d
 7689 10b4 00       		.sleb128 0
 7690 10b5 70000000 		.4byte	.LVL338
 7691 10b9 72000000 		.4byte	.LFE46
 7692 10bd 0200     		.2byte	0x2
 7693 10bf 91       		.byte	0x91
 7694 10c0 60       		.sleb128 -32
 7695 10c1 00000000 		.4byte	0
 7696 10c5 00000000 		.4byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 190


 7697              	.LLST83:
 7698 10c9 00000000 		.4byte	.LVL317
 7699 10cd 0D000000 		.4byte	.LVL319-1
 7700 10d1 0100     		.2byte	0x1
 7701 10d3 52       		.byte	0x52
 7702 10d4 0D000000 		.4byte	.LVL319-1
 7703 10d8 72000000 		.4byte	.LFE46
 7704 10dc 0200     		.2byte	0x2
 7705 10de 91       		.byte	0x91
 7706 10df 64       		.sleb128 -28
 7707 10e0 00000000 		.4byte	0
 7708 10e4 00000000 		.4byte	0
 7709              	.LLST84:
 7710 10e8 66000000 		.4byte	.LVL336
 7711 10ec 70000000 		.4byte	.LVL339
 7712 10f0 0100     		.2byte	0x1
 7713 10f2 54       		.byte	0x54
 7714 10f3 70000000 		.4byte	.LVL339
 7715 10f7 72000000 		.4byte	.LFE46
 7716 10fb 0100     		.2byte	0x1
 7717 10fd 50       		.byte	0x50
 7718 10fe 00000000 		.4byte	0
 7719 1102 00000000 		.4byte	0
 7720              	.LLST85:
 7721 1106 10000000 		.4byte	.LVL320
 7722 110a 20000000 		.4byte	.LVL323
 7723 110e 0100     		.2byte	0x1
 7724 1110 50       		.byte	0x50
 7725 1111 20000000 		.4byte	.LVL323
 7726 1115 58000000 		.4byte	.LVL329
 7727 1119 0100     		.2byte	0x1
 7728 111b 55       		.byte	0x55
 7729 111c 58000000 		.4byte	.LVL329
 7730 1120 5C000000 		.4byte	.LVL331
 7731 1124 0100     		.2byte	0x1
 7732 1126 50       		.byte	0x50
 7733 1127 5C000000 		.4byte	.LVL331
 7734 112b 70000000 		.4byte	.LVL340
 7735 112f 0100     		.2byte	0x1
 7736 1131 55       		.byte	0x55
 7737 1132 00000000 		.4byte	0
 7738 1136 00000000 		.4byte	0
 7739              	.LLST86:
 7740 113a 0A000000 		.4byte	.LVL318
 7741 113e 0D000000 		.4byte	.LVL319-1
 7742 1142 0100     		.2byte	0x1
 7743 1144 50       		.byte	0x50
 7744 1145 0D000000 		.4byte	.LVL319-1
 7745 1149 4A000000 		.4byte	.LVL326
 7746 114d 0100     		.2byte	0x1
 7747 114f 54       		.byte	0x54
 7748 1150 4A000000 		.4byte	.LVL326
 7749 1154 4C000000 		.4byte	.LVL327
 7750 1158 0400     		.2byte	0x4
 7751 115a F3       		.byte	0xf3
 7752 115b 01       		.uleb128 0x1
 7753 115c 50       		.byte	0x50
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 191


 7754 115d 9F       		.byte	0x9f
 7755 115e 4C000000 		.4byte	.LVL327
 7756 1162 56000000 		.4byte	.LVL328
 7757 1166 0100     		.2byte	0x1
 7758 1168 54       		.byte	0x54
 7759 1169 56000000 		.4byte	.LVL328
 7760 116d 58000000 		.4byte	.LVL329
 7761 1171 0400     		.2byte	0x4
 7762 1173 F3       		.byte	0xf3
 7763 1174 01       		.uleb128 0x1
 7764 1175 50       		.byte	0x50
 7765 1176 9F       		.byte	0x9f
 7766 1177 58000000 		.4byte	.LVL329
 7767 117b 5A000000 		.4byte	.LVL330
 7768 117f 0100     		.2byte	0x1
 7769 1181 54       		.byte	0x54
 7770 1182 5A000000 		.4byte	.LVL330
 7771 1186 5C000000 		.4byte	.LVL331
 7772 118a 0400     		.2byte	0x4
 7773 118c F3       		.byte	0xf3
 7774 118d 01       		.uleb128 0x1
 7775 118e 50       		.byte	0x50
 7776 118f 9F       		.byte	0x9f
 7777 1190 5C000000 		.4byte	.LVL331
 7778 1194 5E000000 		.4byte	.LVL332
 7779 1198 0100     		.2byte	0x1
 7780 119a 54       		.byte	0x54
 7781 119b 5E000000 		.4byte	.LVL332
 7782 119f 60000000 		.4byte	.LVL333
 7783 11a3 0400     		.2byte	0x4
 7784 11a5 F3       		.byte	0xf3
 7785 11a6 01       		.uleb128 0x1
 7786 11a7 50       		.byte	0x50
 7787 11a8 9F       		.byte	0x9f
 7788 11a9 60000000 		.4byte	.LVL333
 7789 11ad 62000000 		.4byte	.LVL334
 7790 11b1 0100     		.2byte	0x1
 7791 11b3 54       		.byte	0x54
 7792 11b4 62000000 		.4byte	.LVL334
 7793 11b8 64000000 		.4byte	.LVL335
 7794 11bc 0400     		.2byte	0x4
 7795 11be F3       		.byte	0xf3
 7796 11bf 01       		.uleb128 0x1
 7797 11c0 50       		.byte	0x50
 7798 11c1 9F       		.byte	0x9f
 7799 11c2 64000000 		.4byte	.LVL335
 7800 11c6 66000000 		.4byte	.LVL336
 7801 11ca 0100     		.2byte	0x1
 7802 11cc 54       		.byte	0x54
 7803 11cd 66000000 		.4byte	.LVL336
 7804 11d1 72000000 		.4byte	.LFE46
 7805 11d5 0400     		.2byte	0x4
 7806 11d7 F3       		.byte	0xf3
 7807 11d8 01       		.uleb128 0x1
 7808 11d9 50       		.byte	0x50
 7809 11da 9F       		.byte	0x9f
 7810 11db 00000000 		.4byte	0
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 192


 7811 11df 00000000 		.4byte	0
 7812              	.LLST87:
 7813 11e3 12000000 		.4byte	.LVL321
 7814 11e7 70000000 		.4byte	.LVL341
 7815 11eb 0100     		.2byte	0x1
 7816 11ed 57       		.byte	0x57
 7817 11ee 00000000 		.4byte	0
 7818 11f2 00000000 		.4byte	0
 7819              	.LLST88:
 7820 11f6 1C000000 		.4byte	.LVL322
 7821 11fa 58000000 		.4byte	.LVL329
 7822 11fe 0100     		.2byte	0x1
 7823 1200 56       		.byte	0x56
 7824 1201 5C000000 		.4byte	.LVL331
 7825 1205 66000000 		.4byte	.LVL336
 7826 1209 0100     		.2byte	0x1
 7827 120b 56       		.byte	0x56
 7828 120c 00000000 		.4byte	0
 7829 1210 00000000 		.4byte	0
 7830              	.LLST89:
 7831 1214 00000000 		.4byte	.LVL342
 7832 1218 09000000 		.4byte	.LVL344-1
 7833 121c 0100     		.2byte	0x1
 7834 121e 50       		.byte	0x50
 7835 121f 09000000 		.4byte	.LVL344-1
 7836 1223 20000000 		.4byte	.LVL350
 7837 1227 0100     		.2byte	0x1
 7838 1229 54       		.byte	0x54
 7839 122a 20000000 		.4byte	.LVL350
 7840 122e 22000000 		.4byte	.LVL351
 7841 1232 0400     		.2byte	0x4
 7842 1234 F3       		.byte	0xf3
 7843 1235 01       		.uleb128 0x1
 7844 1236 50       		.byte	0x50
 7845 1237 9F       		.byte	0x9f
 7846 1238 22000000 		.4byte	.LVL351
 7847 123c 24000000 		.4byte	.LVL352
 7848 1240 0100     		.2byte	0x1
 7849 1242 54       		.byte	0x54
 7850 1243 24000000 		.4byte	.LVL352
 7851 1247 2E000000 		.4byte	.LFE47
 7852 124b 0400     		.2byte	0x4
 7853 124d F3       		.byte	0xf3
 7854 124e 01       		.uleb128 0x1
 7855 124f 50       		.byte	0x50
 7856 1250 9F       		.byte	0x9f
 7857 1251 00000000 		.4byte	0
 7858 1255 00000000 		.4byte	0
 7859              	.LLST90:
 7860 1259 00000000 		.4byte	.LVL342
 7861 125d 09000000 		.4byte	.LVL344-1
 7862 1261 0100     		.2byte	0x1
 7863 1263 51       		.byte	0x51
 7864 1264 09000000 		.4byte	.LVL344-1
 7865 1268 2C000000 		.4byte	.LVL356
 7866 126c 0100     		.2byte	0x1
 7867 126e 56       		.byte	0x56
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 193


 7868 126f 2C000000 		.4byte	.LVL356
 7869 1273 2E000000 		.4byte	.LFE47
 7870 1277 0400     		.2byte	0x4
 7871 1279 F3       		.byte	0xf3
 7872 127a 01       		.uleb128 0x1
 7873 127b 51       		.byte	0x51
 7874 127c 9F       		.byte	0x9f
 7875 127d 00000000 		.4byte	0
 7876 1281 00000000 		.4byte	0
 7877              	.LLST91:
 7878 1285 1E000000 		.4byte	.LVL349
 7879 1289 22000000 		.4byte	.LVL351
 7880 128d 0200     		.2byte	0x2
 7881 128f 31       		.byte	0x31
 7882 1290 9F       		.byte	0x9f
 7883 1291 24000000 		.4byte	.LVL352
 7884 1295 2C000000 		.4byte	.LVL354
 7885 1299 0100     		.2byte	0x1
 7886 129b 54       		.byte	0x54
 7887 129c 2C000000 		.4byte	.LVL354
 7888 12a0 2E000000 		.4byte	.LFE47
 7889 12a4 0100     		.2byte	0x1
 7890 12a6 50       		.byte	0x50
 7891 12a7 00000000 		.4byte	0
 7892 12ab 00000000 		.4byte	0
 7893              	.LLST92:
 7894 12af 0C000000 		.4byte	.LVL345
 7895 12b3 18000000 		.4byte	.LVL347
 7896 12b7 0100     		.2byte	0x1
 7897 12b9 50       		.byte	0x50
 7898 12ba 18000000 		.4byte	.LVL347
 7899 12be 22000000 		.4byte	.LVL351
 7900 12c2 0100     		.2byte	0x1
 7901 12c4 55       		.byte	0x55
 7902 12c5 22000000 		.4byte	.LVL351
 7903 12c9 24000000 		.4byte	.LVL352
 7904 12cd 0100     		.2byte	0x1
 7905 12cf 50       		.byte	0x50
 7906 12d0 24000000 		.4byte	.LVL352
 7907 12d4 2C000000 		.4byte	.LVL355
 7908 12d8 0100     		.2byte	0x1
 7909 12da 55       		.byte	0x55
 7910 12db 00000000 		.4byte	0
 7911 12df 00000000 		.4byte	0
 7912              	.LLST93:
 7913 12e3 14000000 		.4byte	.LVL346
 7914 12e7 22000000 		.4byte	.LVL351
 7915 12eb 0100     		.2byte	0x1
 7916 12ed 57       		.byte	0x57
 7917 12ee 00000000 		.4byte	0
 7918 12f2 00000000 		.4byte	0
 7919              	.LLST94:
 7920 12f6 06000000 		.4byte	.LVL343
 7921 12fa 09000000 		.4byte	.LVL344-1
 7922 12fe 0100     		.2byte	0x1
 7923 1300 50       		.byte	0x50
 7924 1301 09000000 		.4byte	.LVL344-1
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 194


 7925 1305 20000000 		.4byte	.LVL350
 7926 1309 0100     		.2byte	0x1
 7927 130b 54       		.byte	0x54
 7928 130c 20000000 		.4byte	.LVL350
 7929 1310 22000000 		.4byte	.LVL351
 7930 1314 0400     		.2byte	0x4
 7931 1316 F3       		.byte	0xf3
 7932 1317 01       		.uleb128 0x1
 7933 1318 50       		.byte	0x50
 7934 1319 9F       		.byte	0x9f
 7935 131a 22000000 		.4byte	.LVL351
 7936 131e 24000000 		.4byte	.LVL352
 7937 1322 0100     		.2byte	0x1
 7938 1324 54       		.byte	0x54
 7939 1325 24000000 		.4byte	.LVL352
 7940 1329 2E000000 		.4byte	.LFE47
 7941 132d 0400     		.2byte	0x4
 7942 132f F3       		.byte	0xf3
 7943 1330 01       		.uleb128 0x1
 7944 1331 50       		.byte	0x50
 7945 1332 9F       		.byte	0x9f
 7946 1333 00000000 		.4byte	0
 7947 1337 00000000 		.4byte	0
 7948              	.LLST95:
 7949 133b 00000000 		.4byte	.LVL357
 7950 133f 07000000 		.4byte	.LVL358-1
 7951 1343 0100     		.2byte	0x1
 7952 1345 50       		.byte	0x50
 7953 1346 07000000 		.4byte	.LVL358-1
 7954 134a 0A000000 		.4byte	.LVL359
 7955 134e 0100     		.2byte	0x1
 7956 1350 54       		.byte	0x54
 7957 1351 0A000000 		.4byte	.LVL359
 7958 1355 12000000 		.4byte	.LFE48
 7959 1359 0400     		.2byte	0x4
 7960 135b F3       		.byte	0xf3
 7961 135c 01       		.uleb128 0x1
 7962 135d 50       		.byte	0x50
 7963 135e 9F       		.byte	0x9f
 7964 135f 00000000 		.4byte	0
 7965 1363 00000000 		.4byte	0
 7966              	.LLST96:
 7967 1367 0A000000 		.4byte	.LVL359
 7968 136b 10000000 		.4byte	.LVL361
 7969 136f 0100     		.2byte	0x1
 7970 1371 54       		.byte	0x54
 7971 1372 10000000 		.4byte	.LVL361
 7972 1376 12000000 		.4byte	.LFE48
 7973 137a 0100     		.2byte	0x1
 7974 137c 50       		.byte	0x50
 7975 137d 00000000 		.4byte	0
 7976 1381 00000000 		.4byte	0
 7977              	.LLST97:
 7978 1385 00000000 		.4byte	.LVL362
 7979 1389 07000000 		.4byte	.LVL364-1
 7980 138d 0100     		.2byte	0x1
 7981 138f 50       		.byte	0x50
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 195


 7982 1390 07000000 		.4byte	.LVL364-1
 7983 1394 0C000000 		.4byte	.LVL365
 7984 1398 0100     		.2byte	0x1
 7985 139a 54       		.byte	0x54
 7986 139b 0C000000 		.4byte	.LVL365
 7987 139f 16000000 		.4byte	.LFE49
 7988 13a3 0400     		.2byte	0x4
 7989 13a5 F3       		.byte	0xf3
 7990 13a6 01       		.uleb128 0x1
 7991 13a7 50       		.byte	0x50
 7992 13a8 9F       		.byte	0x9f
 7993 13a9 00000000 		.4byte	0
 7994 13ad 00000000 		.4byte	0
 7995              	.LLST98:
 7996 13b1 0E000000 		.4byte	.LVL366
 7997 13b5 14000000 		.4byte	.LVL368
 7998 13b9 0100     		.2byte	0x1
 7999 13bb 54       		.byte	0x54
 8000 13bc 14000000 		.4byte	.LVL368
 8001 13c0 16000000 		.4byte	.LFE49
 8002 13c4 0100     		.2byte	0x1
 8003 13c6 50       		.byte	0x50
 8004 13c7 00000000 		.4byte	0
 8005 13cb 00000000 		.4byte	0
 8006              	.LLST99:
 8007 13cf 04000000 		.4byte	.LVL363
 8008 13d3 07000000 		.4byte	.LVL364-1
 8009 13d7 0100     		.2byte	0x1
 8010 13d9 50       		.byte	0x50
 8011 13da 07000000 		.4byte	.LVL364-1
 8012 13de 0C000000 		.4byte	.LVL365
 8013 13e2 0100     		.2byte	0x1
 8014 13e4 54       		.byte	0x54
 8015 13e5 0C000000 		.4byte	.LVL365
 8016 13e9 16000000 		.4byte	.LFE49
 8017 13ed 0400     		.2byte	0x4
 8018 13ef F3       		.byte	0xf3
 8019 13f0 01       		.uleb128 0x1
 8020 13f1 50       		.byte	0x50
 8021 13f2 9F       		.byte	0x9f
 8022 13f3 00000000 		.4byte	0
 8023 13f7 00000000 		.4byte	0
 8024              	.LLST100:
 8025 13fb 00000000 		.4byte	.LVL369
 8026 13ff 02000000 		.4byte	.LVL370
 8027 1403 0100     		.2byte	0x1
 8028 1405 50       		.byte	0x50
 8029 1406 02000000 		.4byte	.LVL370
 8030 140a 04000000 		.4byte	.LFE50
 8031 140e 0400     		.2byte	0x4
 8032 1410 F3       		.byte	0xf3
 8033 1411 01       		.uleb128 0x1
 8034 1412 50       		.byte	0x50
 8035 1413 9F       		.byte	0x9f
 8036 1414 00000000 		.4byte	0
 8037 1418 00000000 		.4byte	0
 8038              	.LLST101:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 196


 8039 141c 00000000 		.4byte	.LVL371
 8040 1420 08000000 		.4byte	.LVL372
 8041 1424 0100     		.2byte	0x1
 8042 1426 50       		.byte	0x50
 8043 1427 08000000 		.4byte	.LVL372
 8044 142b 0A000000 		.4byte	.LVL373
 8045 142f 0400     		.2byte	0x4
 8046 1431 F3       		.byte	0xf3
 8047 1432 01       		.uleb128 0x1
 8048 1433 50       		.byte	0x50
 8049 1434 9F       		.byte	0x9f
 8050 1435 0A000000 		.4byte	.LVL373
 8051 1439 0C000000 		.4byte	.LVL374
 8052 143d 0100     		.2byte	0x1
 8053 143f 50       		.byte	0x50
 8054 1440 0C000000 		.4byte	.LVL374
 8055 1444 0E000000 		.4byte	.LFE57
 8056 1448 0400     		.2byte	0x4
 8057 144a F3       		.byte	0xf3
 8058 144b 01       		.uleb128 0x1
 8059 144c 50       		.byte	0x50
 8060 144d 9F       		.byte	0x9f
 8061 144e 00000000 		.4byte	0
 8062 1452 00000000 		.4byte	0
 8063              	.LLST102:
 8064 1456 00000000 		.4byte	.LVL375
 8065 145a 0A000000 		.4byte	.LVL376
 8066 145e 0100     		.2byte	0x1
 8067 1460 50       		.byte	0x50
 8068 1461 0A000000 		.4byte	.LVL376
 8069 1465 0C000000 		.4byte	.LVL377
 8070 1469 0400     		.2byte	0x4
 8071 146b F3       		.byte	0xf3
 8072 146c 01       		.uleb128 0x1
 8073 146d 50       		.byte	0x50
 8074 146e 9F       		.byte	0x9f
 8075 146f 0C000000 		.4byte	.LVL377
 8076 1473 0E000000 		.4byte	.LVL378
 8077 1477 0100     		.2byte	0x1
 8078 1479 50       		.byte	0x50
 8079 147a 0E000000 		.4byte	.LVL378
 8080 147e 10000000 		.4byte	.LFE59
 8081 1482 0400     		.2byte	0x4
 8082 1484 F3       		.byte	0xf3
 8083 1485 01       		.uleb128 0x1
 8084 1486 50       		.byte	0x50
 8085 1487 9F       		.byte	0x9f
 8086 1488 00000000 		.4byte	0
 8087 148c 00000000 		.4byte	0
 8088              	.LLST103:
 8089 1490 02000000 		.4byte	.LVL380
 8090 1494 06000000 		.4byte	.LVL381
 8091 1498 0200     		.2byte	0x2
 8092 149a 30       		.byte	0x30
 8093 149b 9F       		.byte	0x9f
 8094 149c 06000000 		.4byte	.LVL381
 8095 14a0 12000000 		.4byte	.LVL382
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 197


 8096 14a4 0100     		.2byte	0x1
 8097 14a6 53       		.byte	0x53
 8098 14a7 1A000000 		.4byte	.LVL383
 8099 14ab 20000000 		.4byte	.LVL385
 8100 14af 0100     		.2byte	0x1
 8101 14b1 53       		.byte	0x53
 8102 14b2 00000000 		.4byte	0
 8103 14b6 00000000 		.4byte	0
 8104              	.LLST104:
 8105 14ba 00000000 		.4byte	.LVL386
 8106 14be 14000000 		.4byte	.LVL389
 8107 14c2 0100     		.2byte	0x1
 8108 14c4 50       		.byte	0x50
 8109 14c5 14000000 		.4byte	.LVL389
 8110 14c9 16000000 		.4byte	.LVL390
 8111 14cd 0400     		.2byte	0x4
 8112 14cf F3       		.byte	0xf3
 8113 14d0 01       		.uleb128 0x1
 8114 14d1 50       		.byte	0x50
 8115 14d2 9F       		.byte	0x9f
 8116 14d3 16000000 		.4byte	.LVL390
 8117 14d7 1E000000 		.4byte	.LVL392
 8118 14db 0100     		.2byte	0x1
 8119 14dd 50       		.byte	0x50
 8120 14de 1E000000 		.4byte	.LVL392
 8121 14e2 24000000 		.4byte	.LFE61
 8122 14e6 0400     		.2byte	0x4
 8123 14e8 F3       		.byte	0xf3
 8124 14e9 01       		.uleb128 0x1
 8125 14ea 50       		.byte	0x50
 8126 14eb 9F       		.byte	0x9f
 8127 14ec 00000000 		.4byte	0
 8128 14f0 00000000 		.4byte	0
 8129              	.LLST105:
 8130 14f4 00000000 		.4byte	.LVL386
 8131 14f8 04000000 		.4byte	.LVL387
 8132 14fc 0200     		.2byte	0x2
 8133 14fe 30       		.byte	0x30
 8134 14ff 9F       		.byte	0x9f
 8135 1500 04000000 		.4byte	.LVL387
 8136 1504 12000000 		.4byte	.LVL388
 8137 1508 0100     		.2byte	0x1
 8138 150a 52       		.byte	0x52
 8139 150b 16000000 		.4byte	.LVL390
 8140 150f 1E000000 		.4byte	.LVL392
 8141 1513 0100     		.2byte	0x1
 8142 1515 52       		.byte	0x52
 8143 1516 00000000 		.4byte	0
 8144 151a 00000000 		.4byte	0
 8145              	.LLST106:
 8146 151e 00000000 		.4byte	.LVL386
 8147 1522 14000000 		.4byte	.LVL389
 8148 1526 0200     		.2byte	0x2
 8149 1528 30       		.byte	0x30
 8150 1529 9F       		.byte	0x9f
 8151 152a 14000000 		.4byte	.LVL389
 8152 152e 16000000 		.4byte	.LVL390
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 198


 8153 1532 0100     		.2byte	0x1
 8154 1534 50       		.byte	0x50
 8155 1535 16000000 		.4byte	.LVL390
 8156 1539 1E000000 		.4byte	.LVL392
 8157 153d 0200     		.2byte	0x2
 8158 153f 30       		.byte	0x30
 8159 1540 9F       		.byte	0x9f
 8160 1541 1E000000 		.4byte	.LVL392
 8161 1545 24000000 		.4byte	.LFE61
 8162 1549 0100     		.2byte	0x1
 8163 154b 50       		.byte	0x50
 8164 154c 00000000 		.4byte	0
 8165 1550 00000000 		.4byte	0
 8166              	.LLST107:
 8167 1554 00000000 		.4byte	.LVL393
 8168 1558 04000000 		.4byte	.LVL394
 8169 155c 0200     		.2byte	0x2
 8170 155e 30       		.byte	0x30
 8171 155f 9F       		.byte	0x9f
 8172 1560 04000000 		.4byte	.LVL394
 8173 1564 12000000 		.4byte	.LVL395
 8174 1568 0100     		.2byte	0x1
 8175 156a 52       		.byte	0x52
 8176 156b 1C000000 		.4byte	.LVL396
 8177 156f 22000000 		.4byte	.LVL398
 8178 1573 0100     		.2byte	0x1
 8179 1575 52       		.byte	0x52
 8180 1576 00000000 		.4byte	0
 8181 157a 00000000 		.4byte	0
 8182              	.LLST108:
 8183 157e 00000000 		.4byte	.LVL399
 8184 1582 07000000 		.4byte	.LVL401-1
 8185 1586 0100     		.2byte	0x1
 8186 1588 50       		.byte	0x50
 8187 1589 07000000 		.4byte	.LVL401-1
 8188 158d 0E000000 		.4byte	.LVL403
 8189 1591 0100     		.2byte	0x1
 8190 1593 54       		.byte	0x54
 8191 1594 0E000000 		.4byte	.LVL403
 8192 1598 10000000 		.4byte	.LFE51
 8193 159c 0400     		.2byte	0x4
 8194 159e F3       		.byte	0xf3
 8195 159f 01       		.uleb128 0x1
 8196 15a0 50       		.byte	0x50
 8197 15a1 9F       		.byte	0x9f
 8198 15a2 00000000 		.4byte	0
 8199 15a6 00000000 		.4byte	0
 8200              	.LLST109:
 8201 15aa 04000000 		.4byte	.LVL400
 8202 15ae 07000000 		.4byte	.LVL401-1
 8203 15b2 0100     		.2byte	0x1
 8204 15b4 50       		.byte	0x50
 8205 15b5 07000000 		.4byte	.LVL401-1
 8206 15b9 0E000000 		.4byte	.LVL403
 8207 15bd 0100     		.2byte	0x1
 8208 15bf 54       		.byte	0x54
 8209 15c0 0E000000 		.4byte	.LVL403
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 199


 8210 15c4 10000000 		.4byte	.LFE51
 8211 15c8 0400     		.2byte	0x4
 8212 15ca F3       		.byte	0xf3
 8213 15cb 01       		.uleb128 0x1
 8214 15cc 50       		.byte	0x50
 8215 15cd 9F       		.byte	0x9f
 8216 15ce 00000000 		.4byte	0
 8217 15d2 00000000 		.4byte	0
 8218              		.section	.debug_aranges,"",%progbits
 8219 0000 0C010000 		.4byte	0x10c
 8220 0004 0200     		.2byte	0x2
 8221 0006 00000000 		.4byte	.Ldebug_info0
 8222 000a 04       		.byte	0x4
 8223 000b 00       		.byte	0
 8224 000c 0000     		.2byte	0
 8225 000e 0000     		.2byte	0
 8226 0010 00000000 		.4byte	.LFB52
 8227 0014 14000000 		.4byte	.LFE52-.LFB52
 8228 0018 00000000 		.4byte	.LFB58
 8229 001c 1E000000 		.4byte	.LFE58-.LFB58
 8230 0020 00000000 		.4byte	.LFB56
 8231 0024 1C000000 		.4byte	.LFE56-.LFB56
 8232 0028 00000000 		.4byte	.LFB53
 8233 002c 82000000 		.4byte	.LFE53-.LFB53
 8234 0030 00000000 		.4byte	.LFB54
 8235 0034 24000000 		.4byte	.LFE54-.LFB54
 8236 0038 00000000 		.4byte	.LFB55
 8237 003c 6E000000 		.4byte	.LFE55-.LFB55
 8238 0040 00000000 		.4byte	.LFB32
 8239 0044 64000000 		.4byte	.LFE32-.LFB32
 8240 0048 00000000 		.4byte	.LFB34
 8241 004c 1C000000 		.4byte	.LFE34-.LFB34
 8242 0050 00000000 		.4byte	.LFB33
 8243 0054 34000000 		.4byte	.LFE33-.LFB33
 8244 0058 00000000 		.4byte	.LFB39
 8245 005c 14000000 		.4byte	.LFE39-.LFB39
 8246 0060 00000000 		.4byte	.LFB40
 8247 0064 EA000000 		.4byte	.LFE40-.LFB40
 8248 0068 00000000 		.4byte	.LFB35
 8249 006c 18000000 		.4byte	.LFE35-.LFB35
 8250 0070 00000000 		.4byte	.LFB36
 8251 0074 16000000 		.4byte	.LFE36-.LFB36
 8252 0078 00000000 		.4byte	.LFB37
 8253 007c 2E000000 		.4byte	.LFE37-.LFB37
 8254 0080 00000000 		.4byte	.LFB41
 8255 0084 78000000 		.4byte	.LFE41-.LFB41
 8256 0088 00000000 		.4byte	.LFB42
 8257 008c 64000000 		.4byte	.LFE42-.LFB42
 8258 0090 00000000 		.4byte	.LFB43
 8259 0094 E4000000 		.4byte	.LFE43-.LFB43
 8260 0098 00000000 		.4byte	.LFB44
 8261 009c 1C010000 		.4byte	.LFE44-.LFB44
 8262 00a0 00000000 		.4byte	.LFB38
 8263 00a4 2E000000 		.4byte	.LFE38-.LFB38
 8264 00a8 00000000 		.4byte	.LFB45
 8265 00ac E4000000 		.4byte	.LFE45-.LFB45
 8266 00b0 00000000 		.4byte	.LFB46
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 200


 8267 00b4 72000000 		.4byte	.LFE46-.LFB46
 8268 00b8 00000000 		.4byte	.LFB47
 8269 00bc 2E000000 		.4byte	.LFE47-.LFB47
 8270 00c0 00000000 		.4byte	.LFB48
 8271 00c4 12000000 		.4byte	.LFE48-.LFB48
 8272 00c8 00000000 		.4byte	.LFB49
 8273 00cc 16000000 		.4byte	.LFE49-.LFB49
 8274 00d0 00000000 		.4byte	.LFB50
 8275 00d4 04000000 		.4byte	.LFE50-.LFB50
 8276 00d8 00000000 		.4byte	.LFB57
 8277 00dc 0E000000 		.4byte	.LFE57-.LFB57
 8278 00e0 00000000 		.4byte	.LFB59
 8279 00e4 10000000 		.4byte	.LFE59-.LFB59
 8280 00e8 00000000 		.4byte	.LFB60
 8281 00ec 28000000 		.4byte	.LFE60-.LFB60
 8282 00f0 00000000 		.4byte	.LFB61
 8283 00f4 24000000 		.4byte	.LFE61-.LFB61
 8284 00f8 00000000 		.4byte	.LFB62
 8285 00fc 28000000 		.4byte	.LFE62-.LFB62
 8286 0100 00000000 		.4byte	.LFB51
 8287 0104 10000000 		.4byte	.LFE51-.LFB51
 8288 0108 00000000 		.4byte	0
 8289 010c 00000000 		.4byte	0
 8290              		.section	.debug_ranges,"",%progbits
 8291              	.Ldebug_ranges0:
 8292 0000 1E000000 		.4byte	.LBB4
 8293 0004 5E000000 		.4byte	.LBE4
 8294 0008 62000000 		.4byte	.LBB5
 8295 000c 6C000000 		.4byte	.LBE5
 8296 0010 00000000 		.4byte	0
 8297 0014 00000000 		.4byte	0
 8298 0018 14000000 		.4byte	.LBB7
 8299 001c 4C000000 		.4byte	.LBE7
 8300 0020 50000000 		.4byte	.LBB8
 8301 0024 5A000000 		.4byte	.LBE8
 8302 0028 00000000 		.4byte	0
 8303 002c 00000000 		.4byte	0
 8304 0030 16000000 		.4byte	.LBB14
 8305 0034 58000000 		.4byte	.LBE14
 8306 0038 5C000000 		.4byte	.LBB15
 8307 003c 66000000 		.4byte	.LBE15
 8308 0040 00000000 		.4byte	0
 8309 0044 00000000 		.4byte	0
 8310 0048 00000000 		.4byte	.LFB52
 8311 004c 14000000 		.4byte	.LFE52
 8312 0050 00000000 		.4byte	.LFB58
 8313 0054 1E000000 		.4byte	.LFE58
 8314 0058 00000000 		.4byte	.LFB56
 8315 005c 1C000000 		.4byte	.LFE56
 8316 0060 00000000 		.4byte	.LFB53
 8317 0064 82000000 		.4byte	.LFE53
 8318 0068 00000000 		.4byte	.LFB54
 8319 006c 24000000 		.4byte	.LFE54
 8320 0070 00000000 		.4byte	.LFB55
 8321 0074 6E000000 		.4byte	.LFE55
 8322 0078 00000000 		.4byte	.LFB32
 8323 007c 64000000 		.4byte	.LFE32
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 201


 8324 0080 00000000 		.4byte	.LFB34
 8325 0084 1C000000 		.4byte	.LFE34
 8326 0088 00000000 		.4byte	.LFB33
 8327 008c 34000000 		.4byte	.LFE33
 8328 0090 00000000 		.4byte	.LFB39
 8329 0094 14000000 		.4byte	.LFE39
 8330 0098 00000000 		.4byte	.LFB40
 8331 009c EA000000 		.4byte	.LFE40
 8332 00a0 00000000 		.4byte	.LFB35
 8333 00a4 18000000 		.4byte	.LFE35
 8334 00a8 00000000 		.4byte	.LFB36
 8335 00ac 16000000 		.4byte	.LFE36
 8336 00b0 00000000 		.4byte	.LFB37
 8337 00b4 2E000000 		.4byte	.LFE37
 8338 00b8 00000000 		.4byte	.LFB41
 8339 00bc 78000000 		.4byte	.LFE41
 8340 00c0 00000000 		.4byte	.LFB42
 8341 00c4 64000000 		.4byte	.LFE42
 8342 00c8 00000000 		.4byte	.LFB43
 8343 00cc E4000000 		.4byte	.LFE43
 8344 00d0 00000000 		.4byte	.LFB44
 8345 00d4 1C010000 		.4byte	.LFE44
 8346 00d8 00000000 		.4byte	.LFB38
 8347 00dc 2E000000 		.4byte	.LFE38
 8348 00e0 00000000 		.4byte	.LFB45
 8349 00e4 E4000000 		.4byte	.LFE45
 8350 00e8 00000000 		.4byte	.LFB46
 8351 00ec 72000000 		.4byte	.LFE46
 8352 00f0 00000000 		.4byte	.LFB47
 8353 00f4 2E000000 		.4byte	.LFE47
 8354 00f8 00000000 		.4byte	.LFB48
 8355 00fc 12000000 		.4byte	.LFE48
 8356 0100 00000000 		.4byte	.LFB49
 8357 0104 16000000 		.4byte	.LFE49
 8358 0108 00000000 		.4byte	.LFB50
 8359 010c 04000000 		.4byte	.LFE50
 8360 0110 00000000 		.4byte	.LFB57
 8361 0114 0E000000 		.4byte	.LFE57
 8362 0118 00000000 		.4byte	.LFB59
 8363 011c 10000000 		.4byte	.LFE59
 8364 0120 00000000 		.4byte	.LFB60
 8365 0124 28000000 		.4byte	.LFE60
 8366 0128 00000000 		.4byte	.LFB61
 8367 012c 24000000 		.4byte	.LFE61
 8368 0130 00000000 		.4byte	.LFB62
 8369 0134 28000000 		.4byte	.LFE62
 8370 0138 00000000 		.4byte	.LFB51
 8371 013c 10000000 		.4byte	.LFE51
 8372 0140 00000000 		.4byte	0
 8373 0144 00000000 		.4byte	0
 8374              		.section	.debug_line,"",%progbits
 8375              	.Ldebug_line0:
 8376 0000 9B060000 		.section	.debug_str,"MS",%progbits,1
 8376      02002002 
 8376      00000201 
 8376      FB0E0D00 
 8376      01010101 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 202


 8377              	.LASF34:
 8378 0000 75784E75 		.ascii	"uxNumberOfItems\000"
 8378      6D626572 
 8378      4F664974 
 8378      656D7300 
 8379              	.LASF127:
 8380 0010 76506F72 		.ascii	"vPortExitCritical\000"
 8380      74457869 
 8380      74437269 
 8380      74696361 
 8380      6C00
 8381              	.LASF131:
 8382 0022 76506F72 		.ascii	"vPortYield\000"
 8382      74596965 
 8382      6C6400
 8383              	.LASF105:
 8384 002d 78517565 		.ascii	"xQueueReceive\000"
 8384      75655265 
 8384      63656976 
 8384      6500
 8385              	.LASF113:
 8386 003b 78517565 		.ascii	"xQueueReceiveFromISR\000"
 8386      75655265 
 8386      63656976 
 8386      6546726F 
 8386      6D495352 
 8387              	.LASF50:
 8388 0050 78546173 		.ascii	"xTasksWaitingToReceive\000"
 8388      6B735761 
 8388      6974696E 
 8388      67546F52 
 8388      65636569 
 8389              	.LASF102:
 8390 0067 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 8390      67686572 
 8390      5072696F 
 8390      72697479 
 8390      5461736B 
 8391              	.LASF100:
 8392 0081 70784D75 		.ascii	"pxMutex\000"
 8392      74657800 
 8393              	.LASF106:
 8394 0089 78517565 		.ascii	"xQueueSemaphoreTake\000"
 8394      75655365 
 8394      6D617068 
 8394      6F726554 
 8394      616B6500 
 8395              	.LASF0:
 8396 009d 756E7369 		.ascii	"unsigned int\000"
 8396      676E6564 
 8396      20696E74 
 8396      00
 8397              	.LASF35:
 8398 00aa 7078496E 		.ascii	"pxIndex\000"
 8398      64657800 
 8399              	.LASF38:
 8400 00b2 7854494D 		.ascii	"xTIME_OUT\000"
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 203


 8400      455F4F55 
 8400      5400
 8401              	.LASF81:
 8402 00bc 70784E65 		.ascii	"pxNewQueue\000"
 8402      77517565 
 8402      756500
 8403              	.LASF30:
 8404 00c7 784C4953 		.ascii	"xLIST_ITEM\000"
 8404      545F4954 
 8404      454D00
 8405              	.LASF58:
 8406 00d2 51554555 		.ascii	"QUEUE_REGISTRY_ITEM\000"
 8406      455F5245 
 8406      47495354 
 8406      52595F49 
 8406      54454D00 
 8407              	.LASF49:
 8408 00e6 78546173 		.ascii	"xTasksWaitingToSend\000"
 8408      6B735761 
 8408      6974696E 
 8408      67546F53 
 8408      656E6400 
 8409              	.LASF117:
 8410 00fa 75785175 		.ascii	"uxQueueSpacesAvailable\000"
 8410      65756553 
 8410      70616365 
 8410      73417661 
 8410      696C6162 
 8411              	.LASF55:
 8412 0111 6354784C 		.ascii	"cTxLock\000"
 8412      6F636B00 
 8413              	.LASF39:
 8414 0119 784F7665 		.ascii	"xOverflowCount\000"
 8414      72666C6F 
 8414      77436F75 
 8414      6E7400
 8415              	.LASF126:
 8416 0128 76506F72 		.ascii	"vPortEnterCritical\000"
 8416      74456E74 
 8416      65724372 
 8416      69746963 
 8416      616C00
 8417              	.LASF57:
 8418 013b 51756575 		.ascii	"Queue_t\000"
 8418      655F7400 
 8419              	.LASF90:
 8420 0143 78436F70 		.ascii	"xCopyPosition\000"
 8420      79506F73 
 8420      6974696F 
 8420      6E00
 8421              	.LASF116:
 8422 0151 75785265 		.ascii	"uxReturn\000"
 8422      7475726E 
 8422      00
 8423              	.LASF62:
 8424 015a 51756575 		.ascii	"QueueRegistryItem_t\000"
 8424      65526567 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 204


 8424      69737472 
 8424      79497465 
 8424      6D5F7400 
 8425              	.LASF125:
 8426 016e 76517565 		.ascii	"vQueueDelete\000"
 8426      75654465 
 8426      6C657465 
 8426      00
 8427              	.LASF43:
 8428 017b 70635265 		.ascii	"pcReadFrom\000"
 8428      61644672 
 8428      6F6D00
 8429              	.LASF124:
 8430 0186 76517565 		.ascii	"vQueueUnregisterQueue\000"
 8430      7565556E 
 8430      72656769 
 8430      73746572 
 8430      51756575 
 8431              	.LASF103:
 8432 019c 75785361 		.ascii	"uxSavedInterruptStatus\000"
 8432      76656449 
 8432      6E746572 
 8432      72757074 
 8432      53746174 
 8433              	.LASF77:
 8434 01b3 70727649 		.ascii	"prvInitialiseNewQueue\000"
 8434      6E697469 
 8434      616C6973 
 8434      654E6577 
 8434      51756575 
 8435              	.LASF18:
 8436 01c9 75696E74 		.ascii	"uint32_t\000"
 8436      33325F74 
 8436      00
 8437              	.LASF16:
 8438 01d2 696E7438 		.ascii	"int8_t\000"
 8438      5F7400
 8439              	.LASF97:
 8440 01d9 75784D75 		.ascii	"uxMutexSize\000"
 8440      74657853 
 8440      697A6500 
 8441              	.LASF92:
 8442 01e5 78596965 		.ascii	"xYieldRequired\000"
 8442      6C645265 
 8442      71756972 
 8442      656400
 8443              	.LASF75:
 8444 01f4 78517565 		.ascii	"xQueue\000"
 8444      756500
 8445              	.LASF19:
 8446 01fb 666C6F61 		.ascii	"float\000"
 8446      7400
 8447              	.LASF45:
 8448 0201 51756575 		.ascii	"QueueDefinition\000"
 8448      65446566 
 8448      696E6974 
 8448      696F6E00 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 205


 8449              	.LASF13:
 8450 0211 6C6F6E67 		.ascii	"long long unsigned int\000"
 8450      206C6F6E 
 8450      6720756E 
 8450      7369676E 
 8450      65642069 
 8451              	.LASF147:
 8452 0228 2E2E5C46 		.ascii	"..\\FreeRTOS10\\queue.c\000"
 8452      72656552 
 8452      544F5331 
 8452      305C7175 
 8452      6575652E 
 8453              	.LASF68:
 8454 023e 70727649 		.ascii	"prvIsQueueEmpty\000"
 8454      73517565 
 8454      7565456D 
 8454      70747900 
 8455              	.LASF72:
 8456 024e 70764275 		.ascii	"pvBuffer\000"
 8456      66666572 
 8456      00
 8457              	.LASF63:
 8458 0257 70727647 		.ascii	"prvGetDisinheritPriorityAfterTimeout\000"
 8458      65744469 
 8458      73696E68 
 8458      65726974 
 8458      5072696F 
 8459              	.LASF26:
 8460 027c 70785072 		.ascii	"pxPrevious\000"
 8460      6576696F 
 8460      757300
 8461              	.LASF51:
 8462 0287 75784D65 		.ascii	"uxMessagesWaiting\000"
 8462      73736167 
 8462      65735761 
 8462      6974696E 
 8462      6700
 8463              	.LASF133:
 8464 0299 7076506F 		.ascii	"pvPortMalloc\000"
 8464      72744D61 
 8464      6C6C6F63 
 8464      00
 8465              	.LASF135:
 8466 02a6 76546173 		.ascii	"vTaskSuspendAll\000"
 8466      6B537573 
 8466      70656E64 
 8466      416C6C00 
 8467              	.LASF111:
 8468 02b6 78517565 		.ascii	"xQueuePeek\000"
 8468      75655065 
 8468      656B00
 8469              	.LASF146:
 8470 02c1 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 8470      43313120 
 8470      352E342E 
 8470      31203230 
 8470      31363036 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 206


 8471 02f4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 8471      20726576 
 8471      6973696F 
 8471      6E203233 
 8471      37373135 
 8472 0327 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 8472      66756E63 
 8472      74696F6E 
 8472      2D736563 
 8472      74696F6E 
 8473              	.LASF91:
 8474 034f 78456E74 		.ascii	"xEntryTimeSet\000"
 8474      72795469 
 8474      6D655365 
 8474      7400
 8475              	.LASF3:
 8476 035d 73697A65 		.ascii	"size_t\000"
 8476      5F7400
 8477              	.LASF93:
 8478 0364 7854696D 		.ascii	"xTimeOut\000"
 8478      654F7574 
 8478      00
 8479              	.LASF60:
 8480 036d 7848616E 		.ascii	"xHandle\000"
 8480      646C6500 
 8481              	.LASF59:
 8482 0375 70635175 		.ascii	"pcQueueName\000"
 8482      6575654E 
 8482      616D6500 
 8483              	.LASF31:
 8484 0381 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 8484      495F4C49 
 8484      53545F49 
 8484      54454D00 
 8485              	.LASF33:
 8486 0391 784C4953 		.ascii	"xLIST\000"
 8486      5400
 8487              	.LASF101:
 8488 0397 78517565 		.ascii	"xQueueGenericSendFromISR\000"
 8488      75654765 
 8488      6E657269 
 8488      6353656E 
 8488      6446726F 
 8489              	.LASF69:
 8490 03b0 70727643 		.ascii	"prvCopyDataToQueue\000"
 8490      6F707944 
 8490      61746154 
 8490      6F517565 
 8490      756500
 8491              	.LASF88:
 8492 03c3 78517565 		.ascii	"xQueueGenericSend\000"
 8492      75654765 
 8492      6E657269 
 8492      6353656E 
 8492      6400
 8493              	.LASF137:
 8494 03d5 76546173 		.ascii	"vTaskPlaceOnEventList\000"
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 207


 8494      6B506C61 
 8494      63654F6E 
 8494      4576656E 
 8494      744C6973 
 8495              	.LASF142:
 8496 03eb 70765461 		.ascii	"pvTaskIncrementMutexHeldCount\000"
 8496      736B496E 
 8496      6372656D 
 8496      656E744D 
 8496      75746578 
 8497              	.LASF53:
 8498 0409 75784974 		.ascii	"uxItemSize\000"
 8498      656D5369 
 8498      7A6500
 8499              	.LASF87:
 8500 0414 7578496E 		.ascii	"uxInitialCount\000"
 8500      69746961 
 8500      6C436F75 
 8500      6E7400
 8501              	.LASF128:
 8502 0423 78546173 		.ascii	"xTaskPriorityDisinherit\000"
 8502      6B507269 
 8502      6F726974 
 8502      79446973 
 8502      696E6865 
 8503              	.LASF96:
 8504 043b 75784D75 		.ascii	"uxMutexLength\000"
 8504      7465784C 
 8504      656E6774 
 8504      6800
 8505              	.LASF15:
 8506 0449 63686172 		.ascii	"char\000"
 8506      00
 8507              	.LASF29:
 8508 044e 4C697374 		.ascii	"ListItem_t\000"
 8508      4974656D 
 8508      5F7400
 8509              	.LASF64:
 8510 0459 70727649 		.ascii	"prvIsQueueFull\000"
 8510      73517565 
 8510      75654675 
 8510      6C6C00
 8511              	.LASF22:
 8512 0468 55426173 		.ascii	"UBaseType_t\000"
 8512      65547970 
 8512      655F7400 
 8513              	.LASF104:
 8514 0474 78517565 		.ascii	"xQueueGiveFromISR\000"
 8514      75654769 
 8514      76654672 
 8514      6F6D4953 
 8514      5200
 8515              	.LASF149:
 8516 0486 78517565 		.ascii	"xQueueRegistry\000"
 8516      75655265 
 8516      67697374 
 8516      727900
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 208


 8517              	.LASF42:
 8518 0495 51756575 		.ascii	"QueueHandle_t\000"
 8518      6548616E 
 8518      646C655F 
 8518      7400
 8519              	.LASF36:
 8520 04a3 784C6973 		.ascii	"xListEnd\000"
 8520      74456E64 
 8520      00
 8521              	.LASF118:
 8522 04ac 75785175 		.ascii	"uxQueueMessagesWaitingFromISR\000"
 8522      6575654D 
 8522      65737361 
 8522      67657357 
 8522      61697469 
 8523              	.LASF32:
 8524 04ca 4D696E69 		.ascii	"MiniListItem_t\000"
 8524      4C697374 
 8524      4974656D 
 8524      5F7400
 8525              	.LASF17:
 8526 04d9 75696E74 		.ascii	"uint8_t\000"
 8526      385F7400 
 8527              	.LASF61:
 8528 04e1 78517565 		.ascii	"xQueueRegistryItem\000"
 8528      75655265 
 8528      67697374 
 8528      72794974 
 8528      656D00
 8529              	.LASF83:
 8530 04f4 78517565 		.ascii	"xQueueGenericCreate\000"
 8530      75654765 
 8530      6E657269 
 8530      63437265 
 8530      61746500 
 8531              	.LASF95:
 8532 0508 78517565 		.ascii	"xQueueCreateMutex\000"
 8532      75654372 
 8532      65617465 
 8532      4D757465 
 8532      7800
 8533              	.LASF1:
 8534 051a 6C6F6E67 		.ascii	"long long int\000"
 8534      206C6F6E 
 8534      6720696E 
 8534      7400
 8535              	.LASF94:
 8536 0528 70727649 		.ascii	"prvInitialiseMutex\000"
 8536      6E697469 
 8536      616C6973 
 8536      654D7574 
 8536      657800
 8537              	.LASF21:
 8538 053b 42617365 		.ascii	"BaseType_t\000"
 8538      54797065 
 8538      5F7400
 8539              	.LASF79:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 209


 8540 0546 70756351 		.ascii	"pucQueueStorage\000"
 8540      75657565 
 8540      53746F72 
 8540      61676500 
 8541              	.LASF99:
 8542 0556 784D7574 		.ascii	"xMutex\000"
 8542      657800
 8543              	.LASF148:
 8544 055d 433A5C55 		.ascii	"C:\\Users\\Xwx47\\Documents\\Creator\\FreeRTOS_49-4"
 8544      73657273 
 8544      5C587778 
 8544      34375C44 
 8544      6F63756D 
 8545 058b 3278785C 		.ascii	"2xx\\UART_MessageBuffer_FreeRTOS10.cydsn\000"
 8545      55415254 
 8545      5F4D6573 
 8545      73616765 
 8545      42756666 
 8546              	.LASF40:
 8547 05b3 7854696D 		.ascii	"xTimeOnEntering\000"
 8547      654F6E45 
 8547      6E746572 
 8547      696E6700 
 8548              	.LASF123:
 8549 05c3 76517565 		.ascii	"vQueueAddToRegistry\000"
 8549      75654164 
 8549      64546F52 
 8549      65676973 
 8549      74727900 
 8550              	.LASF25:
 8551 05d7 70784E65 		.ascii	"pxNext\000"
 8551      787400
 8552              	.LASF76:
 8553 05de 784E6577 		.ascii	"xNewQueue\000"
 8553      51756575 
 8553      6500
 8554              	.LASF86:
 8555 05e8 75784D61 		.ascii	"uxMaxCount\000"
 8555      78436F75 
 8555      6E7400
 8556              	.LASF41:
 8557 05f3 54696D65 		.ascii	"TimeOut_t\000"
 8557      4F75745F 
 8557      7400
 8558              	.LASF134:
 8559 05fd 76546173 		.ascii	"vTaskInternalSetTimeOutState\000"
 8559      6B496E74 
 8559      65726E61 
 8559      6C536574 
 8559      54696D65 
 8560              	.LASF112:
 8561 061a 70634F72 		.ascii	"pcOriginalReadPosition\000"
 8561      6967696E 
 8561      616C5265 
 8561      6164506F 
 8561      73697469 
 8562              	.LASF66:
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 210


 8563 0631 75784869 		.ascii	"uxHighestPriorityOfWaitingTasks\000"
 8563      67686573 
 8563      74507269 
 8563      6F726974 
 8563      794F6657 
 8564              	.LASF80:
 8565 0651 75635175 		.ascii	"ucQueueType\000"
 8565      65756554 
 8565      79706500 
 8566              	.LASF37:
 8567 065d 4C697374 		.ascii	"List_t\000"
 8567      5F7400
 8568              	.LASF108:
 8569 0664 75785365 		.ascii	"uxSemaphoreCount\000"
 8569      6D617068 
 8569      6F726543 
 8569      6F756E74 
 8569      00
 8570              	.LASF48:
 8571 0675 70635772 		.ascii	"pcWriteTo\000"
 8571      69746554 
 8571      6F00
 8572              	.LASF23:
 8573 067f 5469636B 		.ascii	"TickType_t\000"
 8573      54797065 
 8573      5F7400
 8574              	.LASF4:
 8575 068a 5F5F696E 		.ascii	"__int8_t\000"
 8575      74385F74 
 8575      00
 8576              	.LASF78:
 8577 0693 75785175 		.ascii	"uxQueueLength\000"
 8577      6575654C 
 8577      656E6774 
 8577      6800
 8578              	.LASF2:
 8579 06a1 6C6F6E67 		.ascii	"long double\000"
 8579      20646F75 
 8579      626C6500 
 8580              	.LASF107:
 8581 06ad 78496E68 		.ascii	"xInheritanceOccurred\000"
 8581      65726974 
 8581      616E6365 
 8581      4F636375 
 8581      72726564 
 8582              	.LASF110:
 8583 06c2 78517565 		.ascii	"xQueueTakeMutexRecursive\000"
 8583      75655461 
 8583      6B654D75 
 8583      74657852 
 8583      65637572 
 8584              	.LASF28:
 8585 06db 7076436F 		.ascii	"pvContainer\000"
 8585      6E746169 
 8585      6E657200 
 8586              	.LASF121:
 8587 06e7 70635175 		.ascii	"pcQueueGetName\000"
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 211


 8587      65756547 
 8587      65744E61 
 8587      6D6500
 8588              	.LASF122:
 8589 06f6 70635265 		.ascii	"pcReturn\000"
 8589      7475726E 
 8589      00
 8590              	.LASF52:
 8591 06ff 75784C65 		.ascii	"uxLength\000"
 8591      6E677468 
 8591      00
 8592              	.LASF8:
 8593 0708 73686F72 		.ascii	"short int\000"
 8593      7420696E 
 8593      7400
 8594              	.LASF24:
 8595 0712 78497465 		.ascii	"xItemValue\000"
 8595      6D56616C 
 8595      756500
 8596              	.LASF10:
 8597 071d 6C6F6E67 		.ascii	"long int\000"
 8597      20696E74 
 8597      00
 8598              	.LASF84:
 8599 0726 78517565 		.ascii	"xQueueSizeInBytes\000"
 8599      75655369 
 8599      7A65496E 
 8599      42797465 
 8599      7300
 8600              	.LASF138:
 8601 0738 78546173 		.ascii	"xTaskResumeAll\000"
 8601      6B526573 
 8601      756D6541 
 8601      6C6C00
 8602              	.LASF70:
 8603 0747 70764974 		.ascii	"pvItemToQueue\000"
 8603      656D546F 
 8603      51756575 
 8603      6500
 8604              	.LASF136:
 8605 0755 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 8605      6B436865 
 8605      636B466F 
 8605      7254696D 
 8605      654F7574 
 8606              	.LASF145:
 8607 076a 76506F72 		.ascii	"vPortFree\000"
 8607      74467265 
 8607      6500
 8608              	.LASF120:
 8609 0774 78517565 		.ascii	"xQueueIsQueueFullFromISR\000"
 8609      75654973 
 8609      51756575 
 8609      6546756C 
 8609      6C46726F 
 8610              	.LASF115:
 8611 078d 75785175 		.ascii	"uxQueueMessagesWaiting\000"
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 212


 8611      6575654D 
 8611      65737361 
 8611      67657357 
 8611      61697469 
 8612              	.LASF47:
 8613 07a4 70635461 		.ascii	"pcTail\000"
 8613      696C00
 8614              	.LASF6:
 8615 07ab 5F5F7569 		.ascii	"__uint8_t\000"
 8615      6E74385F 
 8615      7400
 8616              	.LASF65:
 8617 07b5 70785175 		.ascii	"pxQueue\000"
 8617      65756500 
 8618              	.LASF67:
 8619 07bd 78526574 		.ascii	"xReturn\000"
 8619      75726E00 
 8620              	.LASF14:
 8621 07c5 73697A65 		.ascii	"sizetype\000"
 8621      74797065 
 8621      00
 8622              	.LASF130:
 8623 07ce 76546173 		.ascii	"vTaskMissedYield\000"
 8623      6B4D6973 
 8623      73656459 
 8623      69656C64 
 8623      00
 8624              	.LASF12:
 8625 07df 6C6F6E67 		.ascii	"long unsigned int\000"
 8625      20756E73 
 8625      69676E65 
 8625      6420696E 
 8625      7400
 8626              	.LASF144:
 8627 07f1 78546173 		.ascii	"xTaskPriorityInherit\000"
 8627      6B507269 
 8627      6F726974 
 8627      79496E68 
 8627      65726974 
 8628              	.LASF44:
 8629 0806 75785265 		.ascii	"uxRecursiveCallCount\000"
 8629      63757273 
 8629      69766543 
 8629      616C6C43 
 8629      6F756E74 
 8630              	.LASF114:
 8631 081b 78517565 		.ascii	"xQueuePeekFromISR\000"
 8631      75655065 
 8631      656B4672 
 8631      6F6D4953 
 8631      5200
 8632              	.LASF109:
 8633 082d 75784869 		.ascii	"uxHighestWaitingPriority\000"
 8633      67686573 
 8633      74576169 
 8633      74696E67 
 8633      5072696F 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 213


 8634              	.LASF7:
 8635 0846 756E7369 		.ascii	"unsigned char\000"
 8635      676E6564 
 8635      20636861 
 8635      7200
 8636              	.LASF11:
 8637 0854 5F5F7569 		.ascii	"__uint32_t\000"
 8637      6E743332 
 8637      5F7400
 8638              	.LASF132:
 8639 085f 764C6973 		.ascii	"vListInitialise\000"
 8639      74496E69 
 8639      7469616C 
 8639      69736500 
 8640              	.LASF73:
 8641 086f 70727643 		.ascii	"prvCopyDataFromQueue\000"
 8641      6F707944 
 8641      61746146 
 8641      726F6D51 
 8641      75657565 
 8642              	.LASF143:
 8643 0884 76546173 		.ascii	"vTaskPriorityDisinheritAfterTimeout\000"
 8643      6B507269 
 8643      6F726974 
 8643      79446973 
 8643      696E6865 
 8644              	.LASF89:
 8645 08a8 78546963 		.ascii	"xTicksToWait\000"
 8645      6B73546F 
 8645      57616974 
 8645      00
 8646              	.LASF27:
 8647 08b5 70764F77 		.ascii	"pvOwner\000"
 8647      6E657200 
 8648              	.LASF141:
 8649 08bd 76436C65 		.ascii	"vClearInterruptMaskFromISR\000"
 8649      6172496E 
 8649      74657272 
 8649      7570744D 
 8649      61736B46 
 8650              	.LASF139:
 8651 08d8 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 8651      6B476574 
 8651      43757272 
 8651      656E7454 
 8651      61736B48 
 8652              	.LASF46:
 8653 08f2 70634865 		.ascii	"pcHead\000"
 8653      616400
 8654              	.LASF98:
 8655 08f9 78517565 		.ascii	"xQueueGiveMutexRecursive\000"
 8655      75654769 
 8655      76654D75 
 8655      74657852 
 8655      65637572 
 8656              	.LASF74:
 8657 0912 70727655 		.ascii	"prvUnlockQueue\000"
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 214


 8657      6E6C6F63 
 8657      6B517565 
 8657      756500
 8658              	.LASF82:
 8659 0921 78517565 		.ascii	"xQueueGenericReset\000"
 8659      75654765 
 8659      6E657269 
 8659      63526573 
 8659      657400
 8660              	.LASF119:
 8661 0934 78517565 		.ascii	"xQueueIsQueueEmptyFromISR\000"
 8661      75654973 
 8661      51756575 
 8661      65456D70 
 8661      74794672 
 8662              	.LASF5:
 8663 094e 7369676E 		.ascii	"signed char\000"
 8663      65642063 
 8663      68617200 
 8664              	.LASF9:
 8665 095a 73686F72 		.ascii	"short unsigned int\000"
 8665      7420756E 
 8665      7369676E 
 8665      65642069 
 8665      6E7400
 8666              	.LASF150:
 8667 096d 6D656D63 		.ascii	"memcpy\000"
 8667      707900
 8668              	.LASF56:
 8669 0974 78515545 		.ascii	"xQUEUE\000"
 8669      554500
 8670              	.LASF20:
 8671 097b 646F7562 		.ascii	"double\000"
 8671      6C6500
 8672              	.LASF71:
 8673 0982 78506F73 		.ascii	"xPosition\000"
 8673      6974696F 
 8673      6E00
 8674              	.LASF54:
 8675 098c 6352784C 		.ascii	"cRxLock\000"
 8675      6F636B00 
 8676              	.LASF140:
 8677 0994 756C5365 		.ascii	"ulSetInterruptMaskFromISR\000"
 8677      74496E74 
 8677      65727275 
 8677      70744D61 
 8677      736B4672 
 8678              	.LASF129:
 8679 09ae 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 8679      6B52656D 
 8679      6F766546 
 8679      726F6D45 
 8679      76656E74 
 8680              	.LASF85:
 8681 09c7 78517565 		.ascii	"xQueueCreateCountingSemaphore\000"
 8681      75654372 
 8681      65617465 
ARM GAS  C:\Users\Xwx47\AppData\Local\Temp\ccHQQITv.s 			page 215


 8681      436F756E 
 8681      74696E67 
 8682              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
